{"version":3,"file":"static/js/4820.473bc3a4.chunk.js","mappings":"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","sources":["common/helpers/dimensions.js","routing/site/algo/components/Fibonacci/Input.jsx","routing/site/algo/components/Fibonacci/index.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\"\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window\r\n  return {\r\n    width,\r\n    height,\r\n  }\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(() =>\r\n    getWindowDimensions()\r\n  )\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions())\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize)\r\n    return () => window.removeEventListener(\"resize\", handleResize)\r\n  }, [])\r\n\r\n  return windowDimensions\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardActions from \"@material-ui/core/CardActions\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport { FormControl } from \"@material-ui/core\"\r\n\r\n//Card component styling\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 180,\r\n  },\r\n})\r\n\r\n//text input field styling\r\nconst useStylesReddit = makeStyles((theme) => ({\r\n  root: {\r\n    border: \"1px solid #e2e2e1\",\r\n    overflow: \"hidden\",\r\n    borderRadius: 4,\r\n    backgroundColor: \"#fcfcfb\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\",\r\n    },\r\n    \"&$focused\": {\r\n      backgroundColor: \"#fff\",\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  focused: {},\r\n}))\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit()\r\n\r\n  return (\r\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\r\n  )\r\n}\r\n\r\nconst formStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst textStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst buttonStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst Input = React.memo(({ disabled, generateSequence }) => {\r\n  const [input, setInput] = useState(null)\r\n  const classes = useStyles()\r\n  const inputStyle = textStyles()\r\n  const buttonStyle = buttonStyles()\r\n  const formStyle = formStyles()\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <h2 className=\"bg-success text-white p-2\">\r\n        Generate Fibonacci Sequence of length N &gt; 2 with starting numbers 0\r\n        and 1\r\n      </h2>\r\n      <h4 className=\"text-primary p-2\">\r\n        Generates the sequence Fib(n) such that Fib(n) = Fib(n-1) + Fib(n-2)\r\n        where Fib(1) = 1, Fib(0) = 0\r\n      </h4>\r\n      <CardActions>\r\n        <FormControl className={`pb-3 pr-0 pl-2 pt-1 ${formStyle.root}`}>\r\n          <RedditTextField\r\n            label=\"Number\"\r\n            className={inputStyle.root}\r\n            variant=\"filled\"\r\n            id=\"reddit-input-base\"\r\n            onChange={(event) => {\r\n              setInput(event.target.value)\r\n            }}\r\n            value={input ? input : \"\"}\r\n            disabled={disabled}\r\n          />\r\n          <Button\r\n            className={buttonStyle.root}\r\n            disabled={disabled}\r\n            onClick={() => {\r\n              generateSequence(parseInt(input))\r\n              setInput(null)\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </FormControl>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n})\r\n\r\nInput.displayName = \"Fibonacci.Input\"\r\n\r\nexport default Input\r\n","import React, { useState, lazy, useEffect } from \"react\"\r\nimport { Grid } from \"@material-ui/core\"\r\nimport { Alert } from \"reactstrap\"\r\nimport { FixedSizeList as List } from \"react-window\"\r\nimport Input from \"./Input\"\r\nimport useWindowDimensions from \"common/helpers/dimensions\"\r\n\r\nconst LazyElement = lazy(() => import(\"common/components/Element\"))\r\n\r\nconst Fibonacci = () => {\r\n  const [input, setInput] = useState(null)\r\n  const [sequence, setSequence] = useState([])\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [alert, setAlert] = useState(null)\r\n\r\n  const updateSequence = (delay) => {\r\n    setTimeout(() => {\r\n      setSequence((prevSequence) => {\r\n        return prevSequence.concat([\r\n          prevSequence[prevSequence.length - 1] +\r\n            prevSequence[prevSequence.length - 2],\r\n        ])\r\n      })\r\n    }, delay)\r\n  }\r\n\r\n  const generateSequence = (input) => {\r\n    if (input < 2) {\r\n      setAlert({\r\n        text: \"Input should be greater than 2\",\r\n        type: \"danger\",\r\n      })\r\n    } else {\r\n      setInput(input)\r\n      setDisabled(true)\r\n      setAlert(null)\r\n      setSequence([0, 1])\r\n      for (let num = 2; num <= input; ++num) {\r\n        updateSequence(num * 100)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (sequence.length === parseInt(input)) {\r\n      setAlert({\r\n        text: \"Sequence has been generated\",\r\n        type: \"success\",\r\n      })\r\n      setDisabled(false)\r\n    }\r\n  }, [sequence.length, input])\r\n\r\n  return (\r\n    <Grid container>\r\n      {alert && (\r\n        <Grid item xs={12}>\r\n          <Alert\r\n            color={alert.type}\r\n            isOpen={!!alert.text}\r\n            toggle={() => setAlert(null)}\r\n          >\r\n            {alert.text}\r\n          </Alert>\r\n        </Grid>\r\n      )}\r\n      <Grid container className=\"text-center\">\r\n        <Grid item xs={12}>\r\n          <Input generateSequence={generateSequence} disabled={disabled} />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {parseInt(input) >= 2 && sequence.length > 0 && (\r\n        <Grid container className=\"text-center mt-4 mb-4\">\r\n          <LazyList sequence={sequence} />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst LazyList = ({ sequence }) => {\r\n  const { width: innerWidth } = useWindowDimensions()\r\n\r\n  return (\r\n    <List\r\n      height={120}\r\n      itemCount={sequence.length}\r\n      itemSize={400}\r\n      width={innerWidth}\r\n      direction=\"horizontal\"\r\n    >\r\n      {({ index, style }) => (\r\n        <Grid item xs={12} style={style} className=\"align-items-center\">\r\n          <LazyElement\r\n            data={{ value: sequence[index], index }}\r\n            highlight={index === sequence.length - 1}\r\n            type=\"array\"\r\n          />\r\n        </Grid>\r\n      )}\r\n    </List>\r\n  )\r\n}\r\n\r\nexport default Fibonacci\r\n"],"names":["getWindowDimensions","innerWidth","width","innerHeight","height","window","useWindowDimensions","windowDimensions","setWindowDimensions","useState","useEffect","handleResize","addEventListener","removeEventListener","useStyles","makeStyles","root","minWidth","useStylesReddit","theme","border","overflow","borderRadius","backgroundColor","transition","transitions","create","boxShadow","fade","palette","primary","main","borderColor","focused","RedditTextField","props","classes","_jsx","TextField","InputProps","disableUnderline","formStyles","margin","spacing","textStyles","buttonStyles","Input","React","_ref","disabled","generateSequence","input","setInput","inputStyle","buttonStyle","formStyle","_jsxs","Card","className","variant","children","CardActions","FormControl","label","id","onChange","event","target","value","Button","onClick","parseInt","color","size","displayName","LazyElement","lazy","LazyList","sequence","List","itemCount","length","itemSize","direction","_ref2","index","style","Grid","item","xs","data","highlight","type","Fibonacci","setSequence","setDisabled","alert","setAlert","text","container","Alert","isOpen","toggle","num","setTimeout","prevSequence","concat"],"sourceRoot":""}