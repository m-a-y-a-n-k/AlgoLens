{"version":3,"file":"static/js/1452.12193eeb.chunk.js","mappings":"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","sources":["routing/site/algo/components/Sieve/Range.jsx","routing/site/algo/components/Sieve/index.jsx","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","../node_modules/@material-ui/core/esm/FormHelperText/FormHelperText.js","../node_modules/@material-ui/core/esm/TextField/TextField.js"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  TextField,\r\n} from \"@material-ui/core\"\r\n\r\nconst Range = React.memo(({ handleRangeSubmit }) => {\r\n  const [start, setStart] = useState(null)\r\n  const [end, setEnd] = useState(null)\r\n\r\n  const handleSubmit = () => {\r\n    handleRangeSubmit(parseInt(start), parseInt(end))\r\n    setStart(null)\r\n    setEnd(null)\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        title={\"Primes in Range\"}\r\n        titleTypographyProps={{\r\n          variant: \"h5\",\r\n          color: \"primary\",\r\n        }}\r\n        subheader=\"Find primes from start to end number in range\"\r\n        subheaderTypographyProps={{\r\n          variant: \"subtitle1\",\r\n          color: \"secondary\",\r\n        }}\r\n      />\r\n      <CardContent style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n        <TextField\r\n          type=\"number\"\r\n          label=\"Start of Range\"\r\n          color=\"secondary\"\r\n          onChange={(event) => setStart(event.target.value)}\r\n          value={start ?? \"\"}\r\n        />\r\n        <TextField\r\n          type=\"number\"\r\n          label=\"End of Range\"\r\n          color=\"secondary\"\r\n          className=\"mt-2\"\r\n          onChange={(event) => setEnd(event.target.value)}\r\n          value={end ?? \"\"}\r\n        />\r\n        <Button\r\n          style={{\r\n            marginTop: 12,\r\n            backgroundColor: \"#403d4a\",\r\n            color: \"white\",\r\n          }}\r\n          type=\"submit\"\r\n          onClick={handleSubmit}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n})\r\n\r\nRange.displayName = \"Range\"\r\n\r\nexport default Range\r\n","import React, { lazy, useCallback, useState, Suspense, useMemo } from \"react\"\r\nimport { Grid } from \"@material-ui/core\"\r\nimport { Alert } from \"reactstrap\"\r\nimport Range from \"./Range\"\r\nimport { FixedSizeList as List } from \"react-window\"\r\n\r\nconst LazyElement = lazy(() => import(\"common/components/Element\"))\r\n\r\nconst Sieve = () => {\r\n  const [alert, setAlert] = useState(null)\r\n  const [start, setStart] = useState(0)\r\n  const [end, setEnd] = useState(-1)\r\n\r\n  const handleRangeSubmit = useCallback((start, end) => {\r\n    setStart(start)\r\n    setEnd(end)\r\n  }, [])\r\n\r\n  const sieve = useCallback((start, end) => {\r\n    if (end - start >= 1000 || end > 100000000) {\r\n      setAlert({ text: \"Too big range not supported yet\", type: \"danger\" })\r\n      return []\r\n    }\r\n    if (start > end) {\r\n      return []\r\n    }\r\n    let numbers = []\r\n    let primes = new Set()\r\n    let nonPrimes = new Set()\r\n    for (let num = start; num <= end; num++) {\r\n      numbers.push({ value: num, prime: num >= 2 })\r\n    }\r\n    for (let p = 2; p * p <= end; p++) {\r\n      if (!nonPrimes.has(p)) {\r\n        primes.add(p)\r\n        for (let x = 2 * p; x <= end; x += p) {\r\n          nonPrimes.add(x)\r\n        }\r\n      }\r\n    }\r\n    primes.forEach((prime) => {\r\n      let s = (start + prime - 1) % prime // Adjust for start value\r\n      for (; s < end - start; s += prime) {\r\n        numbers[s].prime = false\r\n      }\r\n    })\r\n    setAlert({\r\n      text: \"The prime ones are highlighted in green\",\r\n      type: \"success\",\r\n    })\r\n    return numbers\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {alert && (\r\n        <Alert\r\n          color={alert.type}\r\n          isOpen={!!alert.text}\r\n          toggle={() => setAlert(null)}\r\n        >\r\n          {alert.text}\r\n        </Alert>\r\n      )}\r\n      <Grid container>\r\n        <Grid container className=\"text-center\">\r\n          <Grid item xs={12}>\r\n            <Range handleRangeSubmit={handleRangeSubmit} />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container className=\"mt-4 mb-4 text-center\">\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <LazyList start={start} end={end} sieve={sieve} />\r\n          </Suspense>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nconst LazyList = ({ start, end, sieve }) => {\r\n  const data = useMemo(() => sieve(start, end), [start, end])\r\n\r\n  return (\r\n    <List height={400} itemCount={data.length} itemSize={100} width={\"100%\"}>\r\n      {({ index, style }) => (\r\n        <Grid item xs={12} style={style}>\r\n          <LazyElement\r\n            highlight={data[index].prime}\r\n            data={{ value: data[index].value, index }}\r\n            type=\"array\"\r\n          />\r\n        </Grid>\r\n      )}\r\n    </List>\r\n  )\r\n}\r\n\r\nexport default Sieve\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.caption, {\n      textAlign: 'left',\n      marginTop: 3,\n      margin: 0,\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      marginTop: 4\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` or `variant=\"outlined\"`. */\n    contained: {\n      marginLeft: 14,\n      marginRight: 14\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {}\n  };\n};\nvar FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'p' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      margin = props.margin,\n      required = props.required,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant', 'margin', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, (fcs.variant === 'filled' || fcs.variant === 'outlined') && classes.contained, className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required, fcs.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), children === ' ' ?\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : children);\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormHelperText'\n})(FormHelperText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport withStyles from '../styles/withStyles';\nvar variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {}\n};\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nvar TextField = /*#__PURE__*/React.forwardRef(function TextField(props, ref) {\n  var autoComplete = props.autoComplete,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      defaultValue = props.defaultValue,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      FormHelperTextProps = props.FormHelperTextProps,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      helperText = props.helperText,\n      hiddenLabel = props.hiddenLabel,\n      id = props.id,\n      InputLabelProps = props.InputLabelProps,\n      inputProps = props.inputProps,\n      InputProps = props.InputProps,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      placeholder = props.placeholder,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      _props$select = props.select,\n      select = _props$select === void 0 ? false : _props$select,\n      SelectProps = props.SelectProps,\n      type = props.type,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoFocus\", \"children\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"hiddenLabel\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"rowsMax\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('Material-UI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  var InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      var _InputLabelProps$requ;\n\n      var displayRequired = (_InputLabelProps$requ = InputLabelProps === null || InputLabelProps === void 0 ? void 0 : InputLabelProps.required) !== null && _InputLabelProps$requ !== void 0 ? _InputLabelProps$requ : required;\n      InputMore.label = /*#__PURE__*/React.createElement(React.Fragment, null, label, displayRequired && \"\\xA0*\");\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  var helperTextId = helperText && id ? \"\".concat(id, \"-helper-text\") : undefined;\n  var inputLabelId = label && id ? \"\".concat(id, \"-label\") : undefined;\n  var InputComponent = variantComponent[variant];\n  var InputElement = /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    rowsMax: rowsMax,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/React.createElement(FormControl, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant\n  }, other), label && /*#__PURE__*/React.createElement(InputLabel, _extends({\n    htmlFor: id,\n    id: inputLabelId\n  }, InputLabelProps), label), select ? /*#__PURE__*/React.createElement(Select, _extends({\n    \"aria-describedby\": helperTextId,\n    id: id,\n    labelId: inputLabelId,\n    value: value,\n    input: InputElement\n  }, SelectProps), children) : InputElement, helperText && /*#__PURE__*/React.createElement(FormHelperText, _extends({\n    id: helperTextId\n  }, FormHelperTextProps), helperText));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default value of the `input` element.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * If `true`, a textarea element will be rendered instead of an input.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element` will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTextField'\n})(TextField);"],"names":["Range","React","_ref","handleRangeSubmit","start","setStart","useState","end","setEnd","_jsxs","Card","children","_jsx","CardHeader","title","titleTypographyProps","variant","color","subheader","subheaderTypographyProps","CardContent","style","display","flexDirection","TextField","type","label","onChange","event","target","value","className","Button","marginTop","backgroundColor","onClick","handleSubmit","parseInt","displayName","LazyElement","lazy","LazyList","sieve","data","useMemo","List","height","itemCount","length","itemSize","width","_ref2","index","Grid","item","xs","highlight","prime","Sieve","alert","setAlert","useCallback","text","numbers","primes","Set","nonPrimes","num","push","p","has","add","x","forEach","s","_Fragment","Alert","isOpen","toggle","container","Suspense","fallback","props","ref","classes","_props$component","component","Component","other","_objectWithoutProperties","_extends","clsx","root","withStyles","padding","paddingBottom","name","action","avatar","_props$disableTypogra","disableTypography","subheaderProp","titleProp","Typography","content","alignItems","flex","marginRight","alignSelf","FormHelperText","disabled","error","filled","focused","margin","required","muiFormControl","useFormControl","fcs","formControlState","states","contained","marginDense","dangerouslySetInnerHTML","__html","theme","palette","secondary","typography","caption","textAlign","main","marginLeft","variantComponent","standard","Input","FilledInput","outlined","OutlinedInput","autoComplete","_props$autoFocus","autoFocus","_props$color","defaultValue","_props$disabled","_props$error","FormHelperTextProps","_props$fullWidth","fullWidth","helperText","hiddenLabel","id","InputLabelProps","inputProps","InputProps","inputRef","_props$multiline","multiline","onBlur","onFocus","placeholder","_props$required","rows","rowsMax","_props$select","select","SelectProps","_props$variant","InputMore","shrink","notched","_InputLabelProps$requ","displayRequired","native","undefined","helperTextId","concat","inputLabelId","InputComponent","InputElement","FormControl","InputLabel","htmlFor","Select","labelId","input"],"sourceRoot":""}