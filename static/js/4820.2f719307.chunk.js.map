{"version":3,"file":"static/js/4820.2f719307.chunk.js","mappings":"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","sources":["common/helpers/dimensions.js","routing/site/algo/components/Fibonacci/Input.jsx","routing/site/algo/components/Fibonacci/index.jsx","../node_modules/@material-ui/core/esm/FormHelperText/FormHelperText.js","../node_modules/@material-ui/core/esm/TextField/TextField.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window\r\n  return {\r\n    width,\r\n    height,\r\n  }\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(() =>\r\n    getWindowDimensions()\r\n  )\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions())\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize)\r\n    return () => window.removeEventListener(\"resize\", handleResize)\r\n  }, [])\r\n\r\n  return windowDimensions\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardActions from \"@material-ui/core/CardActions\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport { FormControl } from \"@material-ui/core\"\r\n\r\n//Card component styling\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 180,\r\n  },\r\n})\r\n\r\n//text input field styling\r\nconst useStylesReddit = makeStyles((theme) => ({\r\n  root: {\r\n    border: \"1px solid #e2e2e1\",\r\n    overflow: \"hidden\",\r\n    borderRadius: 4,\r\n    backgroundColor: \"#fcfcfb\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\",\r\n    },\r\n    \"&$focused\": {\r\n      backgroundColor: \"#fff\",\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  focused: {},\r\n}))\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit()\r\n\r\n  return (\r\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\r\n  )\r\n}\r\n\r\nconst styleforform = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst stylefortext = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst styleforbutton = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst Input = React.memo(({ disabled, generateSequence }) => {\r\n  const [input, setInput] = useState(null)\r\n  const classes = useStyles()\r\n  const inputstyle = stylefortext()\r\n  const buttonstyle = styleforbutton()\r\n  const formstyle = styleforform()\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <h2 className=\"bg-success text-white p-2\">\r\n        Generate Fibonacci Sequence of length N &gt; 2 with starting numbers 0\r\n        and 1\r\n      </h2>\r\n      <h4 className=\"text-primary p-2\">\r\n        Generates the sequence Fib(n) such that Fib(n) = Fib(n-1) + Fib(n-2)\r\n        where Fib(1) = 1, Fib(0) = 0\r\n      </h4>\r\n      <CardActions>\r\n        <FormControl className={`pb-3 pr-0 pl-2 pt-1 ${formstyle.root}`}>\r\n          <RedditTextField\r\n            label=\"Number\"\r\n            className={inputstyle.root}\r\n            variant=\"filled\"\r\n            id=\"reddit-input-base\"\r\n            onChange={(event) => {\r\n              setInput(event.target.value)\r\n            }}\r\n            value={input ? input : \"\"}\r\n            disabled={disabled}\r\n          />\r\n          <Button\r\n            className={buttonstyle.root}\r\n            disabled={disabled}\r\n            onClick={() => {\r\n              generateSequence(parseInt(input))\r\n              setInput(null)\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </FormControl>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n})\r\n\r\nInput.displayName = \"Fibonacci.Input\"\r\n\r\nexport default Input\r\n","import React, { useState, lazy, useEffect } from \"react\"\r\nimport { Grid } from \"@material-ui/core\"\r\nimport { Alert } from \"reactstrap\"\r\nimport { FixedSizeList as List } from \"react-window\"\r\nimport Input from \"./Input\"\r\nimport useWindowDimensions from \"common/helpers/dimensions\"\r\n\r\nconst LazyElement = lazy(() => import(\"common/components/Element\"))\r\n\r\nconst Fibonacci = () => {\r\n  const [input, setInput] = useState(null)\r\n  const [sequence, setSequence] = useState([])\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [alert, setAlert] = useState(null)\r\n\r\n  const updateSequence = (delay) => {\r\n    setTimeout(() => {\r\n      setSequence((prevSequence) => {\r\n        return prevSequence.concat([\r\n          prevSequence[prevSequence.length - 1] +\r\n            prevSequence[prevSequence.length - 2],\r\n        ])\r\n      })\r\n    }, delay)\r\n  }\r\n\r\n  const generateSequence = (input) => {\r\n    if (input < 2) {\r\n      setAlert({\r\n        text: \"Input should be greater than 2\",\r\n        type: \"danger\",\r\n      })\r\n    } else {\r\n      setInput(input)\r\n      setDisabled(true)\r\n      setAlert(null)\r\n      setSequence([0, 1])\r\n      for (let num = 2; num <= input; ++num) {\r\n        updateSequence(num * 100)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (sequence.length === parseInt(input)) {\r\n      setAlert({\r\n        text: \"Sequence has been generated\",\r\n        type: \"success\",\r\n      })\r\n      setDisabled(false)\r\n    }\r\n  }, [sequence.length, input])\r\n\r\n  return (\r\n    <Grid container>\r\n      {alert && (\r\n        <Grid item xs={12}>\r\n          <Alert\r\n            color={alert.type}\r\n            isOpen={!!alert.text}\r\n            toggle={() => setAlert(null)}\r\n          >\r\n            {alert.text}\r\n          </Alert>\r\n        </Grid>\r\n      )}\r\n      <Grid container className=\"text-center\">\r\n        <Grid item xs={12}>\r\n          <Input generateSequence={generateSequence} disabled={disabled} />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {parseInt(input) >= 2 && sequence.length > 0 && (\r\n        <Grid container className=\"text-center mt-4 mb-4\">\r\n          <LazyList sequence={sequence} />\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst LazyList = ({ sequence }) => {\r\n  const { width: innerWidth } = useWindowDimensions()\r\n\r\n  return (\r\n    <List\r\n      height={120}\r\n      itemCount={sequence.length}\r\n      itemSize={400}\r\n      width={innerWidth}\r\n      direction=\"horizontal\"\r\n    >\r\n      {({ index, style }) => (\r\n        <Grid item xs={12} style={style} className=\"align-items-center\">\r\n          <LazyElement\r\n            data={{ value: sequence[index], index }}\r\n            highlight={index === sequence.length - 1}\r\n            type=\"array\"\r\n          />\r\n        </Grid>\r\n      )}\r\n    </List>\r\n  )\r\n}\r\n\r\nexport default Fibonacci\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.caption, {\n      textAlign: 'left',\n      marginTop: 3,\n      margin: 0,\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      marginTop: 4\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` or `variant=\"outlined\"`. */\n    contained: {\n      marginLeft: 14,\n      marginRight: 14\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {}\n  };\n};\nvar FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'p' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      margin = props.margin,\n      required = props.required,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant', 'margin', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, (fcs.variant === 'filled' || fcs.variant === 'outlined') && classes.contained, className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required, fcs.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), children === ' ' ?\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : children);\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormHelperText'\n})(FormHelperText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport withStyles from '../styles/withStyles';\nvar variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {}\n};\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nvar TextField = /*#__PURE__*/React.forwardRef(function TextField(props, ref) {\n  var autoComplete = props.autoComplete,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      defaultValue = props.defaultValue,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      FormHelperTextProps = props.FormHelperTextProps,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      helperText = props.helperText,\n      hiddenLabel = props.hiddenLabel,\n      id = props.id,\n      InputLabelProps = props.InputLabelProps,\n      inputProps = props.inputProps,\n      InputProps = props.InputProps,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      placeholder = props.placeholder,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      _props$select = props.select,\n      select = _props$select === void 0 ? false : _props$select,\n      SelectProps = props.SelectProps,\n      type = props.type,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoFocus\", \"children\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"hiddenLabel\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"rowsMax\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('Material-UI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  var InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      var _InputLabelProps$requ;\n\n      var displayRequired = (_InputLabelProps$requ = InputLabelProps === null || InputLabelProps === void 0 ? void 0 : InputLabelProps.required) !== null && _InputLabelProps$requ !== void 0 ? _InputLabelProps$requ : required;\n      InputMore.label = /*#__PURE__*/React.createElement(React.Fragment, null, label, displayRequired && \"\\xA0*\");\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  var helperTextId = helperText && id ? \"\".concat(id, \"-helper-text\") : undefined;\n  var inputLabelId = label && id ? \"\".concat(id, \"-label\") : undefined;\n  var InputComponent = variantComponent[variant];\n  var InputElement = /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    rowsMax: rowsMax,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/React.createElement(FormControl, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant\n  }, other), label && /*#__PURE__*/React.createElement(InputLabel, _extends({\n    htmlFor: id,\n    id: inputLabelId\n  }, InputLabelProps), label), select ? /*#__PURE__*/React.createElement(Select, _extends({\n    \"aria-describedby\": helperTextId,\n    id: id,\n    labelId: inputLabelId,\n    value: value,\n    input: InputElement\n  }, SelectProps), children) : InputElement, helperText && /*#__PURE__*/React.createElement(FormHelperText, _extends({\n    id: helperTextId\n  }, FormHelperTextProps), helperText));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default value of the `input` element.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * If `true`, a textarea element will be rendered instead of an input.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element` will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTextField'\n})(TextField);"],"names":["getWindowDimensions","innerWidth","width","innerHeight","height","window","useWindowDimensions","windowDimensions","setWindowDimensions","useState","useEffect","handleResize","addEventListener","removeEventListener","useStyles","makeStyles","root","minWidth","useStylesReddit","theme","border","overflow","borderRadius","backgroundColor","transition","transitions","create","boxShadow","fade","palette","primary","main","borderColor","focused","RedditTextField","props","classes","_jsx","TextField","InputProps","disableUnderline","styleforform","margin","spacing","stylefortext","styleforbutton","Input","React","_ref","disabled","generateSequence","input","setInput","inputstyle","buttonstyle","formstyle","_jsxs","Card","className","variant","children","CardActions","FormControl","label","id","onChange","event","target","value","Button","onClick","parseInt","color","size","displayName","LazyElement","lazy","LazyList","sequence","List","itemCount","length","itemSize","direction","_ref2","index","style","Grid","item","xs","data","highlight","type","Fibonacci","setSequence","setDisabled","alert","setAlert","text","container","Alert","isOpen","toggle","num","setTimeout","prevSequence","concat","FormHelperText","ref","_props$component","component","Component","other","error","filled","required","_objectWithoutProperties","muiFormControl","useFormControl","fcs","formControlState","states","_extends","clsx","contained","marginDense","dangerouslySetInnerHTML","__html","withStyles","secondary","typography","caption","textAlign","marginTop","marginLeft","marginRight","name","variantComponent","standard","FilledInput","outlined","OutlinedInput","autoComplete","_props$autoFocus","autoFocus","_props$color","defaultValue","_props$disabled","_props$error","FormHelperTextProps","_props$fullWidth","fullWidth","helperText","hiddenLabel","InputLabelProps","inputProps","inputRef","_props$multiline","multiline","onBlur","onFocus","placeholder","_props$required","rows","rowsMax","_props$select","select","SelectProps","_props$variant","InputMore","shrink","notched","_InputLabelProps$requ","displayRequired","native","undefined","helperTextId","inputLabelId","InputComponent","InputElement","InputLabel","htmlFor","Select","labelId"],"sourceRoot":""}