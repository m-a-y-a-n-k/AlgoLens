{"version":3,"file":"static/js/660.fb74c0b6.chunk.js","mappings":"8IACA,QAA4B,4BAA5B,EAAgE,wBAAhE,EAA8F,sBAA9F,EAA2H,uBAA3H,EAA4J,0BAA5J,EAA8L,wB,aCE9L,MAAMA,EAAQ,CACZC,EAAG,CAAC,IAAK,KACTC,EAAG,CAAC,IAAK,IAAK,KACdC,EAAG,CAAC,IAAK,IAAK,KACdC,EAAG,CAAC,IAAK,KACTC,EAAG,CAAC,IAAK,KACTC,EAAG,CAAC,IAAK,KACTC,EAAG,CAAC,KACJC,EAAG,CAAC,KACJC,EAAG,CAAC,KACJC,EAAG,CAAC,MAGAC,EAAY,CAChBV,EAAG,CAAEW,EAAG,IAAKC,EAAG,KAChBX,EAAG,CAAEU,EAAG,IAAKC,EAAG,IAChBV,EAAG,CAAES,EAAG,IAAKC,EAAG,KAChBT,EAAG,CAAEQ,EAAG,IAAKC,EAAG,IAChBR,EAAG,CAAEO,EAAG,IAAKC,EAAG,KAChBP,EAAG,CAAEM,EAAG,IAAKC,EAAG,KAChBN,EAAG,CAAEK,EAAG,IAAKC,EAAG,KAChBL,EAAG,CAAEI,EAAG,IAAKC,EAAG,IAChBJ,EAAG,CAAEG,EAAG,IAAKC,EAAG,KAChBH,EAAG,CAAEE,EAAG,IAAKC,EAAG,MAgFlB,EA7EiBC,KACf,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAEvCC,EAAAA,EAAAA,YAAU,KACRC,EAAO,IAAI,GACV,IAEH,MAAMC,EAASC,GAAO,IAAIC,SAASC,GAAYC,WAAWD,EAASF,KAE7DF,EAASM,UACb,MAAMC,EAAI,CAACC,GACLC,EAAO,IAAIC,IAEjB,KAAOH,EAAEI,QAAQ,CACf,MAAMC,EAAOL,EAAEM,QACXJ,EAAKK,IAAIF,KACbH,EAAKM,IAAIH,GAETf,GAAYmB,GAAM,IAAIA,EAAGJ,WACnBX,EAAM,KAEZpB,EAAM+B,GAAMK,SAASC,IACdT,EAAKK,IAAII,IAAMX,EAAEY,KAAKD,EAAI,IAEnC,GAGF,OACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAaC,SAAC,+CAC7BH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAWC,SAAA,CAExBE,OAAOC,QAAQ7C,GAAO8C,KAAIC,IAAA,IAAEhB,EAAMiB,GAAUD,EAAA,OAC3CC,EAAUF,KAAKT,IACb,MAAQzB,EAAGqC,EAAIpC,EAAGqC,GAAOvC,EAAUoB,IAC3BnB,EAAGuC,EAAItC,EAAGuC,GAAOzC,EAAU0B,GACnC,OACEM,EAAAA,EAAAA,KAAA,QAEEM,GAAIA,EACJC,GAAIA,EACJC,GAAIA,EACJC,GAAIA,EACJC,OAAO,OACPC,YAAY,KAAG,GAAAC,OANPxB,EAAI,KAAAwB,OAAIlB,GAOhB,GAEJ,IAIHO,OAAOC,QAAQlC,GAAWmC,KAAIU,IAAA,IAAEzB,GAAM,EAAEnB,EAAC,EAAEC,IAAI2C,EAAA,OAC9CjB,EAAAA,EAAAA,MAAA,KAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,UACEc,GAAI7C,EACJ8C,GAAI7C,EACJ8C,EAAE,KACFnB,UAAS,GAAAe,OAAKd,EAAW,KAAAc,OACvBxC,EAAQ6C,SAAS7B,GAAQU,EAAiB,OAG9CE,EAAAA,EAAAA,KAAA,QACE/B,EAAGA,EACHC,EAAGA,EACHgD,WAAW,SACXC,GAAG,OACHtB,UAAWC,EAAaC,SAEvBX,MAhBGA,EAkBJ,SAGJ,C","sources":["webpack://AlgoLens/./src/routing/site/algo/components/BFSGraph/BFSGraph.module.css?0cf0","routing/site/algo/components/BFSGraph/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"BFSGraph_container__ninmW\",\"title\":\"BFSGraph_title__MOpvV\",\"svg\":\"BFSGraph_svg__UZdz-\",\"node\":\"BFSGraph_node__7KNCw\",\"visited\":\"BFSGraph_visited__ivimK\",\"label\":\"BFSGraph_label__3kYq7\"};","import React, { useState, useEffect } from \"react\"\nimport styles from \"./BFSGraph.module.css\"\n\nconst graph = {\n  A: [\"B\", \"C\"],\n  B: [\"A\", \"D\", \"E\"],\n  C: [\"A\", \"F\", \"G\"],\n  D: [\"B\", \"H\"],\n  E: [\"B\", \"I\"],\n  F: [\"C\", \"J\"],\n  G: [\"C\"],\n  H: [\"D\"],\n  I: [\"E\"],\n  J: [\"F\"],\n}\n\nconst positions = {\n  A: { x: 100, y: 150 },\n  B: { x: 220, y: 80 },\n  C: { x: 220, y: 220 },\n  D: { x: 340, y: 40 },\n  E: { x: 340, y: 120 },\n  F: { x: 340, y: 200 },\n  G: { x: 340, y: 280 },\n  H: { x: 460, y: 40 },\n  I: { x: 460, y: 120 },\n  J: { x: 460, y: 200 },\n}\n\nconst BFSGraph = () => {\n  const [visited, setVisited] = useState([])\n\n  useEffect(() => {\n    runBFS(\"A\") // start BFS at node A\n  }, [])\n\n  const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n\n  const runBFS = async (start) => {\n    const q = [start]\n    const seen = new Set()\n\n    while (q.length) {\n      const node = q.shift()\n      if (seen.has(node)) continue\n      seen.add(node)\n\n      setVisited((v) => [...v, node])\n      await sleep(700) // animation delay\n\n      graph[node].forEach((nbr) => {\n        if (!seen.has(nbr)) q.push(nbr)\n      })\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.title}>Breadth First Search (Graph) üåê</h2>\n      <svg className={styles.svg}>\n        {/* Render edges */}\n        {Object.entries(graph).map(([node, neighbors]) =>\n          neighbors.map((nbr) => {\n            const { x: x1, y: y1 } = positions[node]\n            const { x: x2, y: y2 } = positions[nbr]\n            return (\n              <line\n                key={`${node}-${nbr}`}\n                x1={x1}\n                y1={y1}\n                x2={x2}\n                y2={y2}\n                stroke=\"#999\"\n                strokeWidth=\"2\"\n              />\n            )\n          })\n        )}\n\n        {/* Render nodes */}\n        {Object.entries(positions).map(([node, { x, y }]) => (\n          <g key={node}>\n            <circle\n              cx={x}\n              cy={y}\n              r=\"25\"\n              className={`${styles.node} ${\n                visited.includes(node) ? styles.visited : \"\"\n              }`}\n            />\n            <text\n              x={x}\n              y={y}\n              textAnchor=\"middle\"\n              dy=\".3em\"\n              className={styles.label}\n            >\n              {node}\n            </text>\n          </g>\n        ))}\n      </svg>\n    </div>\n  )\n}\n\nexport default BFSGraph\n"],"names":["graph","A","B","C","D","E","F","G","H","I","J","positions","x","y","BFSGraph","visited","setVisited","useState","useEffect","runBFS","sleep","ms","Promise","resolve","setTimeout","async","q","start","seen","Set","length","node","shift","has","add","v","forEach","nbr","push","_jsxs","className","styles","children","_jsx","Object","entries","map","_ref","neighbors","x1","y1","x2","y2","stroke","strokeWidth","concat","_ref2","cx","cy","r","includes","textAnchor","dy"],"sourceRoot":""}