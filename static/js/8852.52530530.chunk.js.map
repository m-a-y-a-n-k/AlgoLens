{"version":3,"file":"static/js/8852.52530530.chunk.js","mappings":"8JAGA,MAAMA,EAAeC,EAAAA,GAAAA,MAAc;gBAClBC,GAAUA,EAAMC;;;;;;;;;;;;;;;;;;;;;;EAgCjC,EAReC,IAAkC,IAAjC,MAAEC,EAAK,QAAEC,EAAO,QAAEH,GAASC,EACzC,OACEG,EAAAA,EAAAA,KAACP,EAAY,CAACM,QAASA,EAASH,QAASA,EAAQK,SAC9CH,GACY,EC7BbI,EAAiBR,EAAAA,GAAAA,GAAW;;;;;;;;;EAelC,EAJgBG,IAAgB,IAAf,MAAEM,GAAON,EACxB,OAAOG,EAAAA,EAAAA,KAACE,EAAc,CAAAD,SAAEE,GAAuB,E,yBCZjD,MAwBA,EAxB2BC,KACzB,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,IAiBvC,MAAO,CACLF,UACAG,kBAjByBV,IACzB,GAAc,MAAVA,EACFQ,EAAW,SACN,GAAc,MAAVR,EACT,IACE,MAAMW,GAASC,EAAAA,EAAAA,IAASL,GACxBC,GAAWK,EAAAA,EAAAA,KAAOF,EAAQ,CAAEG,UAAW,KAGzC,CAFE,MAAOC,GACPP,EAAW,QACb,MAEAA,EAAWD,EAAUP,EACvB,EAMD,EClBGgB,EAASpB,EAAAA,GAAAA,EAAU;;;;EAMnBqB,EAAoBrB,EAAAA,GAAAA,GAAW;;;;;;;EAS/BsB,EAAatB,EAAAA,GAAAA,GAAW;;;;EAqF9B,EA/EmBuB,KACjB,MAAM,QAAEZ,EAAO,kBAAEG,GAAsBJ,IAEjCc,EAAW,CACf,EAAG,eACH,EAAG,eACH,EAAG,eACH,MAAO,SACP,QAAS,cACT,EAAG,eACH,EAAG,eACH,EAAG,eACH,MAAO,SACP,OAAQ,cACR,EAAG,eACH,EAAG,eACH,EAAG,eACH,MAAO,SACP,OAAQ,cACR,EAAG,eACH,IAAK,YACL,IAAK,YACL,MAAO,SACP,OAAQ,cACR,IAAK,YACL,IAAK,YACL,IAAK,YACLC,EAAG,SACHC,GAAI,SACJC,EAAG,eAgCL,OACEC,EAAAA,EAAAA,MAACP,EAAiB,CAAAd,SAAA,EAChBD,EAAAA,EAAAA,KAACc,EAAM,CAAAb,SAAC,yBACRD,EAAAA,EAAAA,KAACuB,EAAO,CAACpB,MAAOE,KAChBL,EAAAA,EAAAA,KAACgB,EAAU,CAAAf,SAjCC,CACd,IACA,IACA,IACA,MACA,QACA,IACA,IACA,IACA,MACA,OACA,IACA,IACA,IACA,MACA,OACA,IACA,IACA,IACA,MACA,OACA,IACA,IACA,IACA,IACA,KACA,KAQauB,KAAK1B,IACZE,EAAAA,EAAAA,KAACyB,EAAM,CAEL3B,MAAOA,EACPF,QAASsB,EAASpB,GAClBC,QAASA,IAAMS,EAAkBV,IAH5BA,SAOO,C","sources":["routing/site/math/components/AdvancedCalculator/Button.jsx","routing/site/math/components/AdvancedCalculator/Display.jsx","common/hooks/useCalculatorState.jsx","routing/site/math/components/AdvancedCalculator/index.jsx"],"sourcesContent":["import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst StyledButton = styled.button`\r\n  background: ${(props) => props.bgColor};\r\n  border: none;\r\n  color: white;\r\n  padding: 16px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 1rem;\r\n  margin: 2px;\r\n  transition: background-color 0.4s ease;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n\r\n  &:hover {\r\n    filter: brightness(85%);\r\n  }\r\n\r\n  &:active {\r\n    filter: brightness(75%);\r\n    box-shadow: 0 5px #666;\r\n    transform: translateY(4px);\r\n  }\r\n`\r\n\r\nconst Button = ({ label, onClick, bgColor }) => {\r\n  return (\r\n    <StyledButton onClick={onClick} bgColor={bgColor}>\r\n      {label}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst DisplayWrapper = styled.div`\r\n  background: #333;\r\n  color: white;\r\n  text-align: right;\r\n  padding: 20px;\r\n  font-size: 2em;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n  overflow-x: auto;\r\n`\r\n\r\nconst Display = ({ value }) => {\r\n  return <DisplayWrapper>{value}</DisplayWrapper>\r\n}\r\n\r\nexport default Display\r\n","import { useState } from \"react\"\r\nimport { evaluate, format } from \"mathjs\"\r\n\r\nconst useCalculatorState = () => {\r\n  const [display, setDisplay] = useState(\"\")\r\n\r\n  const handleButtonClick = (label) => {\r\n    if (label === \"C\") {\r\n      setDisplay(\"\")\r\n    } else if (label === \"=\") {\r\n      try {\r\n        const result = evaluate(display)\r\n        setDisplay(format(result, { precision: 14 }))\r\n      } catch (error) {\r\n        setDisplay(\"Error\")\r\n      }\r\n    } else {\r\n      setDisplay(display + label)\r\n    }\r\n  }\r\n\r\n  return {\r\n    display,\r\n    handleButtonClick,\r\n  }\r\n}\r\n\r\nexport default useCalculatorState\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Button from \"./Button\"\r\nimport Display from \"./Display\"\r\nimport useCalculatorState from \"common/hooks/useCalculatorState\"\r\n\r\nconst Header = styled.h1`\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  color: #333;\r\n`\r\n\r\nconst CalculatorWrapper = styled.div`\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background: #f4f4f4;\r\n  border-radius: 8px;\r\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\r\n`\r\n\r\nconst ButtonGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-gap: 10px;\r\n`\r\n\r\nconst Calculator = () => {\r\n  const { display, handleButtonClick } = useCalculatorState()\r\n\r\n  const colorMap = {\r\n    7: \"midnightblue\",\r\n    8: \"midnightblue\",\r\n    9: \"midnightblue\",\r\n    \" / \": \"orange\",\r\n    \"sqrt(\": \"forestgreen\",\r\n    4: \"midnightblue\",\r\n    5: \"midnightblue\",\r\n    6: \"midnightblue\",\r\n    \" * \": \"orange\",\r\n    \"pow(\": \"forestgreen\",\r\n    1: \"midnightblue\",\r\n    2: \"midnightblue\",\r\n    3: \"midnightblue\",\r\n    \" - \": \"orange\",\r\n    \"sin(\": \"forestgreen\",\r\n    0: \"midnightblue\",\r\n    \".\": \"firebrick\",\r\n    \"=\": \"firebrick\",\r\n    \" + \": \"orange\",\r\n    \"cos(\": \"forestgreen\",\r\n    \",\": \"firebrick\",\r\n    \"(\": \"firebrick\",\r\n    \")\": \"firebrick\",\r\n    e: \"purple\",\r\n    pi: \"purple\",\r\n    C: \"springgreen\",\r\n  }\r\n\r\n  const buttons = [\r\n    \"7\",\r\n    \"8\",\r\n    \"9\",\r\n    \" / \",\r\n    \"sqrt(\",\r\n    \"4\",\r\n    \"5\",\r\n    \"6\",\r\n    \" * \",\r\n    \"pow(\",\r\n    \"1\",\r\n    \"2\",\r\n    \"3\",\r\n    \" - \",\r\n    \"sin(\",\r\n    \"0\",\r\n    \".\",\r\n    \"=\",\r\n    \" + \",\r\n    \"cos(\",\r\n    \",\",\r\n    \"(\",\r\n    \")\",\r\n    \"e\",\r\n    \"pi\",\r\n    \"C\",\r\n  ]\r\n\r\n  return (\r\n    <CalculatorWrapper>\r\n      <Header>Advanced Calculator</Header>\r\n      <Display value={display} />\r\n      <ButtonGrid>\r\n        {buttons.map((label) => (\r\n          <Button\r\n            key={label}\r\n            label={label}\r\n            bgColor={colorMap[label]}\r\n            onClick={() => handleButtonClick(label)}\r\n          />\r\n        ))}\r\n      </ButtonGrid>\r\n    </CalculatorWrapper>\r\n  )\r\n}\r\n\r\nexport default Calculator\r\n"],"names":["StyledButton","styled","props","bgColor","_ref","label","onClick","_jsx","children","DisplayWrapper","value","useCalculatorState","display","setDisplay","useState","handleButtonClick","result","evaluate","format","precision","error","Header","CalculatorWrapper","ButtonGrid","Calculator","colorMap","e","pi","C","_jsxs","Display","map","Button"],"sourceRoot":""}