{"version":3,"file":"static/js/6958.8206332a.chunk.js","mappings":"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","sources":["routing/site/physics/components/RollingMotion/ControlPanel.jsx","routing/site/physics/components/RollingMotion/InclinedPlane.jsx","routing/site/physics/components/RollingMotion/index.jsx"],"sourcesContent":["import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Panel = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  padding: 20px;\r\n  background: #f9f9f9;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  max-width: 400px;\r\n  width: 100%;\r\n`\r\n\r\nconst Label = styled.label`\r\n  margin: 10px 0;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-weight: bold;\r\n  color: #333;\r\n`\r\n\r\nconst Input = styled.input`\r\n  padding: 5px;\r\n  border: 2px solid #ddd;\r\n  border-radius: 5px;\r\n  width: 60%;\r\n  font-size: 1rem;\r\n`\r\n\r\nconst Select = styled.select`\r\n  padding: 5px;\r\n  border: 2px solid #ddd;\r\n  border-radius: 5px;\r\n  width: 65%;\r\n  font-size: 1rem;\r\n`\r\n\r\nconst Button = styled.button`\r\n  padding: 10px 20px;\r\n  margin: 10px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: #0056b3;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`\r\n\r\nconst ControlPanel = ({\r\n  angle,\r\n  setAngle,\r\n  initialPosition,\r\n  setInitialPosition,\r\n}) => {\r\n  const updateAngle = (e) => {\r\n    const updatedAngle = Number(e.target.value)\r\n    if (updatedAngle >= 0 && updatedAngle <= 90) setAngle(updatedAngle)\r\n  }\r\n\r\n  return (\r\n    <Panel>\r\n      <Label>\r\n        Angle (0 to 90 degrees):\r\n        <Input type=\"number\" value={angle} onChange={updateAngle} />\r\n      </Label>\r\n      <Label>\r\n        Initial Position:\r\n        <Select\r\n          value={initialPosition}\r\n          onChange={(e) => setInitialPosition(e.target.value)}\r\n        >\r\n          <option value=\"onGround\">Left</option>\r\n          <option value=\"onPlane\">Right</option>\r\n        </Select>\r\n      </Label>\r\n      <div>\r\n        <Button onClick={() => setAngle(30)}>Reset Angle</Button>\r\n        <Button onClick={() => setInitialPosition(\"onPlane\")}>\r\n          Reset Position\r\n        </Button>\r\n      </div>\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default ControlPanel\r\n","import React, { useEffect, useRef } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst CanvasContainer = styled.div`\r\n  position: relative;\r\n  width: 400px;\r\n  height: 400px;\r\n  border: 1px solid #000;\r\n`\r\n\r\nconst PLANE_HALF_LENGTH = 100\r\n\r\nconst InclinedPlane = ({ angle, initialPosition }) => {\r\n  const canvasRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current\r\n    const ctx = canvas.getContext(\"2d\")\r\n    const width = canvas.width\r\n    const height = canvas.height\r\n\r\n    const drawInclinedPlane = () => {\r\n      ctx.clearRect(0, 0, width, height)\r\n      ctx.save()\r\n      ctx.translate(width / 2, height / 2)\r\n      ctx.rotate((-angle * Math.PI) / 180)\r\n\r\n      ctx.beginPath()\r\n      ctx.moveTo(-PLANE_HALF_LENGTH, 0)\r\n      ctx.lineTo(PLANE_HALF_LENGTH, 0)\r\n      ctx.lineWidth = 4\r\n      ctx.strokeStyle = \"#000\"\r\n      ctx.stroke()\r\n\r\n      ctx.restore()\r\n    }\r\n\r\n    const randomGradient = (size) => {\r\n      const gradient = ctx.createLinearGradient(-size, 0, size, 0)\r\n      gradient.addColorStop(0, \"royalblue\")\r\n      gradient.addColorStop(1, \"#FFFFFF\")\r\n      return gradient\r\n    }\r\n\r\n    const drawRollingBall = (x, y, rotationAngle) => {\r\n      ctx.save()\r\n      ctx.translate(x, y)\r\n      ctx.rotate(rotationAngle)\r\n      ctx.beginPath()\r\n      ctx.arc(0, 0, 15, 0, 2 * Math.PI)\r\n      ctx.fillStyle = randomGradient(15)\r\n      ctx.fill()\r\n      ctx.lineWidth = 2\r\n      ctx.strokeStyle = \"#000\"\r\n      ctx.stroke()\r\n      ctx.restore()\r\n    }\r\n\r\n    const drawForces = (x, y) => {\r\n      ctx.save()\r\n      ctx.strokeStyle = \"red\"\r\n      ctx.lineWidth = 2\r\n\r\n      // Gravity force\r\n      ctx.beginPath()\r\n      ctx.moveTo(x, y)\r\n      ctx.lineTo(x, y + 40)\r\n      ctx.stroke()\r\n      ctx.beginPath()\r\n      ctx.moveTo(x - 5, y + 35)\r\n      ctx.lineTo(x, y + 40)\r\n      ctx.lineTo(x + 5, y + 35)\r\n      ctx.stroke()\r\n      ctx.fillText(\"Gravity\", x + 10, y + 45)\r\n\r\n      // Normal force\r\n      ctx.strokeStyle = \"green\"\r\n      ctx.beginPath()\r\n      ctx.moveTo(x, y)\r\n      ctx.lineTo(\r\n        x - 40 * Math.sin((angle * Math.PI) / 180),\r\n        y - 40 * Math.cos((angle * Math.PI) / 180)\r\n      )\r\n      ctx.stroke()\r\n      ctx.beginPath()\r\n      ctx.moveTo(\r\n        x -\r\n          35 * Math.sin((angle * Math.PI) / 180) -\r\n          5 * Math.cos((angle * Math.PI) / 180),\r\n        y -\r\n          35 * Math.cos((angle * Math.PI) / 180) +\r\n          5 * Math.sin((angle * Math.PI) / 180)\r\n      )\r\n      ctx.lineTo(\r\n        x - 40 * Math.sin((angle * Math.PI) / 180),\r\n        y - 40 * Math.cos((angle * Math.PI) / 180)\r\n      )\r\n      ctx.lineTo(\r\n        x -\r\n          35 * Math.sin((angle * Math.PI) / 180) +\r\n          5 * Math.cos((angle * Math.PI) / 180),\r\n        y -\r\n          35 * Math.cos((angle * Math.PI) / 180) -\r\n          5 * Math.sin((angle * Math.PI) / 180)\r\n      )\r\n      ctx.stroke()\r\n      ctx.fillText(\r\n        \"Normal\",\r\n        x - 50 * Math.sin((angle * Math.PI) / 180),\r\n        y - 50 * Math.cos((angle * Math.PI) / 180)\r\n      )\r\n\r\n      const direction = initialPosition === \"onGround\" ? 1 : -1\r\n\r\n      // Friction force\r\n      ctx.strokeStyle = \"orange\"\r\n      ctx.beginPath()\r\n      ctx.moveTo(x, y)\r\n      ctx.lineTo(\r\n        x - direction * 40 * Math.cos((angle * Math.PI) / 180),\r\n        y + direction * 40 * Math.sin((angle * Math.PI) / 180)\r\n      )\r\n      ctx.stroke()\r\n      ctx.beginPath()\r\n      ctx.moveTo(\r\n        x -\r\n          direction * 35 * Math.cos((angle * Math.PI) / 180) -\r\n          direction * 5 * Math.sin((angle * Math.PI) / 180),\r\n        y +\r\n          direction * 35 * Math.sin((angle * Math.PI) / 180) +\r\n          direction * 5 * Math.cos((angle * Math.PI) / 180)\r\n      )\r\n      ctx.lineTo(\r\n        x - direction * 40 * Math.cos((angle * Math.PI) / 180),\r\n        y + direction * 40 * Math.sin((angle * Math.PI) / 180)\r\n      )\r\n      ctx.lineTo(\r\n        x -\r\n          direction * 35 * Math.cos((angle * Math.PI) / 180) +\r\n          direction * 5 * Math.sin((angle * Math.PI) / 180),\r\n        y +\r\n          direction * 35 * Math.sin((angle * Math.PI) / 180) -\r\n          direction * 5 * Math.cos((angle * Math.PI) / 180)\r\n      )\r\n      ctx.stroke()\r\n      ctx.fillText(\r\n        \"Friction\",\r\n        x - direction * 50 * Math.cos((angle * Math.PI) / 180),\r\n        y + direction * 50 * Math.sin((angle * Math.PI) / 180)\r\n      )\r\n\r\n      ctx.restore()\r\n    }\r\n\r\n    const animateRollingBall = () => {\r\n      let speed = initialPosition === \"onGround\" ? 1 : -1\r\n\r\n      const startX =\r\n        width / 2 -\r\n        speed * PLANE_HALF_LENGTH * Math.cos((angle * Math.PI) / 180)\r\n      const startY =\r\n        height / 2 +\r\n        speed * PLANE_HALF_LENGTH * Math.sin((angle * Math.PI) / 180)\r\n      const endX =\r\n        width / 2 +\r\n        speed * PLANE_HALF_LENGTH * Math.cos((angle * Math.PI) / 180)\r\n      let rotationAngle = 0\r\n\r\n      let ballX = startX\r\n      let ballY = startY - 20\r\n      let requestId\r\n\r\n      const step = () => {\r\n        drawInclinedPlane()\r\n        drawRollingBall(ballX, ballY, rotationAngle)\r\n        drawForces(ballX, ballY)\r\n\r\n        ballX += speed * Math.cos((angle * Math.PI) / 180)\r\n        ballY -= speed * Math.sin((angle * Math.PI) / 180)\r\n        rotationAngle += 0.1 * speed\r\n\r\n        if ((speed === 1 && ballX >= endX) || (speed === -1 && ballX <= endX)) {\r\n          cancelAnimationFrame(requestId)\r\n        } else {\r\n          requestId = requestAnimationFrame(step)\r\n        }\r\n      }\r\n\r\n      requestId = requestAnimationFrame(step)\r\n      return () => cancelAnimationFrame(requestId)\r\n    }\r\n\r\n    drawInclinedPlane()\r\n    animateRollingBall()\r\n  }, [angle, initialPosition])\r\n\r\n  return (\r\n    <CanvasContainer>\r\n      <canvas ref={canvasRef} width={400} height={400} />\r\n    </CanvasContainer>\r\n  )\r\n}\r\n\r\nexport default InclinedPlane\r\n","import React, { useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport ControlPanel from \"./ControlPanel\"\r\nimport InclinedPlane from \"./InclinedPlane\"\r\n\r\nconst AppContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  font-family: Arial, sans-serif;\r\n`\r\n\r\nconst Main = () => {\r\n  const [angle, setAngle] = useState(30) // Default angle\r\n  const [initialPosition, setInitialPosition] = useState(\"onPlane\") // Default initial position\r\n\r\n  return (\r\n    <AppContainer>\r\n      <h1>Rolling Motion ⚙️ on Inclined Plane 🛤️</h1>\r\n      <ControlPanel\r\n        angle={angle}\r\n        setAngle={setAngle}\r\n        initialPosition={initialPosition}\r\n        setInitialPosition={setInitialPosition}\r\n      />\r\n      <InclinedPlane angle={angle} initialPosition={initialPosition} />\r\n    </AppContainer>\r\n  )\r\n}\r\n\r\nexport default Main\r\n"],"names":["Panel","styled","Label","Input","Select","Button","_ref","angle","setAngle","initialPosition","setInitialPosition","_jsxs","children","_jsx","type","value","onChange","e","updatedAngle","Number","target","onClick","CanvasContainer","PLANE_HALF_LENGTH","canvasRef","useRef","useEffect","canvas","current","ctx","getContext","width","height","drawInclinedPlane","clearRect","save","translate","rotate","Math","PI","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","restore","drawRollingBall","x","y","rotationAngle","arc","fillStyle","size","gradient","createLinearGradient","addColorStop","randomGradient","fill","animateRollingBall","speed","startX","cos","startY","sin","endX","requestId","ballX","ballY","step","drawForces","fillText","direction","cancelAnimationFrame","requestAnimationFrame","ref","AppContainer","Main","useState","ControlPanel","InclinedPlane"],"sourceRoot":""}