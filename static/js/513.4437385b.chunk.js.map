{"version":3,"file":"static/js/513.4437385b.chunk.js","mappings":"iKAIA,MAAMA,EAAgB,CACpBC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,UAGU,SAASC,IACtB,MAAOC,IAAQC,EAAAA,EAAAA,UAAS,IAAIC,EAAAA,KAErBC,EAAUC,IAAeH,EAAAA,EAAAA,UAAS,OAClCI,EAAUC,IAAeL,EAAAA,EAAAA,UAASD,EAAKO,SAmBxCC,EAAiBA,CAACC,EAAKC,KACnBD,EAAMC,GAAO,IAAM,EAAI,QAAU,OAG3C,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,SACnBR,EAASU,KAAI,CAACN,EAAKO,IAClBP,EAAIM,KAAI,CAACE,EAAOC,KACd,MAAMC,EAASC,OAAOC,aAAa,GAAKH,IAAW,EAAIF,GACvD,OACEF,EAAAA,EAAAA,KAAA,OAEEF,UAAS,UAAAU,OAAYd,EAAeQ,EAAQE,GAAO,KAAAI,OACjDnB,IAAagB,EAAS,WAAa,IAErCI,QAASA,IAlCHC,EAACf,EAAKC,KACxB,MAAMS,EAASC,OAAOC,aAAa,GAAKX,IAAQ,EAAID,GAEpD,GAAIN,EACWH,EAAKyB,KAAK,CAAEC,KAAMvB,EAAUwB,GAAIR,EAAQS,UAAW,OAE9DtB,EAAYN,EAAKO,SAEnBH,EAAY,UACP,CACL,MAAMa,EAAQjB,EAAK6B,IAAIV,GACnBF,GAASA,EAAMa,QAAU9B,EAAK+B,QAChC3B,EAAYe,EAEhB,GAoB2BK,CAAYR,EAAQE,GAAQL,SAE1CI,IACCH,EAAAA,EAAAA,KAAA,QAAMF,UAAU,QAAOC,SAEnB3B,EACE+B,EAAMe,OAASf,EAAMe,KAAKC,cACtBhB,EAAMe,KACNf,EAAMe,KAAKE,kBAItB,GAAAZ,OAhBON,EAAM,KAAAM,OAAIJ,GAiBd,SAKdP,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQC,SAAA,CACpBb,EAAKmC,gBACJxB,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,cAA4B,MAAhBb,EAAK+B,OAAiB,QAAU,QAAQ,WAExD/B,EAAKoC,WAAYtB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,UACpBb,EAAKqC,YAAavB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,YACpBb,EAAKsC,eACL3B,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,SAAuB,MAAhBb,EAAK+B,OAAiB,QAAU,gBAKpD,C","sources":["routing/site/games/components/Chess/index.jsx"],"sourcesContent":["import React, { useState } from \"react\"\nimport { Chess } from \"chess.js\"\nimport \"./styles.css\"\n\nconst PIECE_UNICODE = {\n  p: \"♟\",\n  r: \"♜\",\n  n: \"♞\",\n  b: \"♝\",\n  q: \"♛\",\n  k: \"♚\",\n  P: \"♙\",\n  R: \"♖\",\n  N: \"♘\",\n  B: \"♗\",\n  Q: \"♕\",\n  K: \"♔\",\n}\n\nexport default function App() {\n  const [game] = useState(new Chess())\n\n  const [selected, setSelected] = useState(null)\n  const [fenBoard, setFenBoard] = useState(game.board())\n\n  const handleClick = (row, col) => {\n    const square = String.fromCharCode(97 + col) + (8 - row)\n\n    if (selected) {\n      const move = game.move({ from: selected, to: square, promotion: \"q\" })\n      if (move) {\n        setFenBoard(game.board())\n      }\n      setSelected(null)\n    } else {\n      const piece = game.get(square)\n      if (piece && piece.color === game.turn()) {\n        setSelected(square)\n      }\n    }\n  }\n\n  const getSquareColor = (row, col) => {\n    return (row + col) % 2 === 0 ? \"light\" : \"dark\"\n  }\n\n  return (\n    <div className=\"container\">\n      <h2>Lets Play Chess</h2>\n      <div className=\"board\">\n        {fenBoard.map((row, rowIdx) =>\n          row.map((piece, colIdx) => {\n            const square = String.fromCharCode(97 + colIdx) + (8 - rowIdx)\n            return (\n              <div\n                key={`${rowIdx}-${colIdx}`}\n                className={`square ${getSquareColor(rowIdx, colIdx)} ${\n                  selected === square ? \"selected\" : \"\"\n                }`}\n                onClick={() => handleClick(rowIdx, colIdx)}\n              >\n                {piece && (\n                  <span className=\"piece\">\n                    {\n                      PIECE_UNICODE[\n                        piece.type === piece.type.toUpperCase()\n                          ? piece.type\n                          : piece.type.toLowerCase()\n                      ]\n                    }\n                  </span>\n                )}\n              </div>\n            )\n          })\n        )}\n      </div>\n      <div className=\"status\">\n        {game.isCheckmate() && (\n          <p>Checkmate! {game.turn() === \"w\" ? \"Black\" : \"White\"} wins</p>\n        )}\n        {game.isDraw() && <p>Draw!</p>}\n        {game.inCheck() && <p>Check!</p>}\n        {!game.isGameOver() && (\n          <p>Turn: {game.turn() === \"w\" ? \"White\" : \"Black\"}</p>\n        )}\n      </div>\n    </div>\n  )\n}\n"],"names":["PIECE_UNICODE","p","r","n","b","q","k","P","R","N","B","Q","K","App","game","useState","Chess","selected","setSelected","fenBoard","setFenBoard","board","getSquareColor","row","col","_jsxs","className","children","_jsx","map","rowIdx","piece","colIdx","square","String","fromCharCode","concat","onClick","handleClick","move","from","to","promotion","get","color","turn","type","toUpperCase","toLowerCase","isCheckmate","isDraw","inCheck","isGameOver"],"sourceRoot":""}