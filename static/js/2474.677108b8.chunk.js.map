{"version":3,"file":"static/js/2474.677108b8.chunk.js","mappings":"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","sources":["common/components/Link.jsx","common/components/Element.jsx","routing/site/ds/components/Stacks/Push.jsx","routing/site/ds/components/Stacks/Pop.jsx","routing/site/ds/components/Stacks/Get.jsx","routing/site/ds/components/Stacks/index.jsx"],"sourcesContent":["import React from \"react\"\n\nconst Link = ({ direction, label }) => {\n  const getIcon = (direction) => {\n    switch (direction.toLowerCase()) {\n      case \"left\":\n        return <i className=\"ico left\"></i>\n      case \"up\":\n        return <i className=\"ico up\"></i>\n      case \"down\":\n        return <i className=\"ico down\"></i>\n      default:\n        return <i className=\"ico right\"></i>\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"link-label\">{label}</div>\n      <div className=\"link\">{getIcon(direction)}</div>\n    </div>\n  )\n}\n\nexport default Link\n","import React from \"react\"\nimport Link from \"./Link\"\n\nconst Element = ({ type, data, highlight, next, AllGreater, AllSmaller }) => {\n  let element = null\n  let elStyles = {\n    border: \"1px solid white\",\n    background: \"rgba(40,60,180,0.8)\",\n    width: \"100%\",\n  }\n\n  if (highlight) {\n    elStyles.background = \"rgba(30,150,40,0.8)\"\n  }\n\n  const sanitizedType = type.toLowerCase()\n\n  switch (sanitizedType) {\n    case \"stack\":\n      element = [\n        data.index === 0 && (\n          <div key=\"Top\" style={{ padding: \"8px\", textAlign: \"center\" }}>\n            Top\n          </div>\n        ),\n        <div\n          key={`${data.index}-${data.value}`}\n          style={{\n            ...elStyles,\n            background: highlight\n              ? \"rgba(30,150,40,0.8)\"\n              : \"rgba(40,40,160,0.8)\",\n            padding: \"8px\",\n            textAlign: \"center\",\n          }}\n        >\n          <div style={{ color: \"white\", fontSize: \"18px\" }}>{data.value}</div>\n          <div style={{ color: \"white\", fontSize: \"12px\" }}>{data.index}</div>\n        </div>,\n      ]\n      break\n\n    case \"array\":\n    case \"linkedlist\":\n    case \"queues\":\n      element = (\n        <div\n          key={`${data.value}-${data.index}`}\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          {(sanitizedType === \"queues\" || sanitizedType === \"linkedlist\") &&\n            data.index === 0 && (\n              <div\n                style={{\n                  color: \"white\",\n                  padding: \"8px\",\n                  backgroundColor: \"#dc3545\",\n                  textAlign: \"center\",\n                  fontSize: \"12px\",\n                }}\n              >\n                {sanitizedType === \"linkedlist\" ? \"Head\" : \"Front\"} <br />\n              </div>\n            )}\n          <div\n            style={{\n              ...elStyles,\n              background: highlight\n                ? \"rgba(30,150,40,0.8)\"\n                : \"rgba(40,60,180,0.8)\",\n              padding: \"8px\",\n              textAlign: \"center\",\n            }}\n          >\n            <div style={{ color: \"white\", fontSize: \"18px\" }}>{data.value}</div>\n            {data.index >= 0 && (\n              <div style={{ color: \"white\", fontSize: \"12px\" }}>\n                {data.index}\n              </div>\n            )}\n          </div>\n          {(sanitizedType === \"queues\" || sanitizedType === \"linkedlist\") &&\n            next === false && (\n              <div\n                style={{\n                  color: \"white\",\n                  padding: \"8px\",\n                  backgroundColor: \"#dc3545\",\n                  textAlign: \"center\",\n                  fontSize: \"12px\",\n                }}\n              >\n                {sanitizedType === \"linkedlist\" ? \"Tail\" : \"Rear\"}\n              </div>\n            )}\n          {(sanitizedType === \"linkedlist\" || sanitizedType === \"queues\") &&\n            next && (\n              <span key={`${data.index}-${data.value}-nextlink`}>\n                <Link direction=\"right\" />\n              </span>\n            )}\n        </div>\n      )\n      break\n\n    case \"sets\":\n      element = (\n        <div\n          key={data.value}\n          style={{\n            ...elStyles,\n            background: highlight\n              ? \"rgba(30,150,40,0.8)\"\n              : AllGreater\n              ? \"rgba(242,19,23,0.8)\"\n              : AllSmaller\n              ? \"rgba(250,183,0,0.8)\"\n              : \"rgba(40,60,180,0.8)\",\n            borderRadius: \"50%\",\n            minHeight: \"100px\",\n            minWidth: \"100px\",\n            margin: \"20px\",\n            position: \"relative\",\n            textAlign: \"center\",\n          }}\n        >\n          <div\n            style={{\n              color: \"white\",\n              fontSize: \"18px\",\n              position: \"absolute\",\n              top: \"50%\",\n              left: \"50%\",\n              transform: \"translate(-50%, -50%)\",\n            }}\n          >\n            {data.value}\n          </div>\n        </div>\n      )\n      break\n\n    default:\n  }\n\n  return data && element\n}\n\nexport default Element\n","import React, { useState } from \"react\"\nimport \"./Push.css\"\n\nexport default function Push(props) {\n  const [data, setData] = useState(\"\")\n\n  if (props.open)\n    return (\n      <div className=\"card\">\n        <h2 className=\"card-header\">Push</h2>\n        <div className=\"card-body\">\n          <div className=\"form-control\">\n            <label htmlFor=\"push-input\" className=\"input-label\">\n              Insert\n            </label>\n            <input\n              type=\"text\"\n              id=\"push-input\"\n              className=\"input-field\"\n              value={data}\n              onChange={(event) => setData(event.target.value)}\n            />\n            <button\n              className=\"submit-button\"\n              onClick={() => {\n                props.push(data)\n                setData(\"\")\n              }}\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  else return <div></div>\n}\n","import React from \"react\"\n\nexport default function Pop(props) {\n  const cardStyle = {\n    border: \"1px solid #ccc\",\n    borderRadius: \"4px\",\n    padding: \"16px\",\n    minWidth: \"275px\",\n    margin: \"16px 0\",\n  }\n\n  const buttonStyle = {\n    display: \"inline-block\",\n    padding: \"8px 16px\",\n    margin: \"8px\",\n    fontSize: \"16px\",\n    borderRadius: \"4px\",\n    border: \"1px solid #007bff\",\n    backgroundColor: \"#007bff\",\n    color: \"#fff\",\n    cursor: \"pointer\",\n    textAlign: \"center\",\n  }\n\n  const formControlStyle = {\n    width: \"100%\",\n    paddingBottom: \"12px\",\n    paddingTop: \"4px\",\n  }\n\n  if (props.open) {\n    return (\n      <div style={cardStyle}>\n        <h2\n          style={{\n            backgroundColor: \"#007bff\",\n            color: \"#fff\",\n            padding: \"8px\",\n          }}\n        >\n          Pop\n        </h2>\n        <div style={formControlStyle}>\n          <button\n            style={buttonStyle}\n            onClick={() => {\n              props.pop()\n            }}\n          >\n            Submit\n          </button>\n        </div>\n      </div>\n    )\n  } else {\n    return <div></div>\n  }\n}\n","import React, { useState, useEffect, useRef } from \"react\"\n\nexport default function Get(props) {\n  const [position, setPosition] = useState(\"\")\n  const [, setLabelWidth] = useState(0)\n  const inputLabel = useRef()\n\n  useEffect(() => {\n    if (inputLabel.current) {\n      setLabelWidth(inputLabel.current.offsetWidth)\n    }\n  }, [])\n\n  const handleChange = (event) => {\n    props.modifyWhere(event.target.value)\n    setPosition(event.target.value)\n  }\n\n  if (props.open) {\n    return (\n      <div\n        style={{\n          border: \"1px solid #ccc\",\n          borderRadius: \"8px\",\n          padding: \"16px\",\n          maxWidth: \"400px\",\n          margin: \"16px auto\",\n          boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n        }}\n      >\n        {props.array1.length > 0 ? (\n          <>\n            <h2\n              style={{\n                backgroundColor: \"#007bff\",\n                color: \"white\",\n                padding: \"8px\",\n                borderRadius: \"4px 4px 0 0\",\n                textAlign: \"center\",\n              }}\n            >\n              Get\n            </h2>\n            <div style={{ padding: \"16px\" }}>\n              <div style={{ marginBottom: \"16px\" }}>\n                <label\n                  htmlFor=\"position-select\"\n                  ref={inputLabel}\n                  style={{\n                    display: \"block\",\n                    marginBottom: \"8px\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  Position\n                </label>\n                <select\n                  id=\"position-select\"\n                  value={position}\n                  onChange={handleChange}\n                  style={{\n                    width: \"100%\",\n                    padding: \"8px\",\n                    borderRadius: \"4px\",\n                    border: \"1px solid #ccc\",\n                  }}\n                >\n                  <option value=\"\" disabled>\n                    Select Position\n                  </option>\n                  <option value=\"top\">Top</option>\n                  <option value=\"bottom\">Bottom</option>\n                </select>\n              </div>\n              <div style={{ marginBottom: \"16px\" }}>\n                {props.result1 && (\n                  <input\n                    type=\"text\"\n                    disabled\n                    value={props.result1}\n                    style={{\n                      width: \"100%\",\n                      padding: \"8px\",\n                      borderRadius: \"4px\",\n                      border: \"1px solid #ccc\",\n                      backgroundColor: \"#f9f9f9\",\n                      color: \"#333\",\n                    }}\n                  />\n                )}\n              </div>\n              <button\n                onClick={() => props.get()}\n                style={{\n                  width: \"100%\",\n                  padding: \"10px\",\n                  borderRadius: \"4px\",\n                  border: \"none\",\n                  backgroundColor: \"#007bff\",\n                  color: \"white\",\n                  fontSize: \"16px\",\n                  cursor: \"pointer\",\n                }}\n              >\n                Submit\n              </button>\n            </div>\n          </>\n        ) : (\n          <h2\n            style={{\n              backgroundColor: \"#007bff\",\n              color: \"white\",\n              padding: \"16px\",\n              borderRadius: \"4px\",\n              textAlign: \"center\",\n            }}\n          >\n            Empty Stack\n          </h2>\n        )}\n      </div>\n    )\n  } else return <div></div>\n}\n","import React, { useState } from \"react\"\nimport Element from \"common/components/Element\"\nimport Push from \"./Push\"\nimport Pop from \"./Pop\"\nimport Get from \"./Get\"\n\nexport default function Stack() {\n  let [array, setArray] = useState([])\n  let [highlights, setHighlights] = useState(null)\n  let [where, setWhere] = useState(\"Top\")\n  let [result, setResult] = useState(null)\n\n  let [radioVal, setRadioVal] = useState(false)\n\n  const containerStyle = {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"flex-end\",\n    margin: \"16px\",\n  }\n\n  const paperStyle = {\n    padding: \"16px\",\n    margin: \"16px\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n    backgroundColor: \"#f9f9f9\",\n  }\n\n  const cardStyle = {\n    border: \"1px solid #ddd\",\n    borderRadius: \"4px\",\n    marginBottom: \"16px\",\n  }\n\n  const cardHeaderStyle = {\n    backgroundColor: \"#007bff\",\n    color: \"#fff\",\n    padding: \"8px\",\n    borderRadius: \"4px 4px 0 0\",\n  }\n\n  const cardContentStyle = {\n    padding: \"16px\",\n  }\n\n  const boxStyle = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"16px\",\n    margin: \"16px 0\",\n    border: \"1px solid black\",\n    borderTop: \"none\",\n  }\n\n  const radioGroupStyle = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"8px\",\n  }\n\n  const radioLabelStyle = {\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n    gap: \"8px\",\n  }\n\n  let showOperation = (event) => {\n    let operation = event.target.value\n    setRadioVal(operation)\n  }\n\n  let push = (data) => {\n    if (data) {\n      let arr = array\n      arr.splice(0, 0, data)\n      setArray(arr)\n      setHighlights([0])\n      setResult(null)\n    } else {\n      alert(\"Nothing to Push\")\n    }\n  }\n\n  let pop = () => {\n    let arr = array\n    arr.splice(0, 1)\n    setArray(arr)\n    setHighlights([])\n    setResult(null)\n  }\n\n  let get = () => {\n    let arr = array\n\n    switch (where.toLowerCase()) {\n      case \"top\":\n        setHighlights([0])\n        setResult(arr[0])\n        return\n      case \"bottom\":\n        setHighlights([arr.length - 1])\n        setResult(arr[arr.length - 1])\n        return\n      default:\n    }\n  }\n\n  return (\n    <div style={containerStyle}>\n      <div style={paperStyle}>\n        <div style={cardStyle}>\n          <h2 style={cardHeaderStyle}>Operations</h2>\n          <div style={cardContentStyle}>\n            <div style={radioGroupStyle}>\n              <label style={radioLabelStyle}>\n                <input\n                  type=\"radio\"\n                  name=\"operation\"\n                  value=\"Push\"\n                  onChange={showOperation}\n                />\n                Push\n              </label>\n              <label style={radioLabelStyle}>\n                <input\n                  type=\"radio\"\n                  name=\"operation\"\n                  value=\"Pop\"\n                  onChange={showOperation}\n                />\n                Pop\n              </label>\n              <label style={radioLabelStyle}>\n                <input\n                  type=\"radio\"\n                  name=\"operation\"\n                  value=\"Get\"\n                  onChange={showOperation}\n                />\n                Get\n              </label>\n            </div>\n          </div>\n        </div>\n        <div style={{ marginTop: \"16px\" }}>\n          <Push\n            open={radioVal === \"Push\"}\n            push={(data) => {\n              push(data)\n            }}\n          />\n          <Pop\n            open={radioVal === \"Pop\"}\n            pop={() => {\n              pop()\n            }}\n          />\n          <Get\n            open={radioVal === \"Get\"}\n            modifyWhere={(position) => {\n              setWhere(position)\n            }}\n            result1={result}\n            array1={array}\n            get={() => {\n              get()\n            }}\n          />\n        </div>\n      </div>\n      <div style={{ flex: \"1 1 auto\", marginLeft: \"16px\" }}>\n        <div style={boxStyle}>\n          {array.map((value, index) => {\n            let highlight = highlights && highlights.includes(index)\n            return (\n              <Element\n                highlight={highlight}\n                key={`${value}-${index}`}\n                data={{ value, index }}\n                type=\"stack\"\n              />\n            )\n          })}\n        </div>\n        <div style={{ textAlign: \"center\" }}>Stack Container</div>\n      </div>\n    </div>\n  )\n}\n"],"names":["_ref","direction","label","_jsxs","children","_jsx","className","toLowerCase","getIcon","type","data","highlight","next","AllGreater","AllSmaller","element","elStyles","border","background","width","sanitizedType","index","style","padding","textAlign","color","fontSize","value","display","justifyContent","alignItems","backgroundColor","Link","borderRadius","minHeight","minWidth","margin","position","top","left","transform","Push","props","setData","useState","open","htmlFor","id","onChange","event","target","onClick","push","Pop","cardStyle","buttonStyle","cursor","formControlStyle","paddingBottom","paddingTop","pop","Get","setPosition","setLabelWidth","inputLabel","useRef","useEffect","current","offsetWidth","handleChange","modifyWhere","maxWidth","boxShadow","array1","length","_Fragment","marginBottom","ref","fontWeight","disabled","result1","get","Stack","array","setArray","highlights","setHighlights","where","setWhere","result","setResult","radioVal","setRadioVal","radioLabelStyle","gap","showOperation","operation","flexDirection","name","marginTop","arr","splice","alert","flex","marginLeft","borderTop","map","includes","Element"],"sourceRoot":""}