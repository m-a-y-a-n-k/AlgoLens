{"version":3,"file":"static/js/4775.1db5b22f.chunk.js","mappings":"kKAGA,MAiCA,EAjCsBA,IAA2B,IAA1B,iBAAEC,GAAkBD,EACzC,MAAOE,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,IAiBnC,OACEG,EAAAA,EAAAA,MAAA,QAAMC,SAZcC,IACpBA,EAAEC,iBACF,KACEC,EAAAA,EAAAA,IAAST,EAAMU,QAAQ,IAAK,IAC5BN,EAAS,IACTL,EAAiBC,EAGnB,CAFE,MAAOW,GACPP,EAAS,mDACX,GAI8BQ,UAAU,iBAAgBC,SAAA,EACtDC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,MAAOhB,EACPiB,SApBgBV,IACpBN,EAASM,EAAEW,OAAOF,MAAM,EAoBpBG,YAAY,oCAEdL,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQF,SAAC,SACrBV,IAASW,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gBAAeC,SAAEV,MACnC,EC5BLiB,GAAOC,EAAAA,EAAAA,OAAK,IAAM,0DAsBxB,EApBYC,KACV,MAAOC,EAAUC,IAAetB,EAAAA,EAAAA,UAAS,IAEnCuB,GAAuBC,EAAAA,EAAAA,cAAaC,IACxCH,EAAYG,EAAY,GACvB,IAEH,OACEtB,EAAAA,EAAAA,MAAA,OAAKO,UAAU,UAASC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qCACJC,EAAAA,EAAAA,KAACc,EAAa,CAAC7B,iBAAkB0B,IAChCF,IACCT,EAAAA,EAAAA,KAACe,EAAAA,SAAQ,CAACC,UAAUhB,EAAAA,EAAAA,KAAA,OAAAD,SAAK,oBAAsBA,UAC7CC,EAAAA,EAAAA,KAACM,EAAI,CAACG,SAAUA,QAGhB,C","sources":["routing/site/math/components/EquationPlotter/EquationInput.jsx","routing/site/math/components/EquationPlotter/index.jsx"],"sourcesContent":["import React, { useState } from \"react\"\nimport { evaluate } from \"mathjs\"\n\nconst EquationInput = ({ onEquationChange }) => {\n  const [input, setInput] = useState(\"\")\n  const [error, setError] = useState(\"\")\n\n  const handleChange = (e) => {\n    setInput(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    try {\n      evaluate(input.replace(\"x\", 0)) // Try evaluating the equation at x=0\n      setError(\"\")\n      onEquationChange(input)\n    } catch (err) {\n      setError(\"Invalid equation. Please enter a valid equation.\")\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"equation-input\">\n      <input\n        type=\"text\"\n        value={input}\n        onChange={handleChange}\n        placeholder=\"Enter equation (e.g., y = x^2)\"\n      />\n      <button type=\"submit\">Plot</button>\n      {error && <p className=\"error-message\">{error}</p>}\n    </form>\n  )\n}\n\nexport default EquationInput\n","import React, { useState, useCallback, lazy, Suspense } from \"react\"\nimport EquationInput from \"./EquationInput\"\nimport \"./Plotter.css\"\n\nconst Plot = lazy(() => import(\"./Plot\"))\n\nconst App = () => {\n  const [equation, setEquation] = useState(\"\")\n\n  const handleEquationChange = useCallback((newEquation) => {\n    setEquation(newEquation)\n  }, [])\n\n  return (\n    <div className=\"Plotter\">\n      <h1>2-D Equation Plotter in x and y</h1>\n      <EquationInput onEquationChange={handleEquationChange} />\n      {equation && (\n        <Suspense fallback={<div>Loading plot...</div>}>\n          <Plot equation={equation} />\n        </Suspense>\n      )}\n    </div>\n  )\n}\n\nexport default App\n"],"names":["_ref","onEquationChange","input","setInput","useState","error","setError","_jsxs","onSubmit","e","preventDefault","evaluate","replace","err","className","children","_jsx","type","value","onChange","target","placeholder","Plot","lazy","App","equation","setEquation","handleEquationChange","useCallback","newEquation","EquationInput","Suspense","fallback"],"sourceRoot":""}