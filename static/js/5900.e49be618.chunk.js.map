{"version":3,"file":"static/js/5900.e49be618.chunk.js","mappings":"sOAUA,MAaMA,GAAcC,EAAAA,EAAAA,IAbJC,IAAK,CACnBC,KAAM,CACJC,OAAQ,EACRC,QAASH,EAAMI,QAAQ,IAEzBC,YAAa,CACXC,SAAU,WACVC,MAAOP,EAAMI,QAAQ,GACrBI,IAAKR,EAAMI,QAAQ,GACnBK,MAAOT,EAAMU,QAAQC,KAAK,SAIVZ,EAAoBa,IACtC,MAAM,SAAEC,EAAQ,QAAEC,EAAO,QAAEC,KAAYC,GAAUJ,EACjD,OACEK,EAAAA,EAAAA,MAACC,EAAAA,EAAc,CAACC,mBAAiB,EAACC,UAAWN,EAAQb,QAAUe,EAAKH,SAAA,EAClEQ,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAIV,SAAEA,IACzBE,GACCM,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CACT,aAAW,QACXJ,UAAWN,EAAQT,YACnBoB,QAASV,EAAQF,UAEjBQ,EAAAA,EAAAA,KAACK,EAAAA,QAAS,MAEV,OACW,IAIfC,GAAgB5B,EAAAA,EAAAA,IAAYC,IAAK,CACrCC,KAAM,CACJE,QAASH,EAAMI,QAAQ,OAFLL,CAIlB6B,EAAAA,GAEEC,GAAgB9B,EAAAA,EAAAA,IAAYC,IAAK,CACrCC,KAAM,CACJC,OAAQ,EACRC,QAASH,EAAMI,QAAQ,OAHLL,CAKlB+B,EAAAA,GAEW,SAASC,EAAiBC,GAAoB,IAAnB,aAAEC,GAAcD,GACxDE,EAAAA,EAAAA,YAAU,KACJD,GAAgBA,EAAaE,MAAQF,EAAaE,KAAKC,UACzDH,EAAaE,KAAKC,UACpB,GACC,CAACH,IAEJ,MAAMI,EAAcA,KACdJ,GAAgBA,EAAaK,OAASL,EAAaK,MAAMF,UAC3DH,EAAaK,MAAMF,UACrB,EAGIG,EAAcN,IAClBhB,EAAAA,EAAAA,MAACuB,EAAAA,EAAM,CACLC,qBACGR,EAAaK,OAASL,EAAaK,MAAMI,cAAgB,EAE5DC,qBACGV,EAAaK,OAASL,EAAaK,MAAMM,mBAAqB,EAEjE7B,QAASA,KACPsB,GAAa,EAEf,kBAAgB,0BAChBF,MAAM,EAAKtB,SAAA,EAEXQ,EAAAA,EAAAA,KAACvB,EAAW,CACV+C,GAAG,0BACH9B,QAASA,KACPsB,GAAa,EACbxB,SAEDoB,EAAaa,SAEhBzB,EAAAA,EAAAA,KAACM,EAAa,CAACoB,UAAQ,EAAAlC,SAAEoB,EAAae,cACtC/B,EAAAA,EAAAA,MAACY,EAAa,CAAAhB,SAAA,CACXoB,GAAgBA,EAAagB,SAC5B5B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CACLC,WAAS,EACT1B,QAASA,KACHQ,EAAagB,OAAOb,SACtBH,EAAagB,OAAOb,UAAS,KAC3BC,GAAa,IAGfA,GACF,EAEF5B,MAAM,UAASI,SAEdoB,EAAagB,OAAOG,OAIxBnB,GAAgBA,EAAaoB,SAC5BhC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CACLC,WAAS,EACT1B,QAASA,KACHQ,EAAaoB,OAAOjB,SACtBH,EAAaoB,OAAOjB,UAAS,KAC3BC,GAAa,IAGfA,GACF,EAEF5B,MAAM,YAAWI,SAEhBoB,EAAaoB,OAAOD,aAO/B,OAAO/B,EAAAA,EAAAA,KAAAiC,EAAAA,SAAA,CAAAzC,SAAG0B,GACZ,C","sources":["common/components/LightBox.jsx"],"sourcesContent":["import React, { useEffect } from \"react\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\"\nimport MuiDialogContent from \"@material-ui/core/DialogContent\"\nimport MuiDialogActions from \"@material-ui/core/DialogActions\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport CloseIcon from \"@material-ui/icons/Close\"\nimport Typography from \"@material-ui/core/Typography\"\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n})\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  )\n})\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent)\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions)\n\nexport default function CustomizedDialogs({ dialogConfig }) {\n  useEffect(() => {\n    if (dialogConfig && dialogConfig.open && dialogConfig.open.callback) {\n      dialogConfig.open.callback()\n    }\n  }, [dialogConfig])\n\n  const handleClose = () => {\n    if (dialogConfig && dialogConfig.close && dialogConfig.close.callback) {\n      dialogConfig.close.callback()\n    }\n  }\n\n  const dialogueJSX = dialogConfig && (\n    <Dialog\n      disableEscapeKeyDown={\n        (dialogConfig.close && dialogConfig.close.escDisabled) || false\n      }\n      disableBackdropClick={\n        (dialogConfig.close && dialogConfig.close.backdropDisabled) || false\n      }\n      onClose={() => {\n        handleClose()\n      }}\n      aria-labelledby=\"customized-dialog-title\"\n      open={true}\n    >\n      <DialogTitle\n        id=\"customized-dialog-title\"\n        onClose={() => {\n          handleClose()\n        }}\n      >\n        {dialogConfig.title}\n      </DialogTitle>\n      <DialogContent dividers>{dialogConfig.contentJSX}</DialogContent>\n      <DialogActions>\n        {dialogConfig && dialogConfig.accept && (\n          <Button\n            autoFocus\n            onClick={() => {\n              if (dialogConfig.accept.callback) {\n                dialogConfig.accept.callback(() => {\n                  handleClose()\n                })\n              } else {\n                handleClose()\n              }\n            }}\n            color=\"primary\"\n          >\n            {dialogConfig.accept.text}\n          </Button>\n        )}\n\n        {dialogConfig && dialogConfig.reject && (\n          <Button\n            autoFocus\n            onClick={() => {\n              if (dialogConfig.reject.callback) {\n                dialogConfig.reject.callback(() => {\n                  handleClose()\n                })\n              } else {\n                handleClose()\n              }\n            }}\n            color=\"secondary\"\n          >\n            {dialogConfig.reject.text}\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  )\n\n  return <>{dialogueJSX}</>\n}\n"],"names":["DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","other","_jsxs","MuiDialogTitle","disableTypography","className","_jsx","Typography","variant","IconButton","onClick","CloseIcon","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","_ref","dialogConfig","useEffect","open","callback","handleClose","close","dialogueJSX","Dialog","disableEscapeKeyDown","escDisabled","disableBackdropClick","backdropDisabled","id","title","dividers","contentJSX","accept","Button","autoFocus","text","reject","_Fragment"],"sourceRoot":""}