{"version":3,"file":"static/js/6958.e78a19a7.chunk.js","mappings":"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","sources":["routing/site/physics/components/RollingMotion/ControlPanel.jsx","routing/site/physics/components/RollingMotion/InclinedPlane.jsx","routing/site/physics/components/RollingMotion/index.jsx"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Panel = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n  padding: 20px;\n  background: #f9f9f9;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  max-width: 400px;\n  width: 100%;\n`\n\nconst Label = styled.label`\n  margin: 10px 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  font-weight: bold;\n  color: #333;\n`\n\nconst Input = styled.input`\n  padding: 5px;\n  border: 2px solid #ddd;\n  border-radius: 5px;\n  width: 60%;\n  font-size: 1rem;\n`\n\nconst Select = styled.select`\n  padding: 5px;\n  border: 2px solid #ddd;\n  border-radius: 5px;\n  width: 65%;\n  font-size: 1rem;\n`\n\nconst Button = styled.button`\n  padding: 10px 20px;\n  margin: 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #007bff;\n  color: white;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n\n  &:focus {\n    outline: none;\n  }\n`\n\nconst ControlPanel = ({\n  angle,\n  setAngle,\n  initialPosition,\n  setInitialPosition,\n}) => {\n  const updateAngle = (e) => {\n    const updatedAngle = Number(e.target.value)\n    if (updatedAngle >= 0 && updatedAngle <= 90) setAngle(updatedAngle)\n  }\n\n  return (\n    <Panel>\n      <Label>\n        Angle (0 to 90 degrees):\n        <Input type=\"number\" value={angle} onChange={updateAngle} />\n      </Label>\n      <Label>\n        Initial Position:\n        <Select\n          value={initialPosition}\n          onChange={(e) => setInitialPosition(e.target.value)}\n        >\n          <option value=\"onGround\">Left</option>\n          <option value=\"onPlane\">Right</option>\n        </Select>\n      </Label>\n      <div>\n        <Button onClick={() => setAngle(30)}>Reset Angle</Button>\n        <Button onClick={() => setInitialPosition(\"onPlane\")}>\n          Reset Position\n        </Button>\n      </div>\n    </Panel>\n  )\n}\n\nexport default ControlPanel\n","import React, { useEffect, useRef } from \"react\"\nimport styled from \"styled-components\"\n\nconst CanvasContainer = styled.div`\n  position: relative;\n  width: 400px;\n  height: 400px;\n  border: 1px solid #000;\n`\n\nconst PLANE_HALF_LENGTH = 100\n\nconst InclinedPlane = ({ angle, initialPosition }) => {\n  const canvasRef = useRef(null)\n\n  useEffect(() => {\n    const canvas = canvasRef.current\n    const ctx = canvas.getContext(\"2d\")\n    const width = canvas.width\n    const height = canvas.height\n\n    const drawInclinedPlane = () => {\n      ctx.clearRect(0, 0, width, height)\n      ctx.save()\n      ctx.translate(width / 2, height / 2)\n      ctx.rotate((-angle * Math.PI) / 180)\n\n      ctx.beginPath()\n      ctx.moveTo(-PLANE_HALF_LENGTH, 0)\n      ctx.lineTo(PLANE_HALF_LENGTH, 0)\n      ctx.lineWidth = 4\n      ctx.strokeStyle = \"#000\"\n      ctx.stroke()\n\n      ctx.restore()\n    }\n\n    const randomGradient = (size) => {\n      const gradient = ctx.createLinearGradient(-size, 0, size, 0)\n      gradient.addColorStop(0, \"royalblue\")\n      gradient.addColorStop(1, \"#FFFFFF\")\n      return gradient\n    }\n\n    const drawRollingBall = (x, y, rotationAngle) => {\n      ctx.save()\n      ctx.translate(x, y)\n      ctx.rotate(rotationAngle)\n      ctx.beginPath()\n      ctx.arc(0, 0, 15, 0, 2 * Math.PI)\n      ctx.fillStyle = randomGradient(15)\n      ctx.fill()\n      ctx.lineWidth = 2\n      ctx.strokeStyle = \"#000\"\n      ctx.stroke()\n      ctx.restore()\n    }\n\n    const drawForces = (x, y) => {\n      ctx.save()\n      ctx.strokeStyle = \"red\"\n      ctx.lineWidth = 2\n\n      // Gravity force\n      ctx.beginPath()\n      ctx.moveTo(x, y)\n      ctx.lineTo(x, y + 40)\n      ctx.stroke()\n      ctx.beginPath()\n      ctx.moveTo(x - 5, y + 35)\n      ctx.lineTo(x, y + 40)\n      ctx.lineTo(x + 5, y + 35)\n      ctx.stroke()\n      ctx.fillText(\"Gravity\", x + 10, y + 45)\n\n      // Normal force\n      ctx.strokeStyle = \"green\"\n      ctx.beginPath()\n      ctx.moveTo(x, y)\n      ctx.lineTo(\n        x - 40 * Math.sin((angle * Math.PI) / 180),\n        y - 40 * Math.cos((angle * Math.PI) / 180)\n      )\n      ctx.stroke()\n      ctx.beginPath()\n      ctx.moveTo(\n        x -\n          35 * Math.sin((angle * Math.PI) / 180) -\n          5 * Math.cos((angle * Math.PI) / 180),\n        y -\n          35 * Math.cos((angle * Math.PI) / 180) +\n          5 * Math.sin((angle * Math.PI) / 180)\n      )\n      ctx.lineTo(\n        x - 40 * Math.sin((angle * Math.PI) / 180),\n        y - 40 * Math.cos((angle * Math.PI) / 180)\n      )\n      ctx.lineTo(\n        x -\n          35 * Math.sin((angle * Math.PI) / 180) +\n          5 * Math.cos((angle * Math.PI) / 180),\n        y -\n          35 * Math.cos((angle * Math.PI) / 180) -\n          5 * Math.sin((angle * Math.PI) / 180)\n      )\n      ctx.stroke()\n      ctx.fillText(\n        \"Normal\",\n        x - 50 * Math.sin((angle * Math.PI) / 180),\n        y - 50 * Math.cos((angle * Math.PI) / 180)\n      )\n\n      const direction = initialPosition === \"onGround\" ? 1 : -1\n\n      // Friction force\n      ctx.strokeStyle = \"orange\"\n      ctx.beginPath()\n      ctx.moveTo(x, y)\n      ctx.lineTo(\n        x - direction * 40 * Math.cos((angle * Math.PI) / 180),\n        y + direction * 40 * Math.sin((angle * Math.PI) / 180)\n      )\n      ctx.stroke()\n      ctx.beginPath()\n      ctx.moveTo(\n        x -\n          direction * 35 * Math.cos((angle * Math.PI) / 180) -\n          direction * 5 * Math.sin((angle * Math.PI) / 180),\n        y +\n          direction * 35 * Math.sin((angle * Math.PI) / 180) +\n          direction * 5 * Math.cos((angle * Math.PI) / 180)\n      )\n      ctx.lineTo(\n        x - direction * 40 * Math.cos((angle * Math.PI) / 180),\n        y + direction * 40 * Math.sin((angle * Math.PI) / 180)\n      )\n      ctx.lineTo(\n        x -\n          direction * 35 * Math.cos((angle * Math.PI) / 180) +\n          direction * 5 * Math.sin((angle * Math.PI) / 180),\n        y +\n          direction * 35 * Math.sin((angle * Math.PI) / 180) -\n          direction * 5 * Math.cos((angle * Math.PI) / 180)\n      )\n      ctx.stroke()\n      ctx.fillText(\n        \"Friction\",\n        x - direction * 50 * Math.cos((angle * Math.PI) / 180),\n        y + direction * 50 * Math.sin((angle * Math.PI) / 180)\n      )\n\n      ctx.restore()\n    }\n\n    const animateRollingBall = () => {\n      let speed = initialPosition === \"onGround\" ? 1 : -1\n\n      const startX =\n        width / 2 -\n        speed * PLANE_HALF_LENGTH * Math.cos((angle * Math.PI) / 180)\n      const startY =\n        height / 2 +\n        speed * PLANE_HALF_LENGTH * Math.sin((angle * Math.PI) / 180)\n      const endX =\n        width / 2 +\n        speed * PLANE_HALF_LENGTH * Math.cos((angle * Math.PI) / 180)\n      let rotationAngle = 0\n\n      let ballX = startX\n      let ballY = startY - 20\n      let requestId\n\n      const step = () => {\n        drawInclinedPlane()\n        drawRollingBall(ballX, ballY, rotationAngle)\n        drawForces(ballX, ballY)\n\n        ballX += speed * Math.cos((angle * Math.PI) / 180)\n        ballY -= speed * Math.sin((angle * Math.PI) / 180)\n        rotationAngle += 0.1 * speed\n\n        if ((speed === 1 && ballX >= endX) || (speed === -1 && ballX <= endX)) {\n          cancelAnimationFrame(requestId)\n        } else {\n          requestId = requestAnimationFrame(step)\n        }\n      }\n\n      requestId = requestAnimationFrame(step)\n      return () => cancelAnimationFrame(requestId)\n    }\n\n    drawInclinedPlane()\n    animateRollingBall()\n  }, [angle, initialPosition])\n\n  return (\n    <CanvasContainer>\n      <canvas ref={canvasRef} width={400} height={400} />\n    </CanvasContainer>\n  )\n}\n\nexport default InclinedPlane\n","import React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport ControlPanel from \"./ControlPanel\"\nimport InclinedPlane from \"./InclinedPlane\"\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n`\n\nconst Main = () => {\n  const [angle, setAngle] = useState(30) // Default angle\n  const [initialPosition, setInitialPosition] = useState(\"onPlane\") // Default initial position\n\n  return (\n    <AppContainer>\n      <h1>Rolling Motion ⚙️ on Inclined Plane 🛤️</h1>\n      <ControlPanel\n        angle={angle}\n        setAngle={setAngle}\n        initialPosition={initialPosition}\n        setInitialPosition={setInitialPosition}\n      />\n      <InclinedPlane angle={angle} initialPosition={initialPosition} />\n    </AppContainer>\n  )\n}\n\nexport default Main\n"],"names":["Panel","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","Select","_templateObject4","Button","_templateObject5","_ref","angle","setAngle","initialPosition","setInitialPosition","_jsxs","children","_jsx","type","value","onChange","e","updatedAngle","Number","target","onClick","CanvasContainer","PLANE_HALF_LENGTH","canvasRef","useRef","useEffect","canvas","current","ctx","getContext","width","height","drawInclinedPlane","clearRect","save","translate","rotate","Math","PI","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","restore","drawRollingBall","x","y","rotationAngle","arc","fillStyle","size","gradient","createLinearGradient","addColorStop","randomGradient","fill","animateRollingBall","speed","startX","cos","startY","sin","endX","requestId","ballX","ballY","step","drawForces","fillText","direction","cancelAnimationFrame","requestAnimationFrame","ref","AppContainer","Main","useState","ControlPanel","InclinedPlane"],"sourceRoot":""}