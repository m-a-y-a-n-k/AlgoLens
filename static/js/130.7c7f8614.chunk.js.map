{"version":3,"file":"static/js/130.7c7f8614.chunk.js","mappings":"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","sources":["routing/site/physics/components/SolarSystem/PlanetContext.jsx","routing/site/physics/components/SolarSystem/SolarSystemCanvas.jsx","routing/site/physics/components/SolarSystem/index.jsx"],"sourcesContent":["import React, { createContext, useState, useContext } from \"react\"\n\nconst PlanetContext = createContext()\n\nexport const PlanetProvider = ({ children }) => {\n  const [planets, setPlanets] = useState([\n    {\n      name: \"Sun\",\n      radius: 10,\n      distance: 0,\n      speed: 0,\n      angle: 0,\n      fillColor: \"orange\",\n    },\n    {\n      name: \"Mercury\",\n      radius: 4,\n      distance: 27,\n      speed: 1.59,\n      angle: 0,\n      fillColor: \"darkred\",\n    },\n    {\n      name: \"Venus\",\n      radius: 5,\n      distance: 36,\n      speed: 1.2,\n      angle: 0,\n      fillColor: \"forestgreen\",\n    },\n    {\n      name: \"Earth\",\n      radius: 8,\n      distance: 50,\n      speed: 1,\n      angle: 0,\n      fillColor: \"aqua\",\n    },\n    {\n      name: \"Mars\",\n      radius: 7,\n      distance: 75,\n      speed: 0.8,\n      angle: 0,\n      fillColor: \"gold\",\n    },\n    {\n      name: \"Jupiter\",\n      radius: 10,\n      distance: 100,\n      speed: 0.38,\n      angle: 0,\n      fillColor: \"pink\",\n    },\n    {\n      name: \"Saturn\",\n      radius: 9,\n      distance: 120,\n      speed: 0.32,\n      angle: 0,\n      fillColor: \"wheat\",\n    },\n    {\n      name: \"Uranus\",\n      radius: 8,\n      distance: 150,\n      speed: 0.23,\n      angle: 0,\n      fillColor: \"violet\",\n    },\n    {\n      name: \"Neptune\",\n      radius: 8,\n      distance: 180,\n      speed: 0.18,\n      angle: 0,\n      fillColor: \"navy\",\n    },\n  ])\n\n  return (\n    <PlanetContext.Provider value={{ planets, setPlanets }}>\n      {children}\n    </PlanetContext.Provider>\n  )\n}\n\nexport const usePlanets = () => useContext(PlanetContext)\n","import React, { useRef, useEffect, useState } from \"react\"\nimport { usePlanets } from \"./PlanetContext\"\nimport styled from \"styled-components\"\n\n// Styled-components\nconst Canvas = styled.canvas`\n  width: 100%;\n  height: auto;\n  max-width: 600px;\n  border: 2px solid #fff;\n  background-color: #000;\n  display: block;\n  margin: 0 auto;\n`\n\nconst TimeElapsed = styled.div`\n  color: #fff;\n  text-align: center;\n  margin: 10px;\n  font-size: 1.2em;\n`\n\nconst SolarSystemCanvas = () => {\n  const { planets, setPlanets } = usePlanets()\n  const canvasRef = useRef(null)\n  const [elapsedDays, setElapsedDays] = useState(0)\n\n  useEffect(() => {\n    const canvas = canvasRef.current\n    const ctx = canvas.getContext(\"2d\")\n    let animationFrameId\n\n    const render = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n      planets.forEach((planet) => {\n        // Draw orbit\n        ctx.beginPath()\n        ctx.arc(\n          canvas.width / 2,\n          canvas.height / 2,\n          planet.distance,\n          0,\n          2 * Math.PI\n        )\n        ctx.strokeStyle = \"#FFFFFF\"\n        ctx.stroke()\n        ctx.closePath()\n\n        // Draw Planet\n        const x = canvas.width / 2 + planet.distance * Math.cos(planet.angle)\n        const y = canvas.height / 2 + planet.distance * Math.sin(planet.angle)\n\n        ctx.beginPath()\n        ctx.arc(x, y, planet.radius, 0, 2 * Math.PI)\n        ctx.fillStyle = planet.fillColor\n        ctx.fill()\n        ctx.closePath()\n\n        // Draw planet label\n        ctx.fillStyle = \"#FFFFFF\"\n        ctx.font = \"10px Arial\"\n        ctx.fillText(planet.name, x + planet.radius + 2, y)\n      })\n\n      setTimeout(() => {\n        setPlanets(\n          planets.map((planet) => ({\n            ...planet,\n            angle: planet.angle + (planet.speed * Math.PI) / 180,\n          }))\n        )\n      }, 50)\n    }\n\n    const animate = () => {\n      render()\n      setElapsedDays((prevDays) => prevDays + 0.083)\n      animationFrameId = requestAnimationFrame(animate)\n    }\n\n    animate()\n\n    return () => {\n      cancelAnimationFrame(animationFrameId)\n    }\n  }, [planets, setPlanets])\n\n  return (\n    <>\n      <Canvas\n        ref={canvasRef}\n        width={400}\n        height={400}\n        className=\"solar-system-canvas\"\n      />\n      <TimeElapsed>\n        Time Elapsed: {elapsedDays.toFixed(0)} Earth days\n      </TimeElapsed>\n    </>\n  )\n}\n\nexport default SolarSystemCanvas\n","import React from \"react\"\nimport { PlanetProvider } from \"./PlanetContext\"\nimport SolarSystemCanvas from \"./SolarSystemCanvas\"\nimport styled from \"styled-components\"\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  background-color: #282c34;\n  color: white;\n`\n\nconst Title = styled.h1`\n  font-size: 2.5em;\n  margin: 0;\n  padding: 20px;\n  text-align: center;\n  color: #fbac61;\n`\n\nconst App = () => {\n  return (\n    <PlanetProvider>\n      <AppContainer>\n        <Title>Solar System Planetary Motion</Title>\n        <SolarSystemCanvas />\n      </AppContainer>\n    </PlanetProvider>\n  )\n}\n\nexport default App\n"],"names":["PlanetContext","createContext","PlanetProvider","_ref","children","planets","setPlanets","useState","name","radius","distance","speed","angle","fillColor","_jsx","Provider","value","Canvas","styled","TimeElapsed","SolarSystemCanvas","useContext","canvasRef","useRef","elapsedDays","setElapsedDays","useEffect","canvas","current","ctx","getContext","animationFrameId","animate","clearRect","width","height","forEach","planet","beginPath","arc","Math","PI","strokeStyle","stroke","closePath","x","cos","y","sin","fillStyle","fill","font","fillText","setTimeout","map","prevDays","requestAnimationFrame","cancelAnimationFrame","_jsxs","_Fragment","ref","className","toFixed","AppContainer","Title","App"],"sourceRoot":""}