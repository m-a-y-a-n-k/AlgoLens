{"version":3,"file":"static/js/2577.3d7a8790.chunk.js","mappings":"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","sources":["common/components/Link.jsx","common/components/Element.jsx","routing/site/ds/components/LinkedList/Insert.jsx","routing/site/ds/components/LinkedList/Delete.jsx","routing/site/ds/components/LinkedList/Update.jsx","routing/site/ds/components/LinkedList/Search.jsx","routing/site/ds/components/LinkedList/index.jsx","../node_modules/@material-ui/core/esm/ListItem/ListItem.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js"],"sourcesContent":["import React from \"react\"\r\n\r\nconst Link = ({ direction, label }) => {\r\n  const getIcon = (direction) => {\r\n    switch (direction.toLowerCase()) {\r\n      case \"left\":\r\n        return <i className=\"ico left\"></i>\r\n      case \"up\":\r\n        return <i className=\"ico up\"></i>\r\n      case \"down\":\r\n        return <i className=\"ico down\"></i>\r\n      default:\r\n        return <i className=\"ico right\"></i>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"link-label\">{label}</div>\r\n      <div className=\"link\">{getIcon(direction)}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Link\r\n","import React from \"react\"\r\nimport Link from \"./Link\"\r\nimport Box from \"@material-ui/core/Box\"\r\n\r\nconst Element = ({ type, data, highlight, next, AllGreater, AllSmaller }) => {\r\n  let element = null\r\n  let elStyles = {\r\n    border: \"1px solid white\",\r\n    background: \"rgba(40,60,180,0.8)\",\r\n    width: \"100%\",\r\n  }\r\n\r\n  if (highlight) {\r\n    elStyles.background = \"rgba(30,150,40,0.8)\"\r\n  }\r\n\r\n  const sanitizedType = type.toLowerCase()\r\n\r\n  switch (sanitizedType) {\r\n    case \"stack\":\r\n      element = [\r\n        data.index === 0 && (\r\n          <Box key=\"Top\" p={1} textAlign=\"center\">\r\n            Top\r\n          </Box>\r\n        ),\r\n        <Box\r\n          key={`${data.index}-${data.value}`}\r\n          p={1}\r\n          style={{\r\n            ...elStyles,\r\n            background: highlight\r\n              ? \"rgba(30,150,40,0.8)\"\r\n              : \"rgba(40,40,160,0.8)\",\r\n          }}\r\n        >\r\n          <Box p={1} color=\"white\" textAlign=\"center\" fontSize={18}>\r\n            {data.value}\r\n          </Box>\r\n          <Box color=\"white\" p={1} textAlign=\"center\" fontSize={12}>\r\n            {data.index}\r\n          </Box>\r\n        </Box>,\r\n      ]\r\n      break\r\n\r\n    case \"array\":\r\n    case \"linkedlist\":\r\n    case \"queues\":\r\n      element = (\r\n        <div\r\n          key={`${data.value}-${data.index}`}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {(sanitizedType === \"queues\" || sanitizedType === \"linkedlist\") &&\r\n            data.index === 0 && (\r\n              <Box\r\n                color=\"white\"\r\n                p={1}\r\n                className=\"bg-danger\"\r\n                textAlign=\"center\"\r\n                fontSize={12}\r\n              >\r\n                <typography>\r\n                  {sanitizedType === \"linkedlist\" ? \"Head\" : \"Front\"} <br />\r\n                </typography>\r\n              </Box>\r\n            )}\r\n          <Box\r\n            p={1}\r\n            style={{\r\n              ...elStyles,\r\n              background: highlight\r\n                ? \"rgba(30,150,40,0.8)\"\r\n                : \"rgba(40,60,180,0.8)\",\r\n            }}\r\n          >\r\n            <Box p={1} color=\"white\" textAlign=\"center\" fontSize={18}>\r\n              {data.value}\r\n            </Box>\r\n            {data.index >= 0 && (\r\n              <Box p={1} color=\"white\" textAlign=\"center\" fontSize={12}>\r\n                {data.index}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          {(sanitizedType === \"queues\" || sanitizedType === \"linkedlist\") &&\r\n            next === false && (\r\n              <Box\r\n                color=\"white\"\r\n                p={1}\r\n                className={\"bg-danger\"}\r\n                textAlign=\"center\"\r\n                fontSize={12}\r\n              >\r\n                <typography>\r\n                  {sanitizedType === \"linkedlist\" ? \"Tail\" : \"Rear\"}\r\n                </typography>\r\n              </Box>\r\n            )}\r\n          {(sanitizedType === \"linkedlist\" || sanitizedType === \"queues\") &&\r\n            next && (\r\n              <Box\r\n                key={`${data.index}-${data.value}-nextlink`}\r\n                component=\"span\"\r\n              >\r\n                <Link direction=\"right\" />\r\n              </Box>\r\n            )}\r\n        </div>\r\n      )\r\n      break\r\n\r\n    case \"sets\":\r\n      element = (\r\n        <Box\r\n          key={data.value}\r\n          p={1}\r\n          style={{\r\n            ...elStyles,\r\n            background: highlight\r\n              ? \"rgba(30,150,40,0.8)\"\r\n              : AllGreater\r\n              ? \"rgba(242,19,23,0.8)\"\r\n              : AllSmaller\r\n              ? \"rgba(250,183,0,0.8)\"\r\n              : \"rgba(40,60,180,0.8)\",\r\n            borderRadius: \"50%\",\r\n            minHeight: \"100px\",\r\n            minWidth: \"100px\",\r\n            margin: \"20px\",\r\n          }}\r\n        >\r\n          <Box p={0} color=\"white\" fontSize={18}>\r\n            <div\r\n              style={{ position: \"relative\", top: \"45%\", textAlign: \"center\" }}\r\n            >\r\n              {data.value}\r\n            </div>\r\n          </Box>\r\n        </Box>\r\n      )\r\n      break\r\n\r\n    default:\r\n  }\r\n\r\n  return data && element\r\n}\r\n\r\nexport default Element\r\n","import React, { useState } from \"react\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardActions from \"@material-ui/core/CardActions\"\r\nimport CardContent from \"@material-ui/core/CardContent\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nimport Button from \"@material-ui/core/Button\"\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport InputLabel from \"@material-ui/core/InputLabel\"\r\nimport FormControl from \"@material-ui/core/FormControl\"\r\nimport Select from \"@material-ui/core/Select\"\r\n\r\n//styling the form and component\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: 3,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 8px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 175,\r\n    marginTop: 33,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}))\r\n\r\n// input field styling\r\nconst useStylesReddit = makeStyles((theme) => ({\r\n  root: {\r\n    border: \"1px solid #e2e2e1\",\r\n    overflow: \"hidden\",\r\n    borderRadius: 4,\r\n    margin: \"4px 0px 0px 0px\",\r\n\r\n    backgroundColor: \"#fcfcfb\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\",\r\n    },\r\n    \"&$focused\": {\r\n      backgroundColor: \"#fff\",\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n\r\n  focused: {},\r\n}))\r\n\r\n// handling input field\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit()\r\n  return (\r\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\r\n  )\r\n}\r\n\r\n// Insert component --------------------------------------------------------------------------------------\r\nexport default function Insert(props) {\r\n  ///--------- Select the start or end input type ------------\r\n  const classes1 = useStyles()\r\n  const [where, setWhere] = useState(\"\")\r\n  const inputLabel = React.useRef(null)\r\n  const [labelWidth, setLabelWidth] = useState(0)\r\n  React.useEffect(() => {\r\n    if (inputLabel.current == null) return null\r\n    setLabelWidth(inputLabel.current.offsetWidth)\r\n  }, [])\r\n\r\n  const handleChange = (event) => {\r\n    setWhere(event.target.value)\r\n  }\r\n  //-----------------------------------------------------------\r\n  const classes = useStyles()\r\n  const [data, setData] = React.useState(null) // stores the data entered in the list\r\n\r\n  if (props.open) {\r\n    return (\r\n      <Card\r\n        className={classes.root}\r\n        style={{ border: \"1px solid rgba(22,45,167,0.9)\" }}\r\n      >\r\n        <CardContent className=\"bg-primary text-white\">\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            Insert\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardContent className=\" text-center pb-0 mt-0\">\r\n          <Typography variant=\"h6\" component=\"h2\">\r\n            Enter data\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <FormControl variant=\"outlined\" className={classes1.formControl}>\r\n            <InputLabel ref={inputLabel} id=\"demo-simple-select-outlined-label\">\r\n              Position\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={where}\r\n              onChange={handleChange}\r\n              labelWidth={labelWidth}\r\n            >\r\n              <MenuItem value={\"start\"}>Start</MenuItem>\r\n              <MenuItem value={\"end\"}>End</MenuItem>\r\n            </Select>\r\n\r\n            <RedditTextField\r\n              label=\"Enter Data\"\r\n              className={classes.margin}\r\n              onChange={(event) => {\r\n                setData(event.target.value)\r\n              }}\r\n              value={data ? data : \"\"}\r\n              variant=\"filled\"\r\n              id=\"reddit-input\"\r\n            />\r\n\r\n            <Button\r\n              className=\"mt-2\"\r\n              onClick={() => {\r\n                props.insert(data, where) // calling the insert function of the LinkList compoent\r\n                setData(null)\r\n              }}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </FormControl>\r\n        </CardActions>\r\n      </Card>\r\n    )\r\n  } else return <div></div>\r\n}\r\n","import React from \"react\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardActions from \"@material-ui/core/CardActions\"\r\nimport CardContent from \"@material-ui/core/CardContent\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nimport Button from \"@material-ui/core/Button\"\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport InputLabel from \"@material-ui/core/InputLabel\"\r\nimport FormControl from \"@material-ui/core/FormControl\"\r\nimport Select from \"@material-ui/core/Select\"\r\n\r\n//styling the form and component\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: 3,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 8px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 175,\r\n    marginTop: 33,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}))\r\n\r\n// input field styling\r\nconst useStylesReddit = makeStyles((theme) => ({\r\n  root: {\r\n    border: \"1px solid #e2e2e1\",\r\n    overflow: \"hidden\",\r\n    borderRadius: 4,\r\n    margin: \"4px 0px 0px 0px\",\r\n\r\n    backgroundColor: \"#fcfcfb\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\",\r\n    },\r\n    \"&$focused\": {\r\n      backgroundColor: \"#fff\",\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n\r\n  focused: {},\r\n}))\r\n\r\n// handling input field\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit()\r\n  return (\r\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\r\n  )\r\n}\r\n\r\nexport default function Delete(props) {\r\n  ///--------- Select the start or end input type ------------\r\n  const classes = useStyles()\r\n  const [where, setWhere] = React.useState(\"\")\r\n  const inputLabel = React.useRef(null)\r\n  const [labelWidth, setLabelWidth] = React.useState(0)\r\n  React.useEffect(() => {\r\n    if (inputLabel.current == null) return null\r\n    setLabelWidth(inputLabel.current.offsetWidth)\r\n  }, [])\r\n\r\n  const handleChange = (event) => {\r\n    setWhere(event.target.value)\r\n  }\r\n\r\n  //-----------------------------------------------------------------\r\n\r\n  const [data, setData] = React.useState(null) // stores the data entered in the list\r\n\r\n  const [position, setPosition] = React.useState(null) //position\r\n\r\n  if (props.open)\r\n    return (\r\n      <Card\r\n        className={classes.root}\r\n        style={{ border: \"1px solid rgba(22,45,167,0.9)\" }}\r\n      >\r\n        <CardContent className=\"bg-primary text-white \">\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            {\" \"}\r\n            Delete\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardContent className=\" text-center pb-0 mt-0\">\r\n          <Typography variant=\"h6\" component=\"h2\">\r\n            Position or value\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel ref={inputLabel} id=\"demo-simple-select-outlined-label\">\r\n              Position\r\n            </InputLabel>\r\n\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={where}\r\n              onChange={handleChange}\r\n              labelWidth={labelWidth}\r\n            >\r\n              <MenuItem value={\"start\"}>Start</MenuItem>\r\n              <MenuItem value={\"end\"}>End</MenuItem>\r\n            </Select>\r\n\r\n            <Typography className=\"text-center\">OR</Typography>\r\n\r\n            <RedditTextField\r\n              className=\"w-100\"\r\n              label=\"Index\"\r\n              onChange={(event) => {\r\n                setPosition(event.target.value)\r\n              }}\r\n              value={position ? position : \"\"}\r\n              variant=\"filled\"\r\n              id=\"reddit-input-index\"\r\n            />\r\n\r\n            <Typography className=\"text-center\"> {\"OR\"}</Typography>\r\n            <RedditTextField\r\n              label=\"Value\"\r\n              className={classes.margin}\r\n              onChange={(event) => {\r\n                setData(event.target.value)\r\n              }}\r\n              value={data ? data : \"\"}\r\n              variant=\"filled\"\r\n              id=\"reddit-input-value\"\r\n            />\r\n\r\n            <Button\r\n              className=\"mt-2\"\r\n              onClick={() => {\r\n                props.del(data, where, position) // calling the del function of the LinkList compoent\r\n                setData(null)\r\n                setPosition(null)\r\n              }}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </FormControl>\r\n        </CardActions>\r\n      </Card>\r\n    )\r\n  else return <div></div>\r\n}\r\n","import React from \"react\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardActions from \"@material-ui/core/CardActions\"\r\nimport CardContent from \"@material-ui/core/CardContent\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport FormControl from \"@material-ui/core/FormControl\"\r\n\r\n//styling the form and component\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: 3,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 8px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 175,\r\n    marginTop: 33,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}))\r\n\r\n// input field styling\r\nconst useStylesReddit = makeStyles((theme) => ({\r\n  root: {\r\n    border: \"1px solid #e2e2e1\",\r\n    overflow: \"hidden\",\r\n    borderRadius: 4,\r\n    margin: \"4px 0px 0px 0px\",\r\n\r\n    backgroundColor: \"#fcfcfb\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\",\r\n    },\r\n    \"&$focused\": {\r\n      backgroundColor: \"#fff\",\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n\r\n  focused: {},\r\n}))\r\n\r\n// handling input field\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit()\r\n  return (\r\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\r\n  )\r\n}\r\n\r\nexport default function Update(props) {\r\n  const classes = useStyles()\r\n  const [data, setData] = React.useState(null) // stores the data entered in the list\r\n  const [position, setPosition] = React.useState(null) //position\r\n  const classes1 = useStyles()\r\n\r\n  if (props.open)\r\n    return (\r\n      <Card\r\n        className={classes.root}\r\n        style={{ border: \"1px solid rgba(22,45,167,0.9)\" }}\r\n      >\r\n        <CardContent className=\"bg-primary text-white\">\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            Update\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardContent className=\" text-center pb-0 mt-0\">\r\n          <Typography variant=\"h6\" component=\"h2\">\r\n            Value at position\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <FormControl variant=\"outlined\" className={classes1.formControl}>\r\n            <RedditTextField\r\n              label=\"Index\"\r\n              className={classes.margin}\r\n              onChange={(event) => {\r\n                setPosition(event.target.value)\r\n              }}\r\n              value={position ? position : \"\"}\r\n              variant=\"filled\"\r\n              id=\"reddit-input\"\r\n            />\r\n\r\n            <RedditTextField\r\n              label=\"Value\"\r\n              className={classes.margin}\r\n              onChange={(event) => {\r\n                setData(event.target.value)\r\n              }}\r\n              value={data ? data : \"\"}\r\n              variant=\"filled\"\r\n              id=\"reddit-input\"\r\n            />\r\n\r\n            <Button\r\n              onClick={() => {\r\n                props.update(position, data) // calling the update function of the LinkList compoent\r\n                setData(null)\r\n                setPosition(null)\r\n              }}\r\n              className=\"mt-2\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </FormControl>\r\n        </CardActions>\r\n      </Card>\r\n    )\r\n  else return <div></div>\r\n}\r\n","import React from \"react\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardActions from \"@material-ui/core/CardActions\"\r\nimport CardContent from \"@material-ui/core/CardContent\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\n\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport FormControl from \"@material-ui/core/FormControl\"\r\n\r\n//styling the form and component\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: 3,\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 8px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 175,\r\n    marginTop: 33,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}))\r\n\r\n// input field styling\r\nconst useStylesReddit = makeStyles((theme) => ({\r\n  root: {\r\n    border: \"1px solid #e2e2e1\",\r\n    overflow: \"hidden\",\r\n    borderRadius: 4,\r\n    margin: \"4px 0px 0px 0px\",\r\n\r\n    backgroundColor: \"#fcfcfb\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\",\r\n    },\r\n    \"&$focused\": {\r\n      backgroundColor: \"#fff\",\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n\r\n  focused: {},\r\n}))\r\n\r\n// handling input field\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit()\r\n  return (\r\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\r\n  )\r\n}\r\n\r\nexport default function Search(props) {\r\n  const classes1 = useStyles() //style for formcontrol\r\n  const classes = useStyles() // style for card component\r\n  const [data, setData] = React.useState(null) // stores the data entered in the list\r\n  if (props.open)\r\n    return (\r\n      <Card\r\n        className={classes.root}\r\n        style={{ border: \"1px solid rgba(22,45,167,0.9)\" }}\r\n      >\r\n        <CardContent className=\"  bg-primary text-white\">\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            {\" \"}\r\n            Search{\" \"}\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardContent className=\"text-center pb-0 mt-0\">\r\n          <Typography variant=\"h6\" component=\"h2\">\r\n            Data\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n          <FormControl variant=\"outlined\" className={classes1.formControl}>\r\n            <RedditTextField\r\n              label=\"Value\"\r\n              className={classes.margin}\r\n              onChange={(event) => {\r\n                setData(event.target.value)\r\n              }}\r\n              value={data ? data : \"\"}\r\n              variant=\"filled\"\r\n              id=\"reddit-input\"\r\n            />\r\n\r\n            <Button\r\n              onClick={() => {\r\n                props.search(data) // calling the search function of the LinkList compoent\r\n                setData(null)\r\n              }}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              className=\"mt-2\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </FormControl>\r\n        </CardActions>\r\n      </Card>\r\n    )\r\n  else return <div></div>\r\n}\r\n","import React, { useState, Fragment } from \"react\"\r\n\r\nimport Element from \"common/components/Element\"\r\n\r\nimport Insert from \"./Insert\"\r\nimport Delete from \"./Delete\"\r\nimport Update from \"./Update\"\r\nimport Search from \"./Search\"\r\nimport { Grid } from \"@material-ui/core\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardContent from \"@material-ui/core/CardContent\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport clsx from \"clsx\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Radio from \"@material-ui/core/Radio\"\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\"\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\r\nimport FormControl from \"@material-ui/core/FormControl\"\r\nimport FormLabel from \"@material-ui/core/FormLabel\"\r\n\r\nconst gridStyle = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary,\r\n    margin: theme.spacing(2),\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  icon: {\r\n    borderRadius: \"50%\",\r\n    width: 16,\r\n    height: 16,\r\n    boxShadow:\r\n      \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\r\n    backgroundColor: \"#f5f8fa\",\r\n    backgroundImage:\r\n      \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\r\n    \"$root.Mui-focusVisible &\": {\r\n      outline: \"2px auto rgba(19,124,189,.6)\",\r\n      outlineOffset: 2,\r\n    },\r\n    \"input:hover ~ &\": {\r\n      backgroundColor: \"#ebf1f5\",\r\n    },\r\n    \"input:disabled ~ &\": {\r\n      boxShadow: \"none\",\r\n      background: \"rgba(206,217,224,.5)\",\r\n    },\r\n  },\r\n  checkedIcon: {\r\n    backgroundColor: \"#137cbd\",\r\n    backgroundImage:\r\n      \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\r\n    \"&:before\": {\r\n      display: \"block\",\r\n      width: 16,\r\n      height: 16,\r\n      backgroundImage: \"radial-gradient(#fff,#fff 28%,transparent 32%)\",\r\n      content: '\"\"',\r\n    },\r\n    \"input:hover ~ &\": {\r\n      backgroundColor: \"#106ba3\",\r\n    },\r\n  },\r\n})\r\n\r\nfunction StyledRadio(props) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Radio\r\n      className={classes.root}\r\n      disableRipple\r\n      color=\"default\"\r\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\r\n      icon={<span className={classes.icon} />}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default function LinkedList() {\r\n  const gridclass = gridStyle()\r\n  let [head, setHead] = useState(null)\r\n  let [list, setList] = useState(null)\r\n  let [rendered, setRendered] = useState(false)\r\n  let [radioVal, setRadioVal] = useState(false)\r\n\r\n  let showoperation = (event) => {\r\n    let operation = event.target.value\r\n    setRadioVal(operation)\r\n  }\r\n\r\n  // clear function --------------------------------------------\r\n  let clear = () => {\r\n    let curr = head\r\n    while (curr) {\r\n      curr.highlight = false\r\n      curr = curr.next\r\n    }\r\n    setHead(head)\r\n  }\r\n  // insert--------------------------------------------------------\r\n  let insert = (data, where) => {\r\n    if (data) {\r\n      clear()\r\n      let newNode = { info: data, next: null, highlight: false },\r\n        curr\r\n      if (!head) {\r\n        setHead({ ...newNode })\r\n      } else {\r\n        switch (where.toLowerCase()) {\r\n          case \"start\":\r\n            newNode.next = head\r\n            setHead({ ...newNode })\r\n            break\r\n          case \"end\":\r\n          default:\r\n            curr = head\r\n            while (curr.next) {\r\n              curr = curr.next\r\n            }\r\n            curr.next = newNode\r\n            setHead({ ...head })\r\n        }\r\n      }\r\n      setRendered(false)\r\n    } else {\r\n      alert(\"Empty Insert\")\r\n    }\r\n  }\r\n  //----------Using 'del' instead of delete is some keyword\r\n  let del = (data, where, position) => {\r\n    if (head) {\r\n      clear()\r\n      if (data) {\r\n        let head1 = head,\r\n          curr = head1\r\n        while (head1 && head1.info === data) {\r\n          head1 = head1.next\r\n          curr = head1\r\n        }\r\n        while (curr && curr.next) {\r\n          if (curr.next.info === data) {\r\n            curr.next = curr.next.next\r\n          } else {\r\n            curr = curr.next\r\n          }\r\n        }\r\n        setHead(head1)\r\n      } else if (position == parseInt(position)) {\r\n        position = parseInt(position)\r\n        if (position === 0) {\r\n          head = head.next\r\n        } else {\r\n          let curr = head\r\n          while (--position > 0 && curr) {\r\n            curr = curr.next\r\n          }\r\n          if (curr && curr.next) {\r\n            curr.next = curr.next.next\r\n          } else {\r\n            alert(\"No element to delete\")\r\n          }\r\n        }\r\n        setHead(head)\r\n      } else if (where) {\r\n        let curr = head\r\n        switch (where) {\r\n          case \"start\":\r\n            head = head.next\r\n            break\r\n          case \"end\":\r\n            if (!head.next) {\r\n              head = null\r\n            } else {\r\n              while (curr && curr.next && curr.next.next) {\r\n                curr = curr.next\r\n              }\r\n              if (curr && curr.next) {\r\n                curr.next = curr.next.next\r\n              }\r\n            }\r\n            break\r\n          default:\r\n        }\r\n        setHead(head)\r\n      } else {\r\n        alert(\"Invalid Deletion Exception\")\r\n      }\r\n      setRendered(false)\r\n    } else {\r\n      alert(\"List is empty\")\r\n    }\r\n  }\r\n  //Update------------------------------------------------------\r\n  let update = (position, value) => {\r\n    if (position && value && parseInt(position) >= 0) {\r\n      clear()\r\n      let head1 = head,\r\n        curr = head\r\n      while (curr && --position >= 0) {\r\n        curr = curr.next\r\n      }\r\n      if (curr) {\r\n        curr.info = value\r\n        curr.highlight = true\r\n        setHead(head1)\r\n        setRendered(false)\r\n      } else {\r\n        alert(\"Position out of bounds\")\r\n      }\r\n    } else {\r\n      alert(\"Cannot update\")\r\n    }\r\n  }\r\n\r\n  // Seacrh----------------------------------------------------\r\n\r\n  let search = (data) => {\r\n    if (data) {\r\n      clear()\r\n      let head1 = head,\r\n        curr = head\r\n      while (curr) {\r\n        if (curr.info === data) {\r\n          curr.highlight = true\r\n        }\r\n        curr = curr.next\r\n      }\r\n      setHead(head1)\r\n      setRendered(false)\r\n    } else {\r\n      alert(\"Empty Search\")\r\n    }\r\n  }\r\n\r\n  let renderList = () => {\r\n    let list = []\r\n    if (head) {\r\n      let curr = head,\r\n        key = 0\r\n      while (curr) {\r\n        list.push(\r\n          <Fragment key={`${key}-${curr.info}`}>\r\n            <Element\r\n              data={{ value: curr.info, index: key }}\r\n              type=\"LinkedList\"\r\n              next={!!curr.next}\r\n              highlight={curr.highlight}\r\n            />\r\n          </Fragment>\r\n        )\r\n        curr = curr.next\r\n        key++\r\n      }\r\n    }\r\n    setList(list)\r\n    setRendered(true)\r\n  }\r\n\r\n  //-----------------content of render function ------------------------------------\r\n  React.useEffect(() => {\r\n    if (!rendered) {\r\n      renderList()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className={gridclass.root}>\r\n      <Grid container direction=\"row\" justify=\"left\" alignItems=\"center\">\r\n        <Grid item container xs={6}>\r\n          <Paper className={gridclass.paper}>\r\n            <Grid item xs={12} spacing={3} alignItems=\"center\">\r\n              <Card>\r\n                <h6 className=\"bg-primary text-center text-white p-3\">\r\n                  Operations\r\n                </h6>\r\n                <CardContent className=\"pl-0 pr-0 pt-0 text-left\">\r\n                  <FormControl className=\"pl-3\" component=\"fieldset\">\r\n                    <FormLabel component=\"legend\"></FormLabel>\r\n                    <RadioGroup aria-label=\"gender\" name=\"customized-radios\">\r\n                      <FormControlLabel\r\n                        value=\"Insert\"\r\n                        onChange={showoperation}\r\n                        control={<StyledRadio />}\r\n                        label=\"Insert\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"Delete\"\r\n                        onChange={showoperation}\r\n                        control={<StyledRadio />}\r\n                        label=\"Delete\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"Update\"\r\n                        onChange={showoperation}\r\n                        control={<StyledRadio />}\r\n                        label=\"Update\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"Search\"\r\n                        onChange={showoperation}\r\n                        control={<StyledRadio />}\r\n                        label=\"Search\"\r\n                      />\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid className=\"mt-3\" item spacing={4} xs={12}>\r\n              <Insert\r\n                open={radioVal === \"Insert\"}\r\n                insert={(data, where) => {\r\n                  insert(data, where)\r\n                }}\r\n              />\r\n              <Search\r\n                open={radioVal === \"Search\"}\r\n                search={(data) => {\r\n                  search(data)\r\n                }}\r\n              />\r\n              <Delete\r\n                open={radioVal === \"Delete\"}\r\n                del={(data, where, position) => {\r\n                  del(data, where, position)\r\n                }}\r\n              />\r\n              <Update\r\n                open={radioVal === \"Update\"}\r\n                update={(position, value) => {\r\n                  update(position, value)\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item container xs={6}>\r\n          {list}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport * as ReactDOM from 'react-dom';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      position: 'relative',\n      textDecoration: 'none',\n      width: '100%',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      paddingTop: 8,\n      paddingBottom: 8,\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n    container: {\n      position: 'relative'\n    },\n\n    /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n    focusVisible: {},\n\n    /* Styles applied to the `component` element if dense. */\n    dense: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      alignItems: 'flex-start'\n    },\n\n    /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the inner `component` element if `divider={true}`. */\n    divider: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      backgroundClip: 'padding-box'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the inner `component` element if `button={true}`. */\n    button: {\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n    secondaryAction: {\n      // Add some space to avoid collision as `ListItemSecondaryAction`\n      // is absolutely positioned.\n      paddingRight: 48\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nvar ListItem = /*#__PURE__*/React.forwardRef(function ListItem(props, ref) {\n  var _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$button = props.button,\n      button = _props$button === void 0 ? false : _props$button,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      componentProp = props.component,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo,\n      _props$ContainerProps = props.ContainerProps;\n  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;\n\n  var ContainerClassName = _props$ContainerProps.className,\n      ContainerProps = _objectWithoutProperties(_props$ContainerProps, [\"className\"]),\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$divider = props.divider,\n      divider = _props$divider === void 0 ? false : _props$divider,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  var context = React.useContext(ListContext);\n  var childContext = {\n    dense: dense || context.dense || false,\n    alignItems: alignItems\n  };\n  var listItemRef = React.useRef(null);\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  var children = React.Children.toArray(childrenProp);\n  var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n\n  var componentProps = _extends({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled: disabled\n  }, other);\n\n  var Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(ListContext.Provider, {\n      value: childContext\n    }, /*#__PURE__*/React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), /*#__PURE__*/React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    var secondaryActionIndex = -1;\n\n    for (var i = children.length - 1; i >= 0; i -= 1) {\n      var child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);"],"names":["_ref","direction","label","_jsxs","children","_jsx","className","toLowerCase","getIcon","type","data","highlight","next","AllGreater","AllSmaller","element","elStyles","border","background","width","sanitizedType","index","Box","p","textAlign","style","color","fontSize","value","display","justifyContent","alignItems","component","Link","borderRadius","minHeight","minWidth","margin","position","top","useStyles","makeStyles","theme","root","bullet","transform","title","pos","marginBottom","marginTop","formControl","spacing","selectEmpty","useStylesReddit","overflow","backgroundColor","transition","transitions","create","boxShadow","fade","palette","primary","main","borderColor","focused","RedditTextField","props","classes","TextField","InputProps","disableUnderline","Insert","classes1","where","setWhere","useState","inputLabel","React","labelWidth","setLabelWidth","current","offsetWidth","handleChange","event","target","setData","open","Card","CardContent","Typography","variant","CardActions","FormControl","InputLabel","ref","id","Select","labelId","onChange","MenuItem","Button","onClick","insert","Delete","setPosition","del","Update","update","Search","search","gridStyle","flexGrow","paper","padding","text","secondary","control","icon","height","backgroundImage","outline","outlineOffset","checkedIcon","content","StyledRadio","Radio","disableRipple","clsx","LinkedList","gridclass","head","setHead","list","setList","rendered","setRendered","radioVal","setRadioVal","showoperation","operation","clear","curr","renderList","key","push","Fragment","Element","info","Grid","container","justify","item","xs","Paper","FormLabel","RadioGroup","name","FormControlLabel","newNode","alert","head1","parseInt","useEnhancedEffect","window","ListItem","_props$alignItems","_props$autoFocus","autoFocus","_props$button","button","childrenProp","componentProp","_props$ContainerCompo","ContainerComponent","_props$ContainerProps","ContainerProps","ContainerClassName","_objectWithoutProperties","_props$dense","dense","_props$disabled","disabled","_props$disableGutters","disableGutters","_props$divider","divider","focusVisibleClassName","_props$selected","selected","other","context","ListContext","childContext","listItemRef","focus","hasSecondaryAction","length","isMuiElement","handleOwnRef","instance","ReactDOM","handleRef","useForkRef","componentProps","_extends","gutters","alignItemsFlexStart","secondaryAction","Component","focusVisible","ButtonBase","pop","withStyles","textDecoration","boxSizing","paddingTop","paddingBottom","action","opacity","borderBottom","concat","backgroundClip","paddingLeft","paddingRight","duration","shortest","hover","tabIndex","_props$component","ListItemClasses","_props$role","role","tabIndexProp","undefined","typography","body1","_defineProperty","whiteSpace","breakpoints","up","body2"],"sourceRoot":""}