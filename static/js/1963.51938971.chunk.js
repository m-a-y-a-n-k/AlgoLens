"use strict";(self.webpackChunkAlgoLens=self.webpackChunkAlgoLens||[]).push([[1963],{1963:(e,t,l)=>{l.r(t),l.d(t,{default:()=>c});var n=l(2791);class r{constructor(){this.children={},this.isEndOfWord=!1}}class s{constructor(){this.root=new r}insert(e){let t=this.root;for(let l of e.toLowerCase())t.children[l]||(t.children[l]=new r),t=t.children[l];t.isEndOfWord=!0}search(e){let t=this.root;const l=[];for(let n of e.toLowerCase()){if(!t.children[n])return{found:!1,path:l};l.push(n),t=t.children[n]}return{found:t.isEndOfWord,path:l}}startsWith(e){let t=this.root;const l=[];for(let n of e.toLowerCase()){if(!t.children[n])return{found:!1,path:l};l.push(n),t=t.children[n]}return{found:!0,path:l}}delete(e){this.deleteHelper(this.root,e.toLowerCase(),0)}deleteHelper(e,t,l){if(l===t.length)return!!e.isEndOfWord&&(e.isEndOfWord=!1,0===Object.keys(e.children).length);const n=t[l],r=e.children[n];if(!r)return!1;return!!this.deleteHelper(r,t,l+1)&&(delete e.children[n],0===Object.keys(e.children).length&&!e.isEndOfWord)}getAllWords(){const e=[];return this.collectWords(this.root,"",e),e}collectWords(e,t,l){e.isEndOfWord&&l.push(t);for(let n in e.children)this.collectWords(e.children[n],t+n,l)}clone(){const e=new s;return e.root=this.cloneNode(this.root),e}cloneNode(e){if(!e)return null;const t=new r;t.isEndOfWord=e.isEndOfWord;for(let l in e.children)t.children[l]=this.cloneNode(e.children[l]);return t}}var i=l(184);const c=()=>{const[e,t]=(0,n.useState)(new s),[l,r]=(0,n.useState)(""),[c,o]=(0,n.useState)(""),[d,a]=(0,n.useState)(null),[h,u]=(0,n.useState)([]),f=(0,n.useRef)(null);(0,n.useEffect)((()=>{const e=f.current;e.getContext("2d").clearRect(0,0,e.width,e.height),k()}),[e,h]);const x=(0,n.useCallback)((()=>{l.trim()&&(t((e=>(e.insert(l.trim()),e.clone()))),r(""),a(null),u([]))}),[l]),g=(0,n.useCallback)((()=>{l.trim()&&(t((e=>(e.delete(l.trim()),e.clone()))),r(""),a(null),u([]))}),[l]),p=(0,n.useCallback)((()=>{if(c.trim()){const t=e.search(c.trim());a(t.found?"Word found!":"Word not found!"),u(t.path)}}),[e,c]),j=(0,n.useCallback)((()=>{if(c.trim()){const t=e.startsWith(c.trim());a(t.found?"Prefix exists in trie!":"Prefix not found in trie!"),u(t.path)}}),[e,c]),m=(0,n.useCallback)((()=>{t(new s),r(""),o(""),a(null),u([])}),[]),k=()=>{const t=f.current,l=t.getContext("2d"),n=t.width/2;if(l.beginPath(),l.arc(n,50,20,0,2*Math.PI),l.fillStyle="#8bc34a",l.fill(),l.strokeStyle="#4caf50",l.lineWidth=2,l.stroke(),l.fillStyle="white",l.textAlign="center",l.textBaseline="middle",l.font="14px Arial",l.fillText("ROOT",n,50),e.root.children){const r=Object.keys(e.root.children).sort();v(l,e.root,r,n,50,.8*t.width,60,1,[])}W(l,t)},v=(e,t,l,n,r,s,i,c,o)=>{if(0===l.length)return;const d=s/l.length,a=n-s/2+d/2;l.forEach(((l,s)=>{const u=a+s*d,f=r+i,x=t.children[l];e.beginPath(),e.moveTo(n,r+20),e.lineTo(u,f-20),e.strokeStyle=h.includes(l)?"#ff7043":"#ccc",e.lineWidth=h.includes(l)?3:2,e.stroke();const g=[...o,l],p=h.includes(l);e.beginPath(),e.arc(u,f,20,0,2*Math.PI),e.fillStyle=p?"#ff7043":x.isEndOfWord?"#4caf50":"#8bc34a",e.fill(),e.strokeStyle=x.isEndOfWord?"#2e7d32":"#4caf50",e.lineWidth=x.isEndOfWord?3:2,e.stroke(),e.fillStyle="white",e.textAlign="center",e.textBaseline="middle",e.font="bold 14px Arial",e.fillText(l.toUpperCase(),u,f);const j=Object.keys(x.children).sort();j.length>0&&v(e,x,j,u,f,.9*d,i,c+1,g)}))},W=(t,l)=>{const n=e.getAllWords(),r=l.width-150;t.fillStyle="#333",t.font="bold 14px Arial",t.textAlign="left",t.fillText("Words in Trie:",r,20),t.font="12px Arial",n.forEach(((e,l)=>{t.fillText(e,r,45+20*l)}))};return(0,i.jsxs)("div",{className:"trie-visualizer",children:[(0,i.jsx)("h4",{children:"Trie (Prefix Tree) Visualizer"}),(0,i.jsxs)("div",{className:"controls-container",children:[(0,i.jsxs)("div",{className:"input-group",children:[(0,i.jsx)("label",{children:"Insert/Delete Word:"}),(0,i.jsxs)("div",{className:"input-container",children:[(0,i.jsx)("input",{type:"text",placeholder:"Enter word",value:l,onChange:e=>r(e.target.value),onKeyPress:e=>"Enter"===e.key&&x()}),(0,i.jsx)("button",{onClick:x,children:"Insert"}),(0,i.jsx)("button",{onClick:g,children:"Delete"})]})]}),(0,i.jsxs)("div",{className:"input-group",children:[(0,i.jsx)("label",{children:"Search/Prefix Check:"}),(0,i.jsxs)("div",{className:"input-container",children:[(0,i.jsx)("input",{type:"text",placeholder:"Search or check prefix",value:c,onChange:e=>o(e.target.value),onKeyPress:e=>"Enter"===e.key&&p()}),(0,i.jsx)("button",{onClick:p,children:"Search"}),(0,i.jsx)("button",{onClick:j,children:"Check Prefix"})]})]}),(0,i.jsx)("div",{className:"input-container",children:(0,i.jsx)("button",{onClick:m,className:"clear-btn",children:"Clear Trie"})})]}),d&&(0,i.jsx)("div",{className:"search-result ".concat(d.includes("found")||d.includes("exists")?"success":"error"),children:d}),(0,i.jsxs)("div",{className:"legend",children:[(0,i.jsxs)("div",{className:"legend-item",children:[(0,i.jsx)("div",{className:"legend-circle root"}),(0,i.jsx)("span",{children:"Root Node"})]}),(0,i.jsxs)("div",{className:"legend-item",children:[(0,i.jsx)("div",{className:"legend-circle regular"}),(0,i.jsx)("span",{children:"Regular Node"})]}),(0,i.jsxs)("div",{className:"legend-item",children:[(0,i.jsx)("div",{className:"legend-circle end-word"}),(0,i.jsx)("span",{children:"End of Word"})]}),(0,i.jsxs)("div",{className:"legend-item",children:[(0,i.jsx)("div",{className:"legend-circle highlighted"}),(0,i.jsx)("span",{children:"Highlighted Path"})]})]}),(0,i.jsx)("div",{className:"canvas-container",children:(0,i.jsx)("canvas",{ref:f,width:1e3,height:600})})]})}}}]);
//# sourceMappingURL=1963.51938971.chunk.js.map