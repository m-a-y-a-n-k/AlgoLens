{"version":3,"file":"static/js/6305.ffd9b22c.chunk.js","mappings":"mJAGA,MAkEA,EAhEuBA,KACrB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAC5BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,MAC9BG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,IAEnCK,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAWC,aAAY,KAC3BH,GACGI,GACCA,EAX6B,GAWhBV,EAA0C,KAC1D,GAZgC,IAenC,MAAO,IAAMW,cAAcH,EAAS,GACnC,CAACR,IAEJ,MAAMY,EAAkBT,EAASH,EAEjC,OACEa,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,2BAELC,EAAAA,EAAAA,KAAA,SACEC,KAAK,SACLC,MAAOlB,EACPmB,SAAWC,IACT,MAAMC,EAAeC,OAAOF,EAAEG,OAAOL,OACjCG,GAAgB,GAAKA,GAAgB,IACvCpB,EAASoB,EAAa,QAI9BR,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAAO,6BAELC,EAAAA,EAAAA,KAAA,SACEC,KAAK,SACLC,MAAOf,EACPgB,SAAWC,IACT,MAAMI,EAAgBF,OAAOF,EAAEG,OAAOL,OAClCM,GAAiB,GAAKA,GAAiB,KACzCpB,EAAUoB,EAAc,WAKlCR,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,UACzBC,EAAAA,EAAAA,KAAA,OACEF,UAAU,SACVW,MAAO,CACLC,UAAY,aAAYvB,EAASwB,KAAKC,IAAIvB,SACxCF,EAASwB,KAAKE,IAAIxB,cAK1BQ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,qBAAmBH,EAAgBkB,QAAQ,OAC9CjB,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,2BAAyBV,GAAS,EAAIsB,KAAKI,KAAKD,QAAQ,WAEzD,C","sources":["routing/site/physics/components/CircularMotion/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport \"./CircularMotion.css\"\r\n\r\nconst ROTATION_INTERVAL_MILLISECONDS = 16\r\n\r\nconst CircularMotion = () => {\r\n  const [speed, setSpeed] = useState(1) // radians per second\r\n  const [radius, setRadius] = useState(100) // pixels\r\n  const [angle, setAngle] = useState(0) // current angle in radians\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setAngle(\r\n        (prevAngle) =>\r\n          prevAngle + (speed * ROTATION_INTERVAL_MILLISECONDS) / 1000\r\n      )\r\n    }, ROTATION_INTERVAL_MILLISECONDS)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [speed])\r\n\r\n  const angularMomentum = radius * speed\r\n\r\n  return (\r\n    <div className=\"circular-motion-container\">\r\n      <div className=\"controls\">\r\n        <label>\r\n          Speed (0 to 20 rad/s) :\r\n          <input\r\n            type=\"number\"\r\n            value={speed}\r\n            onChange={(e) => {\r\n              const updatedSpeed = Number(e.target.value)\r\n              if (updatedSpeed >= 0 && updatedSpeed <= 20)\r\n                setSpeed(updatedSpeed)\r\n            }}\r\n          />\r\n        </label>\r\n        <label>\r\n          Radius (0 to 120 pixels):\r\n          <input\r\n            type=\"number\"\r\n            value={radius}\r\n            onChange={(e) => {\r\n              const updatedRadius = Number(e.target.value)\r\n              if (updatedRadius >= 0 && updatedRadius <= 120)\r\n                setRadius(updatedRadius)\r\n            }}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"visualizer\">\r\n        <div\r\n          className=\"circle\"\r\n          style={{\r\n            transform: `translate(${radius * Math.cos(angle)}px, ${\r\n              radius * Math.sin(angle)\r\n            }px)`,\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"info\">\r\n        <p>Angular Momentum: {angularMomentum.toFixed(2)}</p>\r\n        <p>Number of Revolutions: {(angle / (2 * Math.PI)).toFixed(2)}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CircularMotion\r\n"],"names":["CircularMotion","speed","setSpeed","useState","radius","setRadius","angle","setAngle","useEffect","interval","setInterval","prevAngle","clearInterval","angularMomentum","_jsxs","className","children","_jsx","type","value","onChange","e","updatedSpeed","Number","target","updatedRadius","style","transform","Math","cos","sin","toFixed","PI"],"sourceRoot":""}