{"version":3,"file":"static/js/9089.d826fe9a.chunk.js","mappings":"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","sources":["routing/site/algo/components/Primality/Input.jsx","routing/site/algo/components/Primality/index.jsx","../node_modules/@material-ui/core/esm/Grid/Grid.js"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardActions from \"@material-ui/core/CardActions\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport { FormControl } from \"@material-ui/core\"\r\n\r\n//Card component styling\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 180,\r\n  },\r\n})\r\n\r\n//text input field styling\r\nconst useStylesReddit = makeStyles((theme) => ({\r\n  root: {\r\n    border: \"1px solid #e2e2e1\",\r\n    overflow: \"hidden\",\r\n    borderRadius: 4,\r\n    backgroundColor: \"#fcfcfb\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\",\r\n    },\r\n    \"&$focused\": {\r\n      backgroundColor: \"#fff\",\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  focused: {},\r\n}))\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit()\r\n\r\n  return (\r\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\r\n  )\r\n}\r\n\r\nconst formStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst textStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst buttonStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst Input = React.memo(({ checkPrime }) => {\r\n  const [input, setInput] = useState(null)\r\n  const classes = useStyles()\r\n  const inputStyles = textStyles()\r\n  const buttonStyle = buttonStyles()\r\n  const formStyle = formStyles()\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <h2 className=\"bg-success text-white p-2\">\r\n        Check whether input number is prime or composite\r\n      </h2>\r\n      <h4 className=\"text-primary p-2\">\r\n        A prime number is only divisible by 1 and itself and has no other\r\n        factors\r\n      </h4>\r\n      <CardActions>\r\n        <FormControl className={`pb-3 pr-0 pl-2 pt-1 ${formStyle.root}`}>\r\n          <RedditTextField\r\n            label=\"Number\"\r\n            className={inputStyles.root}\r\n            variant=\"filled\"\r\n            id=\"reddit-input-base\"\r\n            onChange={(event) => {\r\n              setInput(event.target.value)\r\n            }}\r\n            value={input ? input : \"\"}\r\n          />\r\n          <Button\r\n            className={buttonStyle.root}\r\n            onClick={() => {\r\n              checkPrime(parseInt(input))\r\n              setInput(null)\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </FormControl>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n})\r\n\r\nInput.displayName = \"Primes.Input\"\r\n\r\nexport default Input\r\n","import React, { useCallback, useState } from \"react\"\r\nimport { Grid } from \"@material-ui/core\"\r\nimport { Alert } from \"reactstrap\"\r\nimport Input from \"./Input\"\r\n\r\nconst Primes = () => {\r\n  const [alert, setAlert] = useState(null)\r\n  const [testFactor, setTestFactor] = useState(null)\r\n\r\n  const checkPrime = useCallback((number) => {\r\n    setAlert(null)\r\n    if (number > 1000000 || number < 0) {\r\n      setAlert({\r\n        text: \"Number is not supported yet. Enter in range 0 to 1000000\",\r\n        type: \"danger\",\r\n      })\r\n      return\r\n    }\r\n\r\n    if (number <= 1) {\r\n      setAlert({\r\n        text: `${number} is not a valid prime`,\r\n        type: \"danger\",\r\n      })\r\n      return\r\n    }\r\n\r\n    if (number <= 3) {\r\n      setAlert({\r\n        text: `${number} is a valid prime`,\r\n        type: \"success\",\r\n      })\r\n      return\r\n    }\r\n\r\n    if (number % 2 === 0) {\r\n      setAlert({\r\n        text: `${number} is composite since it is divisible by 2`,\r\n        type: \"success\",\r\n      })\r\n      return\r\n    }\r\n\r\n    if (number % 3 === 0) {\r\n      setAlert({\r\n        text: `${number} is composite since it is divisible by 3`,\r\n        type: \"success\",\r\n      })\r\n      return\r\n    }\r\n\r\n    let delay = 1000\r\n\r\n    for (let factor = 5; factor * factor <= number; factor += 6) {\r\n      delay = delay + 100\r\n\r\n      if (number % factor === 0) {\r\n        setAlert({\r\n          text: `${number} is composite and has a factor ${factor}`,\r\n          type: \"success\",\r\n        })\r\n        setTimeout(() => {\r\n          setTestFactor(null)\r\n        }, delay)\r\n        return\r\n      } else if (number % (factor + 2) === 0) {\r\n        setAlert({\r\n          text: `${number} is composite and has a factor ${factor + 2}`,\r\n          type: \"success\",\r\n        })\r\n        setTimeout(() => {\r\n          setTestFactor(null)\r\n        }, delay)\r\n        return\r\n      } else {\r\n        setTimeout(() => {\r\n          setTestFactor(factor)\r\n        }, delay)\r\n      }\r\n    }\r\n    delay = delay + 1000\r\n    setTimeout(() => {\r\n      setTestFactor(null)\r\n      setAlert({\r\n        text: `${number} is a valid prime`,\r\n        type: \"success\",\r\n      })\r\n    }, delay)\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Grid container className=\"text-center\">\r\n        <Grid item xs={12}>\r\n          <Input checkPrime={checkPrime} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {testFactor !== null && (\r\n            <Alert color={\"info\"}>\r\n              {`Number is not divisible by ${testFactor} or ${\r\n                testFactor + 2\r\n              }. Testing further ....`}\r\n            </Alert>\r\n          )}\r\n          {alert && (\r\n            <Alert\r\n              color={alert.type}\r\n              isOpen={!!alert.text}\r\n              toggle={() => setAlert(null)}\r\n            >\r\n              {alert.text}\r\n            </Alert>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Primes\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;"],"names":["useStyles","makeStyles","root","minWidth","useStylesReddit","theme","border","overflow","borderRadius","backgroundColor","transition","transitions","create","boxShadow","fade","palette","primary","main","borderColor","focused","RedditTextField","props","classes","_jsx","TextField","InputProps","disableUnderline","formStyles","width","margin","spacing","textStyles","buttonStyles","Input","React","_ref","checkPrime","input","setInput","useState","inputStyles","buttonStyle","formStyle","_jsxs","Card","className","variant","children","CardActions","FormControl","label","id","onChange","event","target","value","Button","onClick","parseInt","color","size","displayName","Primes","alert","setAlert","testFactor","setTestFactor","useCallback","number","text","type","delay","factor","setTimeout","_Fragment","Grid","container","item","xs","Alert","isOpen","toggle","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classNameProp","_props$component","component","Component","_props$container","_props$direction","direction","_props$item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","_props$zeroMinWidth","zeroMinWidth","other","_objectWithoutProperties","clsx","_extends","StyledGrid","withStyles","boxSizing","display","flexWrap","flexDirection","justifyContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name"],"sourceRoot":""}