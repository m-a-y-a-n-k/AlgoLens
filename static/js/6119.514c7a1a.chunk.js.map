{"version":3,"file":"static/js/6119.514c7a1a.chunk.js","mappings":"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","sources":["common/helpers/dimensions.js","routing/site/algo/components/Factorize/Input.jsx","routing/site/algo/components/Factorize/index.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\"\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window\r\n  return {\r\n    width,\r\n    height,\r\n  }\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(() =>\r\n    getWindowDimensions()\r\n  )\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions())\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize)\r\n    return () => window.removeEventListener(\"resize\", handleResize)\r\n  }, [])\r\n\r\n  return windowDimensions\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardActions from \"@material-ui/core/CardActions\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport { FormControl } from \"@material-ui/core\"\r\n\r\n//Card component styling\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 180,\r\n  },\r\n})\r\n\r\n//text input field styling\r\nconst useStylesReddit = makeStyles((theme) => ({\r\n  root: {\r\n    border: \"1px solid #e2e2e1\",\r\n    overflow: \"hidden\",\r\n    borderRadius: 4,\r\n    backgroundColor: \"#fcfcfb\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\",\r\n    },\r\n    \"&$focused\": {\r\n      backgroundColor: \"#fff\",\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  focused: {},\r\n}))\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit()\r\n\r\n  return (\r\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\r\n  )\r\n}\r\n\r\nconst formStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst textStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst buttonStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst Input = React.memo(({ disabled, setData }) => {\r\n  const [input, setInput] = useState(null)\r\n  const classes = useStyles()\r\n  const inputStyle = textStyles()\r\n  const buttonStyle = buttonStyles()\r\n  const formStyle = formStyles()\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <h2 className=\"bg-success text-white p-2\">\r\n        Compute factors of a whole number N = p x q x r ..... x z\r\n      </h2>\r\n      <h4 className=\"text-primary p-2\">\r\n        Finds numbers between 1 to N that completely divides N leaving remainder\r\n        0\r\n      </h4>\r\n      <CardActions>\r\n        <FormControl className={`pb-3 pr-0 pl-2 pt-1 ${formStyle.root}`}>\r\n          <RedditTextField\r\n            label=\"Number\"\r\n            className={inputStyle.root}\r\n            variant=\"filled\"\r\n            id=\"reddit-input-base\"\r\n            onChange={(event) => {\r\n              setInput(event.target.value)\r\n            }}\r\n            value={input ? input : \"\"}\r\n            disabled={disabled}\r\n          />\r\n          <Button\r\n            className={buttonStyle.root}\r\n            disabled={disabled}\r\n            onClick={() => {\r\n              setData(Number(input))\r\n              setInput(null)\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </FormControl>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n})\r\n\r\nInput.displayName = \"Factorial.Input\"\r\n\r\nexport default Input\r\n","import React, { useState, lazy, useCallback, useMemo } from \"react\"\r\nimport { FaEquals, FaCircle } from \"react-icons/fa\"\r\nimport { Grid } from \"@material-ui/core\"\r\nimport { Alert } from \"reactstrap\"\r\nimport { FixedSizeList as List } from \"react-window\"\r\nimport Input from \"./Input\"\r\nimport useWindowDimensions from \"common/helpers/dimensions\"\r\n\r\nconst LazyElement = lazy(() => import(\"common/components/Element\"))\r\n\r\nconst Factorize = () => {\r\n  const [input, setInput] = useState(null)\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [alert, setAlert] = useState(null)\r\n\r\n  const factorize = useCallback((number) => {\r\n    setDisabled(true)\r\n    if (number < 0 || !Number.isInteger(number)) {\r\n      setAlert({\r\n        type: \"danger\",\r\n        text: \"Factors will be shown for only whole numbers\",\r\n      })\r\n      setDisabled(false)\r\n      return []\r\n    }\r\n    if (number <= 1) {\r\n      setAlert({\r\n        type: \"success\",\r\n        text: \"Factors are shown in sorted order\",\r\n      })\r\n      setDisabled(false)\r\n      return [number] // Handle edge cases for 0 and 1\r\n    }\r\n\r\n    const factors = []\r\n\r\n    // Check odd numbers from 3 onwards\r\n    for (let i = 2; i * i <= number; i++) {\r\n      if (number % i === 0) {\r\n        factors.push(i)\r\n        if (i !== number / i) {\r\n          factors.push(number / i)\r\n        }\r\n      }\r\n    }\r\n\r\n    factors.push(1)\r\n    if (number !== 1) {\r\n      factors.push(number)\r\n    }\r\n\r\n    factors.sort((a, b) => a - b)\r\n    setAlert({\r\n      type: \"success\",\r\n      text: \"Factors are shown in sorted order\",\r\n    })\r\n    setDisabled(false)\r\n    return factors\r\n  }, [])\r\n\r\n  return (\r\n    <Grid container>\r\n      {alert && (\r\n        <Grid item xs={12}>\r\n          <Alert\r\n            color={alert.type}\r\n            isOpen={!!alert.text}\r\n            toggle={() => setAlert(null)}\r\n          >\r\n            {alert.text}\r\n          </Alert>\r\n        </Grid>\r\n      )}\r\n      <Grid container className=\"text-center\">\r\n        <Grid item xs={12}>\r\n          <Input setData={setInput} disabled={disabled} />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {parseInt(input) >= 0 && (\r\n        <Grid container className=\"text-center mt-4 mb-4 align-items-center\">\r\n          <Grid item xs={4}>\r\n            <LazyElement\r\n              highlight={true}\r\n              data={{ value: `Factors(${input})` }}\r\n              type=\"array\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <FaEquals style={{ margin: \"auto 5px\" }} />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <LazyList factorize={factorize} input={input} />\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst LazyList = ({ input, factorize }) => {\r\n  const factors = useMemo(() => factorize(input), [input])\r\n  const { width: innerWidth } = useWindowDimensions()\r\n\r\n  return (\r\n    <List\r\n      height={120}\r\n      itemCount={factors.length}\r\n      itemSize={240}\r\n      width={innerWidth * 0.5}\r\n      direction=\"horizontal\"\r\n    >\r\n      {({ index, style }) => (\r\n        <Grid container style={style} className=\"align-items-center\">\r\n          <Grid item xs={6}>\r\n            <LazyElement\r\n              data={{ value: factors[index], index: index + 1 }}\r\n              type=\"array\"\r\n            />\r\n          </Grid>\r\n          {index < factors.length - 1 && (\r\n            <Grid item xs={6}>\r\n              <FaCircle style={{ margin: \"auto 5px\", alignSelf: \"center\" }} />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      )}\r\n    </List>\r\n  )\r\n}\r\n\r\nexport default Factorize\r\n"],"names":["getWindowDimensions","innerWidth","width","innerHeight","height","window","useWindowDimensions","windowDimensions","setWindowDimensions","useState","useEffect","handleResize","addEventListener","removeEventListener","useStyles","makeStyles","root","minWidth","useStylesReddit","theme","border","overflow","borderRadius","backgroundColor","transition","transitions","create","boxShadow","fade","palette","primary","main","borderColor","focused","RedditTextField","props","classes","_jsx","TextField","InputProps","disableUnderline","formStyles","margin","spacing","textStyles","buttonStyles","Input","React","_ref","disabled","setData","input","setInput","inputStyle","buttonStyle","formStyle","_jsxs","Card","className","variant","children","CardActions","FormControl","label","id","onChange","event","target","value","Button","onClick","Number","color","size","displayName","LazyElement","lazy","LazyList","factorize","factors","useMemo","List","itemCount","length","itemSize","direction","_ref2","index","style","Grid","container","item","xs","data","type","FaCircle","alignSelf","Factorize","setDisabled","alert","setAlert","useCallback","number","isInteger","text","i","push","sort","a","b","Alert","isOpen","toggle","parseInt","highlight","FaEquals"],"sourceRoot":""}