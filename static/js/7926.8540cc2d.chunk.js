"use strict";(self.webpackChunkAlgoLens=self.webpackChunkAlgoLens||[]).push([[7926],{7926:(e,t,s)=>{s.r(t),s.d(t,{default:()=>I});var a=s(2791);const n="AStarPathfinding_container__T5b7E",r="AStarPathfinding_title__CO28l",l="AStarPathfinding_legend__rwfyG",i="AStarPathfinding_legendItem__n8jhK",o="AStarPathfinding_legendBox__ZIio+",c="AStarPathfinding_controls__nCmB6",d="AStarPathfinding_controlGroup__XjqqP",h="AStarPathfinding_slider__5sBIo",_="AStarPathfinding_btnPrimary__dr37B",u="AStarPathfinding_btnSecondary__e0fd5",f="AStarPathfinding_stats__NZNVb",p="AStarPathfinding_stat__IWfuM",g="AStarPathfinding_statLabel__QJfgg",w="AStarPathfinding_statValue__oGKoa",m="AStarPathfinding_gridContainer__O07xG",x="AStarPathfinding_grid__pLS36",j="AStarPathfinding_row__drAIx",S="AStarPathfinding_cell__gITm8",N="AStarPathfinding_empty__o4tbD",v="AStarPathfinding_start__Z941h",P="AStarPathfinding_end__+cHf5",A="AStarPathfinding_wall__K8cyM",y="AStarPathfinding_open__aPz57",b="AStarPathfinding_closed__3vbwG",$="AStarPathfinding_path__vxO3V",C="AStarPathfinding_instructions__PR6db";var L=s(184);const M="empty",k="wall",V="open",G="closed",E="path",I=()=>{const[e,t]=(0,a.useState)([]),[s,I]=(0,a.useState)({row:5,col:5}),[R,z]=(0,a.useState)({row:14,col:34}),[B,O]=(0,a.useState)(!1),[T,W]=(0,a.useState)(!1),[D,K]=(0,a.useState)(!1),[Z,q]=(0,a.useState)(20),[H,J]=(0,a.useState)({nodesVisited:0,pathLength:0}),[Q,U]=(0,a.useState)("wall"),X=(0,a.useRef)(!1);(0,a.useEffect)((()=>{F()}),[]);const F=()=>{const e=[];for(let t=0;t<20;t++){const s=[];for(let e=0;e<40;e++)s.push({row:t,col:e,type:M,f:1/0,g:1/0,h:0,parent:null});e.push(s)}t(e),K(!1),J({nodesVisited:0,pathLength:0})},Y=(e,t)=>Math.abs(e.row-t.row)+Math.abs(e.col-t.col),ee=(e,t)=>{const s=[],{row:a,col:n}=t;return[{r:-1,c:0},{r:1,c:0},{r:0,c:-1},{r:0,c:1}].forEach((t=>{let{r:r,c:l}=t;const i=a+r,o=n+l;i>=0&&i<20&&o>=0&&o<40&&s.push(e[i][o])})),s},te=e=>{const t=[];let s=e;for(;null!==s;)t.unshift(s),s=s.parent;return t},se=()=>{O(!1)},ae=(a,n)=>{if(T)return;const r=[...e],l=r[a][n];if("wall"===Q){if(a===s.row&&n===s.col||a===R.row&&n===R.col)return;l.type=l.type===k?M:k}else"start"===Q?(e[s.row][s.col].type!==k&&(r[s.row][s.col].type=M),I({row:a,col:n}),l.type=M):"end"===Q&&(e[R.row][R.col].type!==k&&(r[R.row][R.col].type=M),z({row:a,col:n}),l.type=M);t(r)},ne=e=>{if(e.row===s.row&&e.col===s.col)return v;if(e.row===R.row&&e.col===R.col)return P;switch(e.type){case k:return A;case V:return y;case G:return b;case E:return $;default:return N}};return(0,L.jsxs)("div",{className:n,children:[(0,L.jsx)("h1",{className:r,children:"A* Pathfinding Algorithm \ud83c\udfaf"}),(0,L.jsxs)("div",{className:l,children:[(0,L.jsxs)("div",{className:i,children:[(0,L.jsx)("div",{className:`${o} ${v}`}),(0,L.jsx)("span",{children:"Start"})]}),(0,L.jsxs)("div",{className:i,children:[(0,L.jsx)("div",{className:`${o} ${P}`}),(0,L.jsx)("span",{children:"End"})]}),(0,L.jsxs)("div",{className:i,children:[(0,L.jsx)("div",{className:`${o} ${A}`}),(0,L.jsx)("span",{children:"Wall"})]}),(0,L.jsxs)("div",{className:i,children:[(0,L.jsx)("div",{className:`${o} ${y}`}),(0,L.jsx)("span",{children:"Open Set"})]}),(0,L.jsxs)("div",{className:i,children:[(0,L.jsx)("div",{className:`${o} ${b}`}),(0,L.jsx)("span",{children:"Closed Set"})]}),(0,L.jsxs)("div",{className:i,children:[(0,L.jsx)("div",{className:`${o} ${$}`}),(0,L.jsx)("span",{children:"Path"})]})]}),(0,L.jsxs)("div",{className:c,children:[(0,L.jsxs)("div",{className:d,children:[(0,L.jsx)("label",{children:"Draw Mode:"}),(0,L.jsxs)("select",{value:Q,onChange:e=>U(e.target.value),disabled:T,children:[(0,L.jsx)("option",{value:"wall",children:"Wall"}),(0,L.jsx)("option",{value:"start",children:"Start Point"}),(0,L.jsx)("option",{value:"end",children:"End Point"})]})]}),(0,L.jsxs)("div",{className:d,children:[(0,L.jsx)("label",{children:"Speed:"}),(0,L.jsx)("input",{type:"range",min:"0",max:"45",value:Z,onChange:e=>q(Number(e.target.value)),className:h})]}),(0,L.jsx)("button",{onClick:async()=>{if(T)return;W(!0),K(!1),X.current=!1;const a=e.map((e=>e.map((e=>({...e,type:e.type===k||e.row===s.row&&e.col===s.col||e.row===R.row&&e.col===R.col?e.type:M,f:1/0,g:1/0,h:0,parent:null}))))),n=a[s.row][s.col],r=a[R.row][R.col];n.g=0,n.h=Y(n,r),n.f=n.g+n.h;const l=[n],i=new Set;let o=0;for(;l.length>0;){if(X.current)return void W(!1);l.sort(((e,t)=>e.f-t.f));const e=l.shift();if(e.row===r.row&&e.col===r.col){const n=te(e);for(const e of n)e.row===s.row&&e.col===s.col&&e.row===R.row&&e.col===R.col||(a[e.row][e.col].type=E,t([...a]),await new Promise((e=>setTimeout(e,50-Z))));return J({nodesVisited:o,pathLength:n.length-1}),K(!0),void W(!1)}i.add(`${e.row},${e.col}`),e.row===s.row&&e.col===s.col||(a[e.row][e.col].type=G),o++;const n=ee(a,e);for(const t of n){if(t.type===k||i.has(`${t.row},${t.col}`))continue;const s=e.g+1;s<t.g&&(t.parent=e,t.g=s,t.h=Y(t,r),t.f=t.g+t.h,l.find((e=>e.row===t.row&&e.col===t.col))||(l.push(t),t.row===R.row&&t.col===R.col||(a[t.row][t.col].type=V)))}t([...a]),J({nodesVisited:o,pathLength:0}),await new Promise((e=>setTimeout(e,50-Z)))}K(!0),W(!1),alert("No path found!")},disabled:T,className:_,children:T?"Running...":"Run A*"}),(0,L.jsx)("button",{onClick:()=>{X.current=!0},disabled:!T,className:u,children:"Stop"}),(0,L.jsx)("button",{onClick:()=>{if(T)return;const a=[...e];for(let e=0;e<20;e++)for(let t=0;t<40;t++)e===s.row&&t===s.col||e===R.row&&t===R.col||(a[e][t].type=Math.random()<.3?k:M);t(a)},disabled:T,className:u,children:"Generate Maze"}),(0,L.jsx)("button",{onClick:F,disabled:T,className:u,children:"Clear Grid"})]}),(0,L.jsxs)("div",{className:f,children:[(0,L.jsxs)("div",{className:p,children:[(0,L.jsx)("span",{className:g,children:"Nodes Visited:"}),(0,L.jsx)("span",{className:w,children:H.nodesVisited})]}),D&&H.pathLength>0&&(0,L.jsxs)("div",{className:p,children:[(0,L.jsx)("span",{className:g,children:"Path Length:"}),(0,L.jsx)("span",{className:w,children:H.pathLength})]})]}),(0,L.jsx)("div",{className:m,onMouseLeave:se,children:(0,L.jsx)("div",{className:x,children:e.map(((e,t)=>(0,L.jsx)("div",{className:j,children:e.map(((e,s)=>(0,L.jsx)("div",{className:`${S} ${ne(e)}`,onMouseDown:()=>((e,t)=>{O(!0),ae(e,t)})(t,s),onMouseEnter:()=>((e,t)=>{B&&ae(e,t)})(t,s),onMouseUp:se},`${t}-${s}`)))},t)))})}),(0,L.jsxs)("div",{className:C,children:[(0,L.jsx)("h3",{children:"How to use:"}),(0,L.jsxs)("ul",{children:[(0,L.jsx)("li",{children:'Select "Wall" mode and click/drag to draw walls'}),(0,L.jsx)("li",{children:'Select "Start Point" or "End Point" mode to reposition them'}),(0,L.jsx)("li",{children:'Click "Generate Maze" for a random maze'}),(0,L.jsx)("li",{children:'Click "Run A*" to watch the algorithm find the shortest path'}),(0,L.jsx)("li",{children:"A* uses f(n) = g(n) + h(n) where g is cost from start, h is heuristic to goal"})]})]})]})}}}]);
//# sourceMappingURL=7926.8540cc2d.chunk.js.map