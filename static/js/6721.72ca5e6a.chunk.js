(self.webpackChunkAlgoLens=self.webpackChunkAlgoLens||[]).push([[6721,267],{267:(t,e,r)=>{"use strict";r.r(e),r.d(e,{default:()=>l});r(2791);var n=r(184);const i=t=>{let{direction:e,label:r}=t;return(0,n.jsxs)("div",{children:[(0,n.jsx)("div",{className:"link-label",children:r}),(0,n.jsx)("div",{className:"link",children:(t=>{switch(t.toLowerCase()){case"left":return(0,n.jsx)("i",{className:"ico left"});case"up":return(0,n.jsx)("i",{className:"ico up"});case"down":return(0,n.jsx)("i",{className:"ico down"});default:return(0,n.jsx)("i",{className:"ico right"})}})(e)})]})},l=t=>{let{type:e,data:r,highlight:l,next:s,AllGreater:o,AllSmaller:a}=t,u=null,d={border:"1px solid white",background:"rgba(40,60,180,0.8)",width:"100%"};l&&(d.background="rgba(30,150,40,0.8)");const h=e.toLowerCase();switch(h){case"stack":u=[0===r.index&&(0,n.jsx)("div",{style:{padding:"8px",textAlign:"center"},children:"Top"},"Top"),(0,n.jsxs)("div",{style:{...d,background:l?"rgba(30,150,40,0.8)":"rgba(40,40,160,0.8)",padding:"8px",textAlign:"center"},children:[(0,n.jsx)("div",{style:{color:"white",fontSize:"18px"},children:r.value}),(0,n.jsx)("div",{style:{color:"white",fontSize:"12px"},children:r.index})]},`${r.index}-${r.value}`)];break;case"array":case"linkedlist":case"queues":u=(0,n.jsxs)("div",{style:{display:"flex",justifyContent:"center",alignItems:"center"},children:[("queues"===h||"linkedlist"===h)&&0===r.index&&(0,n.jsxs)("div",{style:{color:"white",padding:"8px",backgroundColor:"#dc3545",textAlign:"center",fontSize:"12px"},children:["linkedlist"===h?"Head":"Front"," ",(0,n.jsx)("br",{})]}),(0,n.jsxs)("div",{style:{...d,background:l?"rgba(30,150,40,0.8)":"rgba(40,60,180,0.8)",padding:"8px",textAlign:"center"},children:[(0,n.jsx)("div",{style:{color:"white",fontSize:"18px"},children:r.value}),r.index>=0&&(0,n.jsx)("div",{style:{color:"white",fontSize:"12px"},children:r.index})]}),("queues"===h||"linkedlist"===h)&&!1===s&&(0,n.jsx)("div",{style:{color:"white",padding:"8px",backgroundColor:"#dc3545",textAlign:"center",fontSize:"12px"},children:"linkedlist"===h?"Tail":"Rear"}),("linkedlist"===h||"queues"===h)&&s&&(0,n.jsx)("span",{children:(0,n.jsx)(i,{direction:"right"})},`${r.index}-${r.value}-nextlink`)]},`${r.value}-${r.index}`);break;case"sets":u=(0,n.jsx)("div",{style:{...d,background:l?"rgba(30,150,40,0.8)":o?"rgba(242,19,23,0.8)":a?"rgba(250,183,0,0.8)":"rgba(40,60,180,0.8)",borderRadius:"50%",minHeight:"100px",minWidth:"100px",margin:"20px",position:"relative",textAlign:"center"},children:(0,n.jsx)("div",{style:{color:"white",fontSize:"18px",position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)"},children:r.value})},r.value)}return r&&u}},6721:(t,e,r)=>{"use strict";r.r(e),r.d(e,{default:()=>c});var n=r(2791),i=r(267),l=r(184);const s={card:{border:"1px solid rgba(22,45,167,0.9)",borderRadius:"8px",padding:"16px",maxWidth:"400px",margin:"0 auto",backgroundColor:"#f8f9fa"},cardHeader:{backgroundColor:"#007bff",color:"white",padding:"8px 16px",borderRadius:"8px 8px 0 0"},cardContent:{textAlign:"center",padding:"16px"},inputField:{width:"100%",padding:"10px",margin:"8px 0",borderRadius:"4px",border:"1px solid #ced4da"},button:{marginTop:"8px",padding:"10px 16px",borderRadius:"4px",border:"none",backgroundColor:"#007bff",color:"white",cursor:"pointer"}};function o(t){const[e,r]=n.useState(null);return t.open?(0,l.jsxs)("div",{style:s.card,children:[(0,l.jsx)("div",{style:s.cardHeader,children:(0,l.jsx)("h2",{children:"Insert"})}),(0,l.jsxs)("div",{style:s.cardContent,children:[(0,l.jsx)("h3",{children:"Enter data"}),(0,l.jsx)("input",{type:"text",placeholder:"Enter Data",style:s.inputField,onChange:t=>r(t.target.value),value:e||""}),(0,l.jsx)("button",{style:s.button,onClick:()=>{t.insert(e),r(null)},children:"Submit"})]})]}):(0,l.jsx)("div",{})}function a(t){const[e,r]=n.useState(null);return t.open?(0,l.jsxs)("div",{className:"card",style:{border:"1px solid rgba(22,45,167,0.9)"},children:[(0,l.jsx)("div",{className:"card-header bg-primary text-white",children:(0,l.jsx)("h5",{className:"mb-0",children:"Delete"})}),(0,l.jsxs)("div",{className:"card-body",children:[(0,l.jsxs)("div",{className:"form-group mt-3",children:[(0,l.jsx)("label",{htmlFor:"value-input",children:"Value"}),(0,l.jsx)("input",{type:"text",id:"value-input",className:"form-control",onChange:t=>r(t.target.value),value:e||""})]}),(0,l.jsx)("button",{className:"btn btn-outline-primary mt-2",onClick:()=>{t.del(e),r(null)},children:"Submit"})]})]}):(0,l.jsx)("div",{})}function u(t){const[e,r]=(0,n.useState)(null);return t.open?(0,l.jsxs)("div",{style:{border:"1px solid rgba(22,45,167,0.9)",borderRadius:"8px",maxWidth:"400px",margin:"16px auto",boxShadow:"0 4px 8px rgba(0, 0, 0, 0.1)"},children:[(0,l.jsx)("div",{style:{backgroundColor:"#007bff",color:"white",padding:"16px",borderRadius:"8px 8px 0 0",textAlign:"center"},children:(0,l.jsx)("h2",{children:"Search"})}),(0,l.jsx)("div",{style:{padding:"16px",textAlign:"center"},children:(0,l.jsx)("h3",{children:"Data"})}),(0,l.jsxs)("div",{style:{padding:"16px",textAlign:"center"},children:[(0,l.jsxs)("div",{style:{marginBottom:"16px"},children:[(0,l.jsx)("label",{htmlFor:"reddit-input",style:{display:"block",marginBottom:"8px",fontWeight:"bold",textAlign:"left"},children:"Value"}),(0,l.jsx)("input",{type:"text",id:"reddit-input",value:e||"",onChange:t=>r(t.target.value),style:{width:"100%",padding:"10px",borderRadius:"4px",border:"1px solid #ccc",fontSize:"16px"}})]}),(0,l.jsx)("button",{onClick:()=>{t.search(e,"all-greater"),r(null)},style:{padding:"10px 16px",margin:"8px",borderRadius:"4px",border:"none",backgroundColor:"#007bff",color:"white",fontSize:"16px",cursor:"pointer"},children:"All Greater elements"}),(0,l.jsx)("button",{onClick:()=>{t.search(e,"alls"),r(null)},style:{padding:"10px 16px",margin:"8px",borderRadius:"4px",border:"none",backgroundColor:"#007bff",color:"white",fontSize:"16px",cursor:"pointer"},children:"All Smaller elements"}),(0,l.jsx)("button",{onClick:()=>{t.search(e,"no"),r(null)},style:{padding:"10px 16px",margin:"8px",borderRadius:"4px",border:"none",backgroundColor:"#007bff",color:"white",fontSize:"16px",cursor:"pointer"},children:"Submit"})]})]}):(0,l.jsx)("div",{})}var d=r(8530),h=r.n(d);function c(){const[t,e]=(0,n.useState)(!1),[r,s]=(0,n.useState)(""),[d,c]=(0,n.useState)(null),[p,f]=(0,n.useState)(new(h())),x=t=>{e(t.target.value)},g=t=>{let e=new(h());return t&&0!==t.length?(t.forEach((t=>{e.insert(t)})),e):e};return(0,l.jsxs)("div",{style:{display:"flex",flexDirection:"row",padding:"16px"},children:[(0,l.jsxs)("div",{style:{flex:1,marginRight:"16px"},children:[(0,l.jsxs)("div",{style:{padding:"16px",border:"1px solid #ccc"},children:[(0,l.jsx)("h6",{style:{backgroundColor:"#007bff",color:"white",padding:"8px",textAlign:"center"},children:"Operations"}),(0,l.jsx)("div",{style:{padding:"8px"},children:(0,l.jsxs)("fieldset",{style:{border:"none"},children:[(0,l.jsx)("legend",{style:{fontSize:"14px"},children:"Choose Operation"}),(0,l.jsxs)("label",{children:[(0,l.jsx)("input",{type:"radio",name:"operation",value:"Insert",onChange:x}),"Insert"]}),(0,l.jsxs)("label",{children:[(0,l.jsx)("input",{type:"radio",name:"operation",value:"Delete",onChange:x}),"Delete"]}),(0,l.jsxs)("label",{children:[(0,l.jsx)("input",{type:"radio",name:"operation",value:"Search",onChange:x}),"Search"]})]})})]}),(0,l.jsxs)("div",{style:{marginTop:"16px"},children:[(0,l.jsx)(o,{open:"Insert"===t,insert:t=>(t=>{if(t)if(t.length<7&&!isNaN(t)){if(p.contains(Number(t)))return void alert("Already Present");const e=g(p);e.insert(Number(t)),f(e)}else alert("Invalid input (must contain integers only)");else alert("Enter data")})(t)}),(0,l.jsx)(u,{open:"Search"===t,search:(t,e)=>((t,e)=>{if(t)if(t.length<7&&!isNaN(t)){if(!p||0===p.length)return void alert("Set is empty");switch(s(e),c(Number(t)),e){case"no":!p.contains(Number(t))&&alert("Data Not Found");break;case"all-smaller":Number(p.beginIterator().value())>Number(t)&&alert("No smaller element present");break;case"all-greater":Number(p.endIterator().previous().value())<Number(t)&&alert("No Greater Element present")}}else alert("Invalid input (must contain integers only)");else alert("Enter data")})(t,e)}),(0,l.jsx)(a,{open:"Delete"===t,del:t=>(t=>{if(t)if(t.length<6&&!isNaN(t))if(p.contains(Number(t))){const e=g(p);e.remove(Number(t)),f(e)}else alert("Value not exists in the set");else alert("Invalid input (must contain integers only)");else alert("Enter data")})(t)})]})]}),(0,l.jsx)("div",{style:{flex:1,border:p.length>0?"2px solid black":"",padding:"16px"},children:p&&p.length>0&&p.map(((t,e)=>(0,l.jsx)(n.Fragment,{children:(0,l.jsx)(i.default,{data:{value:Number(t)},type:"sets",next:!0,highlight:"no"===r&&null!==d&&Number(t)===Number(d),AllGreater:"all-greater"===r&&Number(t)>Number(d),AllSmaller:"all-smaller"===r&&Number(t)<Number(d)})},`${e}-${t}`)))})]})}},8530:function(t){t.exports=function(){"use strict";class t{constructor(t){if(null==(null!=t?t.strategy:void 0))throw"Must pass options.strategy, a strategy";if(null==(null!=t?t.comparator:void 0))throw"Must pass options.comparator, a comparator";if(null==(null!=t?t.onInsertConflict:void 0))throw"Must pass options.onInsertConflict, a function";this.priv=new t.strategy(t),this.length=0}insert(t){return this.priv.insert(t),this.length+=1,this}remove(t){return this.priv.remove(t),this.length-=1,this}clear(){return this.priv.clear(),this.length=0,this}contains(t){return this.priv.contains(t)}toArray(){return this.priv.toArray()}forEach(t,e){return this.priv.forEachImpl(t,this,e),this}map(t,e){const r=[];return this.forEach((function(n,i,l){return r.push(t.call(e,n,i,l))})),r}filter(t,e){const r=[];return this.forEach((function(n,i,l){if(t.call(e,n,i,l))return r.push(n)})),r}every(t,e){let r=!0;return this.forEach((function(n,i,l){r&&!t.call(e,n,i,l)&&(r=!1)})),r}some(t,e){let r=!1;return this.forEach((function(n,i,l){!r&&t.call(e,n,i,l)&&(r=!0)})),r}findIterator(t){return this.priv.findIterator(t)}beginIterator(){return this.priv.beginIterator()}endIterator(){return this.priv.endIterator()}}class e{constructor(t,e){this.priv=t,this.index=e,this.data=this.priv.data}hasNext(){return this.index<this.data.length}hasPrevious(){return this.index>0}value(){return this.index<this.data.length?this.data[this.index]:null}setValue(t){if(!this.priv.options.allowSetValue)throw"Must set options.allowSetValue";if(!this.hasNext())throw"Cannot set value at end of set";return this.data[this.index]=t}next(){return this.index>=this.data.length?null:new e(this.priv,this.index+1)}previous(){return this.index<=0?null:new e(this.priv,this.index-1)}}const r=(t,e,r)=>{let n=0,i=t.length;for(;n<i;){const l=n+i>>>1;r(t[l],e)<0?n=l+1:i=l}return n};class n{constructor(t){this.options=t,this.onInsertConflict=this.options.onInsertConflict,this.comparator=this.options.comparator,this.data=[]}toArray(){return this.data}insert(t){const e=r(this.data,t,this.comparator);return void 0!==this.data[e]&&0===this.comparator(this.data[e],t)?this.data.splice(e,1,this.onInsertConflict(this.data[e],t)):this.data.splice(e,0,t)}remove(t){const e=r(this.data,t,this.comparator);if(0!==this.comparator(this.data[e],t))throw"Value not in set";return this.data.splice(e,1)}clear(){return this.data.length=0}contains(t){const e=r(this.data,t,this.comparator);return this.index!==this.data.length&&0===this.comparator(this.data[e],t)}forEachImpl(t,e,r){const n=this.data,i=n.length;for(let l=0;l<i;l++)t.call(r,n[l],l,e)}findIterator(t){const n=r(this.data,t,this.comparator);return new e(this,n)}beginIterator(){return new e(this,0)}endIterator(){return new e(this,this.data.length)}}const i=(t,e)=>{for(;null!==e[t];){const r=e;(e=e[t])._iteratorParentNode=r}return e},l=(t,e)=>{let r,n;if(null!==e[t])r=e,(e=e[t])._iteratorParentNode=r,n="left"===t?"right":"left",e=i(n,e);else{for(;null!==(r=e._iteratorParentNode)&&r[t]===e;)e=r;e=r}return e};class s{constructor(t,e){this.tree=t,this.node=e}next(){if(null===this.node)return null;{const t=l("right",this.node);return new s(this.tree,t)}}previous(){if(null===this.node){if(null===this.tree.root)return null;{this.tree.root._iteratorParentNode=null;const t=i("right",this.tree.root);return new s(this.tree,t)}}{const t=l("left",this.node);return null===t?null:new s(this.tree,t)}}hasNext(){return null!==this.node}hasPrevious(){return null!==this.previous()}value(){return null===this.node?null:this.node.value}setValue(t){if(!this.tree.options.allowSetValue)throw"Must set options.allowSetValue";if(!this.hasNext())throw"Cannot set value at end of set";return this.node.value=t}}s.find=function(t,e,r){const n=t.root;null!=n&&(n._iteratorParentNode=null);let i=n,l=null;for(;null!==i;){const t=r(e,i.value);if(0===t)break;if(t<0){if(null===i.left)break;l=i,i.left._iteratorParentNode=i,i=i.left}else{if(null===i.right){i=l;break}i.right._iteratorParentNode=i,i=i.right}}return new s(t,i)},s.left=t=>{if(null===t.root)return new s(t,null);{t.root._iteratorParentNode=null;const e=i("left",t.root);return new s(t,e)}},s.right=t=>new s(t,null);const o=(t,e)=>{null!==t&&(o(t.left,e),e(t.value),o(t.right,e))};class a{toArray(){const t=[];return o(this.root,(function(e){return t.push(e)})),t}clear(){return this.root=null}forEachImpl(t,e,r){let n=0;o(this.root,(function(i){t.call(r,i,n,e),n+=1}))}contains(t){const e=this.comparator;let r=this.root;for(;null!==r;){const n=e(t,r.value);if(0===n)break;r=n<0?r.left:r.right}return null!==r&&0===e(r.value,t)}findIterator(t){return s.find(this,t,this.comparator)}beginIterator(){return s.left(this)}endIterator(){return s.right(this)}}class u{constructor(t){this.value=t,this.left=null,this.right=null}}const d=(t,e)=>{for(;null!==t[e];)t=t[e];return t},h=(t,e,r)=>{if(null===t)throw"Value not in set";const n=r(e,t.value);if(n<0)t.left=h(t.left,e,r);else if(n>0)t.right=h(t.right,e,r);else if(null===t.left&&null===t.right)t=null;else if(null===t.right)t=t.left;else if(null===t.left)t=t.right;else{const e=d(t.right,"left");t.value=e.value,t.right=h(t.right,e.value,r)}return t};class c extends a{constructor(t){super(),this.options=t,this.comparator=this.options.comparator,this.onInsertConflict=this.options.onInsertConflict,this.root=null}insert(t){const e=this.comparator;if(null!==this.root){let r=this.root,n=null;for(;;){const i=e(t,r.value);if(0===i)return void(r.value=this.onInsertConflict(r.value,t));if(n=i<0?"left":"right",null===r[n])break;r=r[n]}return r[n]=new u(t)}return this.root=new u(t)}remove(t){return this.root=h(this.root,t,this.comparator)}}class p{constructor(t){this.value=t,this.left=null,this.right=null,this.isRed=!0}}const f=t=>{const e=t.right;return t.right=e.left,e.left=t,e.isRed=t.isRed,t.isRed=!0,e},x=t=>{const e=t.left;return t.left=e.right,e.right=t,e.isRed=t.isRed,t.isRed=!0,e},g=t=>{t.isRed=!t.isRed,t.left.isRed=!t.left.isRed,t.right.isRed=!t.right.isRed},v=t=>(g(t),null!==t.right&&null!==t.right.left&&t.right.left.isRed&&(t.right=x(t.right),t=f(t),g(t)),t),b=t=>(g(t),null!==t.left&&null!==t.left.left&&t.left.left.isRed&&(t=x(t),g(t)),t),m=(t,e,r,n)=>{if(null===t)return new p(e);const i=r(e,t.value);return 0===i?t.value=n(t.value,e):i<0?t.left=m(t.left,e,r,n):t.right=m(t.right,e,r,n),null===t.right||!t.right.isRed||null!==t.left&&t.left.isRed||(t=f(t)),null!==t.left&&t.left.isRed&&null!==t.left.left&&t.left.left.isRed&&(t=x(t)),null!==t.left&&t.left.isRed&&null!==t.right&&t.right.isRed&&g(t),t},y=t=>{for(;null!==t.left;)t=t.left;return t},j=t=>(null!==t.right&&t.right.isRed&&(t=f(t)),null!==t.left&&t.left.isRed&&null!==t.left.left&&t.left.left.isRed&&(t=x(t)),null!==t.left&&t.left.isRed&&null!==t.right&&t.right.isRed&&g(t),t),w=t=>null===t.left?null:(t.left.isRed||null!==t.left.left&&t.left.left.isRed||(t=v(t)),t.left=w(t.left),j(t)),N=(t,e,r)=>{if(null===t)throw"Value not in set";if(r(e,t.value)<0){if(null===t.left)throw"Value not in set";t.left.isRed||null!==t.left.left&&t.left.left.isRed||(t=v(t)),t.left=N(t.left,e,r)}else{if(null!==t.left&&t.left.isRed&&(t=x(t)),null===t.right){if(0===r(e,t.value))return null;throw"Value not in set"}t.right.isRed||null!==t.right.left&&t.right.left.isRed||(t=b(t)),0===r(e,t.value)?(t.value=y(t.right).value,t.right=w(t.right)):t.right=N(t.right,e,r)}return null!==t&&(t=j(t)),t};class R extends a{constructor(t){super(),this.options=t,this.comparator=this.options.comparator,this.onInsertConflict=this.options.onInsertConflict,this.root=null}insert(t){this.root=m(this.root,t,this.comparator,this.onInsertConflict),this.root.isRed=!1}remove(t){this.root=N(this.root,t,this.comparator),null!==this.root&&(this.root.isRed=!1)}}const C={OnInsertConflictThrow:(t,e)=>{throw new Error("Value already in set")},OnInsertConflictReplace:(t,e)=>e,OnInsertConflictIgnore:(t,e)=>t};class k extends t{constructor(t){t||(t={}),t.strategy||(t.strategy=R),t.comparator||(t.comparator=function(t,e){return(t||0)-(e||0)}),t.onInsertConflict||(t.onInsertConflict=C.OnInsertConflictThrow),super(t)}}return k.ArrayStrategy=n,k.BinaryTreeStrategy=c,k.RedBlackTreeStrategy=R,Object.assign(k,C),k}()}}]);
//# sourceMappingURL=6721.72ca5e6a.chunk.js.map