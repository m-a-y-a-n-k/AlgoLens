{"version":3,"file":"static/js/2549.061d5a3f.chunk.js","mappings":";kJAEAA,EAAAA,GAAAA,YAAkBC,EAAAA,oBCIlB,SAASC,EAAMC,GACb,OAAOA,EAAI,GAAM,CACnB,kDACA,MAAMC,EAAMA,CAACD,EAAGE,EAAGC,IAAMC,KAAKC,IAAID,KAAKE,IAAIN,EAAGG,GAAID,GAClD,SAASK,EAAIP,GACX,OAAOC,EAAIF,EAAU,KAAJC,GAAW,EAAG,IACjC,CAIA,SAASQ,EAAIR,GACX,OAAOC,EAAIF,EAAU,IAAJC,GAAU,EAAG,IAChC,CACA,SAASS,EAAIT,GACX,OAAOC,EAAIF,EAAMC,EAAI,MAAQ,IAAK,EAAG,EACvC,CACA,SAASU,EAAIV,GACX,OAAOC,EAAIF,EAAU,IAAJC,GAAU,EAAG,IAChC,CAEA,MAAMW,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAGC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IACrJC,EAAM,IAAI,oBACVC,EAAKN,GAAKK,EAAQ,GAAJL,GACdO,EAAKP,GAAKK,GAAS,IAAJL,IAAa,GAAKK,EAAQ,GAAJL,GACrCQ,EAAKR,IAAW,IAAJA,IAAa,KAAY,GAAJA,GAyBvC,SAASS,EAAU5B,GACjB,IAAIuB,EAzBUvB,IAAK2B,EAAG3B,EAAE6B,IAAMF,EAAG3B,EAAE8B,IAAMH,EAAG3B,EAAEmB,IAAMQ,EAAG3B,EAAEkB,GAyBjDa,CAAQ/B,GAAKyB,EAAKC,EAC1B,OAAO1B,EACH,IAAMuB,EAAEvB,EAAE6B,GAAKN,EAAEvB,EAAE8B,GAAKP,EAAEvB,EAAEmB,GAJpBa,EAACd,EAAGK,IAAML,EAAI,IAAMK,EAAEL,GAAK,GAIFc,CAAMhC,EAAEkB,EAAGK,QAC5CU,CACN,CAEA,MAAMC,EAAS,+GACf,SAASC,EAAShC,EAAGiC,EAAGlC,GACtB,MAAMgB,EAAIkB,EAAIhC,KAAKE,IAAIJ,EAAG,EAAIA,GACxBqB,EAAI,SAACc,GAAC,IAAEC,EAACC,UAAAC,OAAA,QAAAP,IAAAM,UAAA,GAAAA,UAAA,IAAIF,EAAIlC,EAAI,IAAM,GAAE,OAAKD,EAAIgB,EAAId,KAAKC,IAAID,KAAKE,IAAIgC,EAAI,EAAG,EAAIA,EAAG,IAAK,EAAE,EACvF,MAAO,CAACf,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASkB,EAAStC,EAAGiC,EAAGpC,GACtB,MAAMuB,EAAI,SAACc,GAAC,IAAEC,EAACC,UAAAC,OAAA,QAAAP,IAAAM,UAAA,GAAAA,UAAA,IAAIF,EAAIlC,EAAI,IAAM,EAAC,OAAKH,EAAIA,EAAIoC,EAAIhC,KAAKC,IAAID,KAAKE,IAAIgC,EAAG,EAAIA,EAAG,GAAI,EAAE,EACrF,MAAO,CAACf,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASmB,EAASvC,EAAGwC,EAAGxB,GACtB,MAAMyB,EAAMT,EAAShC,EAAG,EAAG,IAC3B,IAAI0C,EAMJ,IALIF,EAAIxB,EAAI,IACV0B,EAAI,GAAKF,EAAIxB,GACbwB,GAAKE,EACL1B,GAAK0B,GAEFA,EAAI,EAAGA,EAAI,EAAGA,IACjBD,EAAIC,IAAM,EAAIF,EAAIxB,EAClByB,EAAIC,IAAMF,EAEZ,OAAOC,CACT,CAUA,SAASE,EAAQ9C,GACf,MACM6B,EAAI7B,EAAE6B,EADE,IAERC,EAAI9B,EAAE8B,EAFE,IAGRX,EAAInB,EAAEmB,EAHE,IAIRd,EAAMD,KAAKC,IAAIwB,EAAGC,EAAGX,GACrBb,EAAMF,KAAKE,IAAIuB,EAAGC,EAAGX,GACrBjB,GAAKG,EAAMC,GAAO,EACxB,IAAIH,EAAGiC,EAAGf,EAOV,OANIhB,IAAQC,IACVe,EAAIhB,EAAMC,EACV8B,EAAIlC,EAAI,GAAMmB,GAAK,EAAIhB,EAAMC,GAAOe,GAAKhB,EAAMC,GAC/CH,EArBJ,SAAkB0B,EAAGC,EAAGX,EAAGE,EAAGhB,GAC5B,OAAIwB,IAAMxB,GACCyB,EAAIX,GAAKE,GAAMS,EAAIX,EAAI,EAAI,GAElCW,IAAMzB,GACAc,EAAIU,GAAKR,EAAI,GAEfQ,EAAIC,GAAKT,EAAI,CACvB,CAaQ0B,CAASlB,EAAGC,EAAGX,EAAGE,EAAGhB,GACzBF,EAAQ,GAAJA,EAAS,IAER,CAAK,EAAJA,EAAOiC,GAAK,EAAGlC,EACzB,CACA,SAAS8C,EAAMzB,EAAGL,EAAGC,EAAGC,GACtB,OACE6B,MAAMC,QAAQhC,GACVK,EAAEL,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAChBK,EAAEL,EAAGC,EAAGC,IACZ+B,IAAI3C,EACR,CACA,SAAS4C,EAAQjD,EAAGiC,EAAGlC,GACrB,OAAO8C,EAAMb,EAAUhC,EAAGiC,EAAGlC,EAC/B,CAOA,SAASmD,EAAIlD,GACX,OAAQA,EAAI,IAAM,KAAO,GAC3B,CACA,SAASmD,EAASC,GAChB,MAAMC,EAAItB,EAAOuB,KAAKF,GACtB,IACIvD,EADAkB,EAAI,IAER,IAAKsC,EACH,OAEEA,EAAE,KAAOxD,IACXkB,EAAIsC,EAAE,GAAKjD,GAAKiD,EAAE,IAAMhD,GAAKgD,EAAE,KAEjC,MAAMrD,EAAIkD,GAAKG,EAAE,IACXE,GAAMF,EAAE,GAAK,IACbG,GAAMH,EAAE,GAAK,IAQnB,OANExD,EADW,QAATwD,EAAE,GAtBR,SAAiBrD,EAAGwC,EAAGxB,GACrB,OAAO6B,EAAMN,EAAUvC,EAAGwC,EAAGxB,EAC/B,CAqBQyC,CAAQzD,EAAGuD,EAAIC,GACD,QAATH,EAAE,GArBf,SAAiBrD,EAAGiC,EAAGpC,GACrB,OAAOgD,EAAMP,EAAUtC,EAAGiC,EAAGpC,EAC/B,CAoBQ6D,CAAQ1D,EAAGuD,EAAIC,GAEfP,EAAQjD,EAAGuD,EAAIC,GAEd,CACL9B,EAAG7B,EAAE,GACL8B,EAAG9B,EAAE,GACLmB,EAAGnB,EAAE,GACLkB,EAAGA,EAEP,CAsBA,MAAMiC,EAAM,CACVW,EAAG,OACHC,EAAG,QACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,SACHC,EAAG,QACHxD,EAAG,KACHyD,EAAG,KACHC,EAAG,KACHzD,EAAG,KACHC,EAAG,QACHC,EAAG,QACHwD,EAAG,KACHC,EAAG,WACHxD,EAAG,KACHyD,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,QACH5D,EAAG,KACH6D,EAAG,KACHC,EAAG,OACHC,EAAG,KACHC,EAAG,QACHC,EAAG,MAECC,EAAU,CACdC,OAAQ,SACRC,YAAa,SACbC,KAAM,OACNC,UAAW,SACXC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,MAAO,IACPC,aAAc,SACdC,GAAI,KACJC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,SAAU,SACVC,QAAS,SACTC,IAAK,SACLC,YAAa,SACbC,QAAS,SACTC,QAAS,SACTC,KAAM,OACNC,IAAK,KACLC,MAAO,OACPC,QAAS,SACTC,KAAM,SACNC,KAAM,OACNC,KAAM,SACNC,OAAQ,SACRC,QAAS,SACTC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,IAAK,OACLC,OAAQ,SACRC,OAAQ,SACRC,SAAU,OACVC,OAAQ,SACRC,OAAQ,SACRC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,OAAQ,SACRC,QAAS,SACTC,UAAW,SACXC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,OAAQ,SACRC,QAAS,SACTC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,UAAW,SACXC,QAAS,SACTC,WAAY,SACZC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,IAAK,SACLC,KAAM,OACNC,QAAS,SACTC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,IAAK,KACLC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,UAAW,OACXC,IAAK,SACLC,SAAU,SACVC,WAAY,SACZC,QAAS,SACTC,SAAU,SACVC,QAAS,SACTC,WAAY,SACZC,KAAM,KACNC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,UAAW,SACXC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,YAAa,SACbC,GAAI,SACJC,SAAU,SACVC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,SAAU,OACVC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,UAAW,SACXC,GAAI,SACJC,MAAO,UAmBT,IAAIC,EACJ,SAASC,EAAUlL,GACZiL,IACHA,EApBJ,WACE,MAAME,EAAW,CAAC,EACZC,EAAOC,OAAOD,KAAKxJ,GACnB0J,EAAQD,OAAOD,KAAKxL,GAC1B,IAAIN,EAAGiM,EAAGxM,EAAGyM,EAAIC,EACjB,IAAKnM,EAAI,EAAGA,EAAI8L,EAAKnM,OAAQK,IAAK,CAEhC,IADAkM,EAAKC,EAAKL,EAAK9L,GACViM,EAAI,EAAGA,EAAID,EAAMrM,OAAQsM,IAC5BxM,EAAIuM,EAAMC,GACVE,EAAKA,EAAGC,QAAQ3M,EAAGa,EAAIb,IAEzBA,EAAI4M,SAAS/J,EAAQ4J,GAAK,IAC1BL,EAASM,GAAM,CAAC1M,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,EACjD,CACA,OAAOoM,CACT,CAKYS,GACRX,EAAMY,YAAc,CAAC,EAAG,EAAG,EAAG,IAEhC,MAAMlO,EAAIsN,EAAMjL,EAAI8L,eACpB,OAAOnO,GAAK,CACVW,EAAGX,EAAE,GACLY,EAAGZ,EAAE,GACLC,EAAGD,EAAE,GACLA,EAAgB,IAAbA,EAAEsB,OAAetB,EAAE,GAAK,IAE/B,CAEA,MAAMoO,EAAS,uGAiCf,MAAMC,EAAKvP,GAAKA,GAAK,SAAgB,MAAJA,EAAqC,MAAzBI,KAAKoP,IAAIxP,EAAG,EAAM,KAAe,KACxEyP,EAAOzP,GAAKA,GAAK,OAAUA,EAAI,MAAQI,KAAKoP,KAAKxP,EAAI,MAAS,MAAO,KAa3E,SAAS0P,EAAO1P,EAAG6C,EAAG8M,GACpB,GAAI3P,EAAG,CACL,IAAI4P,EAAM9M,EAAQ9C,GAClB4P,EAAI/M,GAAKzC,KAAKC,IAAI,EAAGD,KAAKE,IAAIsP,EAAI/M,GAAK+M,EAAI/M,GAAK8M,EAAa,IAAN9M,EAAU,IAAM,IACvE+M,EAAMxM,EAAQwM,GACd5P,EAAE6B,EAAI+N,EAAI,GACV5P,EAAE8B,EAAI8N,EAAI,GACV5P,EAAEmB,EAAIyO,EAAI,EACZ,CACF,CACA,SAASC,EAAM7P,EAAG8P,GAChB,OAAO9P,EAAI4O,OAAOmB,OAAOD,GAAS,CAAC,EAAG9P,GAAKA,CAC7C,CACA,SAASgQ,EAAWC,GAClB,IAAIjQ,EAAI,CAAC6B,EAAG,EAAGC,EAAG,EAAGX,EAAG,EAAGD,EAAG,KAY9B,OAXI+B,MAAMC,QAAQ+M,GACZA,EAAMzN,QAAU,IAClBxC,EAAI,CAAC6B,EAAGoO,EAAM,GAAInO,EAAGmO,EAAM,GAAI9O,EAAG8O,EAAM,GAAI/O,EAAG,KAC3C+O,EAAMzN,OAAS,IACjBxC,EAAEkB,EAAIV,EAAIyP,EAAM,OAIpBjQ,EAAI6P,EAAMI,EAAO,CAACpO,EAAG,EAAGC,EAAG,EAAGX,EAAG,EAAGD,EAAG,KACrCA,EAAIV,EAAIR,EAAEkB,GAEPlB,CACT,CACA,SAASkQ,EAAc3M,GACrB,MAAsB,MAAlBA,EAAI4M,OAAO,GA3EjB,SAAkB5M,GAChB,MAAMC,EAAI8L,EAAO7L,KAAKF,GACtB,IACI1B,EAAGC,EAAGX,EADND,EAAI,IAER,GAAKsC,EAAL,CAGA,GAAIA,EAAE,KAAO3B,EAAG,CACd,MAAM7B,GAAKwD,EAAE,GACbtC,EAAIsC,EAAE,GAAKjD,EAAIP,GAAKC,EAAQ,IAAJD,EAAS,EAAG,IACtC,CAOA,OANA6B,GAAK2B,EAAE,GACP1B,GAAK0B,EAAE,GACPrC,GAAKqC,EAAE,GACP3B,EAAI,KAAO2B,EAAE,GAAKjD,EAAIsB,GAAK5B,EAAI4B,EAAG,EAAG,MACrCC,EAAI,KAAO0B,EAAE,GAAKjD,EAAIuB,GAAK7B,EAAI6B,EAAG,EAAG,MACrCX,EAAI,KAAOqC,EAAE,GAAKjD,EAAIY,GAAKlB,EAAIkB,EAAG,EAAG,MAC9B,CACLU,EAAGA,EACHC,EAAGA,EACHX,EAAGA,EACHD,EAAGA,EAfL,CAiBF,CAqDWkP,CAAS7M,GAEXD,EAASC,EAClB,CACA,MAAM8M,EACJC,YAAYL,GACV,GAAIA,aAAiBI,EACnB,OAAOJ,EAET,MAAMM,SAAcN,EACpB,IAAIjQ,EACS,WAATuQ,EACFvQ,EAAIgQ,EAAWC,GACG,WAATM,IACTvQ,EAjcN,SAAkBuD,GAChB,IACIiN,EADAC,EAAMlN,EAAIf,OAmBd,MAjBe,MAAXe,EAAI,KACM,IAARkN,GAAqB,IAARA,EACfD,EAAM,CACJ3O,EAAG,IAAsB,GAAhBlB,EAAM4C,EAAI,IACnBzB,EAAG,IAAsB,GAAhBnB,EAAM4C,EAAI,IACnBpC,EAAG,IAAsB,GAAhBR,EAAM4C,EAAI,IACnBrC,EAAW,IAARuP,EAA4B,GAAhB9P,EAAM4C,EAAI,IAAW,KAErB,IAARkN,GAAqB,IAARA,IACtBD,EAAM,CACJ3O,EAAGlB,EAAM4C,EAAI,KAAO,EAAI5C,EAAM4C,EAAI,IAClCzB,EAAGnB,EAAM4C,EAAI,KAAO,EAAI5C,EAAM4C,EAAI,IAClCpC,EAAGR,EAAM4C,EAAI,KAAO,EAAI5C,EAAM4C,EAAI,IAClCrC,EAAW,IAARuP,EAAa9P,EAAM4C,EAAI,KAAO,EAAI5C,EAAM4C,EAAI,IAAO,OAIrDiN,CACT,CA4aUE,CAAST,IAAUxB,EAAUwB,IAAUC,EAAcD,IAE3DU,KAAKC,KAAO5Q,EACZ2Q,KAAKE,SAAW7Q,CAClB,CACI8Q,YACF,OAAOH,KAAKE,MACd,CACIjO,UACF,IAAI5C,EAAI6P,EAAMc,KAAKC,MAInB,OAHI5Q,IACFA,EAAEkB,EAAIT,EAAIT,EAAEkB,IAEPlB,CACT,CACI4C,QAAImO,GACNJ,KAAKC,KAAOZ,EAAWe,EACzB,CACAC,YACE,OAAOL,KAAKE,QArFG7Q,EAqFgB2Q,KAAKC,QAnFpC5Q,EAAEkB,EAAI,IACD,QAAOlB,EAAE6B,MAAM7B,EAAE8B,MAAM9B,EAAEmB,MAAMV,EAAIT,EAAEkB,MACrC,OAAMlB,EAAE6B,MAAM7B,EAAE8B,MAAM9B,EAAEmB,WAiFec,EArFhD,IAAmBjC,CAsFjB,CACA4B,YACE,OAAO+O,KAAKE,OAASjP,EAAU+O,KAAKC,WAAQ3O,CAC9C,CACAgP,YACE,OAAON,KAAKE,OApVhB,SAAmB7Q,GACjB,IAAKA,EACH,OAEF,MAAMkB,EAAI4B,EAAQ9C,GACZG,EAAIe,EAAE,GACNkB,EAAI1B,EAAIQ,EAAE,IACVhB,EAAIQ,EAAIQ,EAAE,IAChB,OAAOlB,EAAEkB,EAAI,IACR,QAAOf,MAAMiC,OAAOlC,OAAOO,EAAIT,EAAEkB,MACjC,OAAMf,MAAMiC,OAAOlC,KAC1B,CAyUyB+Q,CAAUN,KAAKC,WAAQ3O,CAC9C,CACAiP,IAAIC,EAAOC,GACT,GAAID,EAAO,CACT,MAAME,EAAKV,KAAK/N,IACV0O,EAAKH,EAAMvO,IACjB,IAAI2O,EACJ,MAAMC,EAAIJ,IAAWG,EAAK,GAAMH,EAC1BzO,EAAI,EAAI6O,EAAI,EACZtQ,EAAImQ,EAAGnQ,EAAIoQ,EAAGpQ,EACduQ,IAAO9O,EAAIzB,KAAO,EAAIyB,GAAKA,EAAIzB,IAAM,EAAIyB,EAAIzB,IAAM,GAAK,EAC9DqQ,EAAK,EAAIE,EACTJ,EAAGxP,EAAI,IAAO4P,EAAKJ,EAAGxP,EAAI0P,EAAKD,EAAGzP,EAAI,GACtCwP,EAAGvP,EAAI,IAAO2P,EAAKJ,EAAGvP,EAAIyP,EAAKD,EAAGxP,EAAI,GACtCuP,EAAGlQ,EAAI,IAAOsQ,EAAKJ,EAAGlQ,EAAIoQ,EAAKD,EAAGnQ,EAAI,GACtCkQ,EAAGnQ,EAAIsQ,EAAIH,EAAGnQ,GAAK,EAAIsQ,GAAKF,EAAGpQ,EAC/ByP,KAAK/N,IAAMyO,CACb,CACA,OAAOV,IACT,CACAe,YAAYP,EAAOQ,GAIjB,OAHIR,IACFR,KAAKC,KAvGX,SAAqBgB,EAAMC,EAAMF,GAC/B,MAAM9P,EAAI4N,EAAKhP,EAAImR,EAAK/P,IAClBC,EAAI2N,EAAKhP,EAAImR,EAAK9P,IAClBX,EAAIsO,EAAKhP,EAAImR,EAAKzQ,IACxB,MAAO,CACLU,EAAGrB,EAAI+O,EAAG1N,EAAI8P,GAAKlC,EAAKhP,EAAIoR,EAAKhQ,IAAMA,KACvCC,EAAGtB,EAAI+O,EAAGzN,EAAI6P,GAAKlC,EAAKhP,EAAIoR,EAAK/P,IAAMA,KACvCX,EAAGX,EAAI+O,EAAGpO,EAAIwQ,GAAKlC,EAAKhP,EAAIoR,EAAK1Q,IAAMA,KACvCD,EAAG0Q,EAAK1Q,EAAIyQ,GAAKE,EAAK3Q,EAAI0Q,EAAK1Q,GAEnC,CA6FkBwQ,CAAYf,KAAKC,KAAMO,EAAMP,KAAMe,IAE1ChB,IACT,CACAd,QACE,OAAO,IAAIQ,EAAMM,KAAK/N,IACxB,CACAZ,MAAMd,GAEJ,OADAyP,KAAKC,KAAK1P,EAAIV,EAAIU,GACXyP,IACT,CACAmB,QAAQnC,GAGN,OAFYgB,KAAKC,KACb1P,GAAK,EAAIyO,EACNgB,IACT,CACAoB,YACE,MAAMnP,EAAM+N,KAAKC,KACXoB,EAAMjS,EAAc,GAAR6C,EAAIf,EAAkB,IAARe,EAAId,EAAmB,IAARc,EAAIzB,GAEnD,OADAyB,EAAIf,EAAIe,EAAId,EAAIc,EAAIzB,EAAI6Q,EACjBrB,IACT,CACAsB,QAAQtC,GAGN,OAFYgB,KAAKC,KACb1P,GAAK,EAAIyO,EACNgB,IACT,CACAuB,SACE,MAAMlS,EAAI2Q,KAAKC,KAIf,OAHA5Q,EAAE6B,EAAI,IAAM7B,EAAE6B,EACd7B,EAAE8B,EAAI,IAAM9B,EAAE8B,EACd9B,EAAEmB,EAAI,IAAMnB,EAAEmB,EACPwP,IACT,CACAwB,QAAQxC,GAEN,OADAD,EAAOiB,KAAKC,KAAM,EAAGjB,GACdgB,IACT,CACAyB,OAAOzC,GAEL,OADAD,EAAOiB,KAAKC,KAAM,GAAIjB,GACfgB,IACT,CACA0B,SAAS1C,GAEP,OADAD,EAAOiB,KAAKC,KAAM,EAAGjB,GACdgB,IACT,CACA2B,WAAW3C,GAET,OADAD,EAAOiB,KAAKC,KAAM,GAAIjB,GACfgB,IACT,CACA4B,OAAOC,GAEL,OAtaJ,SAAgBxS,EAAGwS,GACjB,IAAIrS,EAAI2C,EAAQ9C,GAChBG,EAAE,GAAKkD,EAAIlD,EAAE,GAAKqS,GAClBrS,EAAIiD,EAAQjD,GACZH,EAAE6B,EAAI1B,EAAE,GACRH,EAAE8B,EAAI3B,EAAE,GACRH,EAAEmB,EAAIhB,EAAE,EACV,CA8ZIoS,CAAO5B,KAAKC,KAAM4B,GACX7B,IACT,EC3jBK,SAAS8B,IACJ,CAML,MAAMC,EAAO,MAClB,IAAIC,EAAK,EACT,MAAO,IAAMA,GACd,EAHmB,GAUb,SAASC,EAAcC,GAC5B,OAAiB,OAAVA,GAAmC,qBAAVA,CAClC,CAOO,SAAS3P,EAAqB2P,GACnC,GAAI5P,MAAMC,SAAWD,MAAMC,QAAQ2P,GACjC,OAAO,EAET,MAAMtC,EAAO3B,OAAOkE,UAAUC,SAASC,KAAKH,GAC5C,MAAyB,YAArBtC,EAAK0C,MAAM,EAAG,IAAuC,WAAnB1C,EAAK0C,OAAO,EAIpD,CAOO,SAASC,EAASL,GACvB,OAAiB,OAAVA,GAA4D,oBAA1CjE,OAAOkE,UAAUC,SAASC,KAAKH,EAC1D,CAMA,SAASM,EAAeN,GACtB,OAAyB,kBAAVA,GAAsBA,aAAiBO,SAAWC,UAAUR,EAC7E,CAUO,SAASS,EAAgBT,EAAgBU,GAC9C,OAAOJ,EAAeN,GAASA,EAAQU,CACzC,CAOO,SAASC,EAAkBX,EAAsBU,GACtD,MAAwB,qBAAVV,EAAwBU,EAAeV,CACvD,OAOaY,EAAcA,CAACZ,EAAwBa,IACjC,kBAAVb,GAAsBA,EAAMc,SAAS,KAC1CC,WAAWf,GAAS,IAAMa,GACvBb,EASA,SAASgB,EACdC,EACAC,EACAC,GAEA,GAAIF,GAAyB,oBAAZA,EAAGd,KAClB,OAAOc,EAAGG,MAAMD,EAASD,EAE7B,CAuBO,SAASG,EACdC,EACAL,EACAE,EACAI,GAEA,IAAIvR,EAAW4N,EAAa9B,EAC5B,GAAIzL,EAAQiR,GAEV,GADA1D,EAAM0D,EAAS3R,OACX4R,EACF,IAAKvR,EAAI4N,EAAM,EAAG5N,GAAK,EAAGA,IACxBiR,EAAGd,KAAKgB,EAASG,EAAStR,GAAIA,QAGhC,IAAKA,EAAI,EAAGA,EAAI4N,EAAK5N,IACnBiR,EAAGd,KAAKgB,EAASG,EAAStR,GAAIA,QAG7B,GAAIqQ,EAASiB,GAGlB,IAFAxF,EAAOC,OAAOD,KAAKwF,GACnB1D,EAAM9B,EAAKnM,OACNK,EAAI,EAAGA,EAAI4N,EAAK5N,IACnBiR,EAAGd,KAAKgB,EAASG,EAASxF,EAAK9L,IAAK8L,EAAK9L,GAG/C,CAQO,SAASwR,EAAeC,EAAuBC,GACpD,IAAI1R,EAAW2R,EAAcC,EAAqBC,EAElD,IAAKJ,IAAOC,GAAMD,EAAG9R,SAAW+R,EAAG/R,OACjC,OAAO,EAGT,IAAKK,EAAI,EAAG2R,EAAOF,EAAG9R,OAAQK,EAAI2R,IAAQ3R,EAIxC,GAHA4R,EAAKH,EAAGzR,GACR6R,EAAKH,EAAG1R,GAEJ4R,EAAGE,eAAiBD,EAAGC,cAAgBF,EAAGG,QAAUF,EAAGE,MACzD,OAAO,EAIX,OAAO,CACT,CAMO,SAAS/E,EAASgF,GACvB,GAAI3R,EAAQ2R,GACV,OAAOA,EAAO1R,IAAI0M,GAGpB,GAAIqD,EAAS2B,GAAS,CACpB,MAAMC,EAASlG,OAAOmG,OAAO,MACvBpG,EAAOC,OAAOD,KAAKkG,GACnBG,EAAOrG,EAAKnM,OAClB,IAAIF,EAAI,EAER,KAAOA,EAAI0S,IAAQ1S,EACjBwS,EAAOnG,EAAKrM,IAAMuN,EAAMgF,EAAOlG,EAAKrM,KAGtC,OAAOwS,EAGT,OAAOD,CACT,CAEA,SAASI,EAAWC,GAClB,OAAmE,IAA5D,CAAC,YAAa,YAAa,eAAeC,QAAQD,EAC3D,CAOO,SAASE,EAAQF,EAAaJ,EAAmBD,EAAmBQ,GACzE,IAAKJ,EAAWC,GACd,OAGF,MAAMI,EAAOR,EAAOI,GACdK,EAAOV,EAAOK,GAEhBhC,EAASoC,IAASpC,EAASqC,GAE7BC,EAAMF,EAAMC,EAAMF,GAElBP,EAAOI,GAAOrF,EAAM0F,EAExB,CA0BO,SAASC,EAASV,EAAWD,EAAqBQ,GACvD,MAAMI,EAAUvS,EAAQ2R,GAAUA,EAAS,CAACA,GACtCL,EAAOiB,EAAQjT,OAErB,IAAK0Q,EAAS4B,GACZ,OAAOA,EAIT,MAAMY,GADNL,EAAUA,GAAW,CAAC,GACCK,QAAUN,EACjC,IAAIO,EAEJ,IAAK,IAAI9S,EAAI,EAAGA,EAAI2R,IAAQ3R,EAAG,CAE7B,GADA8S,EAAUF,EAAQ5S,IACbqQ,EAASyC,GACZ,SAGF,MAAMhH,EAAOC,OAAOD,KAAKgH,GACzB,IAAK,IAAIrT,EAAI,EAAG0S,EAAOrG,EAAKnM,OAAQF,EAAI0S,IAAQ1S,EAC9CoT,EAAO/G,EAAKrM,GAAIwS,EAAQa,EAASN,EAErC,CAEA,OAAOP,CACT,CAgBO,SAASc,EAAWd,EAAWD,GAEpC,OAAOW,EAASV,EAAQD,EAAQ,CAACa,OAAQG,GAC3C,CAMO,SAASA,EAAUX,EAAaJ,EAAmBD,GACxD,IAAKI,EAAWC,GACd,OAGF,MAAMI,EAAOR,EAAOI,GACdK,EAAOV,EAAOK,GAEhBhC,EAASoC,IAASpC,EAASqC,GAC7BK,EAAQN,EAAMC,GACJ3G,OAAOkE,UAAUgD,eAAe9C,KAAK8B,EAAQI,KACvDJ,EAAOI,GAAOrF,EAAM0F,GAExB,CAaA,MAAMQ,GAAe,CAEnB,GAAI/V,GAAKA,EAET8D,EAAGkS,GAAKA,EAAElS,EACVmS,EAAGD,GAAKA,EAAEC,GAqCL,SAASC,GAAiBnF,EAAgBmE,GAC/C,MAAMiB,EAAWJ,GAAab,KAASa,GAAab,GAhBtD,SAAyBA,GACvB,MAAMvG,EAjBD,SAAmBuG,GACxB,MAAMkB,EAAQlB,EAAImB,MAAM,KAClB1H,EAAiB,GACvB,IAAIiB,EAAM,GACV,IAAK,MAAM0G,KAAQF,EACjBxG,GAAO0G,EACH1G,EAAI+D,SAAS,MACf/D,EAAMA,EAAIqD,MAAM,GAAI,GAAK,KAEzBtE,EAAK4H,KAAK3G,GACVA,EAAM,IAGV,OAAOjB,CACT,CAGe6H,CAAUtB,GACvB,OAAOnE,IACL,IAAK,MAAMzO,KAAKqM,EAAM,CACpB,GAAU,KAANrM,EAGF,MAEFyO,EAAMA,GAAOA,EAAIzO,EACnB,CACA,OAAOyO,CAAA,CAEX,CAG6D0F,CAAgBvB,IAC3E,OAAOiB,EAASpF,EAClB,CAKO,SAAS2F,GAAYnT,GAC1B,OAAOA,EAAI4M,OAAO,GAAGwG,cAAgBpT,EAAI0P,MAAM,EACjD,OAGa2D,GAAW/D,GAAoC,qBAAVA,EAErCgE,GAAchE,GAAsE,oBAAVA,EAG1EiE,GAAYA,CAAI5V,EAAWC,KACtC,GAAID,EAAE6V,OAAS5V,EAAE4V,KACf,OAAO,EAGT,IAAK,MAAMC,KAAQ9V,EACjB,IAAKC,EAAE8V,IAAID,GACT,OAAO,EAIX,OAAO,CAAI,EC9YN,MAAME,GAAK9W,KAAK8W,GACVC,GAAM,EAAID,GACVE,GAAQD,GAAMD,GACdG,GAAWjE,OAAOkE,kBAClBC,GAAcL,GAAK,IACnBM,GAAUN,GAAK,EACfO,GAAaP,GAAK,EAClBQ,GAAqB,EAALR,GAAS,EAEzBS,GAAQvX,KAAKuX,MACbC,GAAOxX,KAAKwX,KAElB,SAASC,GAAa/T,EAAWmS,EAAW6B,GACjD,OAAO1X,KAAK2X,IAAIjU,EAAImS,GAAK6B,CAC3B,CAKO,SAASE,GAAQC,GACtB,MAAMC,EAAe9X,KAAKL,MAAMkY,GAChCA,EAAQJ,GAAaI,EAAOC,EAAcD,EAAQ,KAAQC,EAAeD,EACzE,MAAME,EAAY/X,KAAKoP,IAAI,GAAIpP,KAAKgY,MAAMT,GAAMM,KAC1CI,EAAWJ,EAAQE,EAEzB,OADqBE,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAI,IAC3DF,CACxB,CAyBO,SAASG,GAASjW,GACvB,OAAQkW,MAAM3E,WAAWvR,KAAiBgR,SAAShR,EACrD,CAUO,SAASmW,GACdC,EACA3D,EACA4D,GAEA,IAAI7V,EAAW2R,EAAc3B,EAE7B,IAAKhQ,EAAI,EAAG2R,EAAOiE,EAAMjW,OAAQK,EAAI2R,EAAM3R,IACzCgQ,EAAQ4F,EAAM5V,GAAG6V,GACZH,MAAM1F,KACTiC,EAAOxU,IAAMF,KAAKE,IAAIwU,EAAOxU,IAAKuS,GAClCiC,EAAOzU,IAAMD,KAAKC,IAAIyU,EAAOzU,IAAKwS,GAGxC,CAEO,SAAS8F,GAAUC,GACxB,OAAOA,GAAW1B,GAAK,IACzB,CAEO,SAAS2B,GAAUC,GACxB,OAAOA,GAAW,IAAM5B,GAC1B,CASO,SAAS6B,GAAejV,GAC7B,IAAKqP,EAAerP,GAClB,OAEF,IAAIxC,EAAI,EACJkQ,EAAI,EACR,KAAOpR,KAAKL,MAAM+D,EAAIxC,GAAKA,IAAMwC,GAC/BxC,GAAK,GACLkQ,IAEF,OAAOA,CACT,CAGO,SAASwH,GACdC,EACAC,GAEA,MAAMC,EAAsBD,EAAWpV,EAAImV,EAAYnV,EACjDsV,EAAsBF,EAAWjD,EAAIgD,EAAYhD,EACjDoD,EAA2BjZ,KAAKkZ,KAAKH,EAAsBA,EAAsBC,EAAsBA,GAE7G,IAAIG,EAAQnZ,KAAKoZ,MAAMJ,EAAqBD,GAM5C,OAJII,GAAU,GAAMrC,KAClBqC,GAASpC,IAGJ,CACLoC,QACAE,SAAUJ,EAEd,CAEO,SAASK,GAAsBC,EAAYC,GAChD,OAAOxZ,KAAKkZ,KAAKlZ,KAAKoP,IAAIoK,EAAI9V,EAAI6V,EAAI7V,EAAG,GAAK1D,KAAKoP,IAAIoK,EAAI3D,EAAI0D,EAAI1D,EAAG,GACxE,CAMO,SAAS4D,GAAW3Y,EAAWC,GACpC,OAAQD,EAAIC,EAAIiW,IAASD,GAAMD,EACjC,CAMO,SAAS4C,GAAgB5Y,GAC9B,OAAQA,EAAIiW,GAAMA,IAAOA,EAC3B,CAKO,SAAS4C,GAAcR,EAAeS,EAAeC,EAAaC,GACvE,MAAMhZ,EAAI4Y,GAAgBP,GACpBnX,EAAI0X,GAAgBE,GACpB1Y,EAAIwY,GAAgBG,GACpBE,EAAeL,GAAgB1X,EAAIlB,GACnCkZ,EAAaN,GAAgBxY,EAAIJ,GACjCmZ,EAAeP,GAAgB5Y,EAAIkB,GACnCkY,EAAaR,GAAgB5Y,EAAII,GACvC,OAAOJ,IAAMkB,GAAKlB,IAAMI,GAAM4Y,GAAyB9X,IAAMd,GACvD6Y,EAAeC,GAAcC,EAAeC,CACpD,CASO,SAASC,GAAY1H,EAAevS,EAAaD,GACtD,OAAOD,KAAKC,IAAIC,EAAKF,KAAKE,IAAID,EAAKwS,GACrC,CAiBO,SAAS2H,GAAW3H,EAAemH,EAAeC,GAA6B,IAAhBnC,EAAUvV,UAAAC,OAAA,QAAAP,IAAAM,UAAA,GAAAA,UAAA,QAC9E,OAAOsQ,GAASzS,KAAKE,IAAI0Z,EAAOC,GAAOnC,GAAWjF,GAASzS,KAAKC,IAAI2Z,EAAOC,GAAOnC,CACpF,CCpLO,SAAS2C,GACdC,EACA7H,EACA8H,GAEAA,EAAMA,GAAA,CAAS/F,GAAU8F,EAAM9F,GAAS/B,GACxC,IAEI+H,EAFAC,EAAKH,EAAMlY,OAAS,EACpBsY,EAAK,EAGT,KAAOD,EAAKC,EAAK,GACfF,EAAOE,EAAKD,GAAO,EACfF,EAAIC,GACNE,EAAKF,EAELC,EAAKD,EAIT,MAAO,CAACE,KAAID,KACd,CAUO,MAAME,GAAeA,CAC1BL,EACAxF,EACArC,EACAmI,IAEAP,GAAQC,EAAO7H,EAAOmI,EAClBpG,IACA,MAAMqG,EAAKP,EAAM9F,GAAOM,GACxB,OAAO+F,EAAKpI,GAASoI,IAAOpI,GAAS6H,EAAM9F,EAAQ,GAAGM,KAASrC,CAAA,EAE/D+B,GAAS8F,EAAM9F,GAAOM,GAAOrC,GAStBqI,GAAgBA,CAC3BR,EACAxF,EACArC,IAEA4H,GAAQC,EAAO7H,GAAO+B,GAAS8F,EAAM9F,GAAOM,IAAQrC,IAyBtD,MAAMsI,GAAc,CAAC,OAAQ,MAAO,QAAS,SAAU,WA0DhD,SAASC,GAAoB3C,EAAO4C,GACzC,MAAMC,EAAO7C,EAAM8C,SACnB,IAAKD,EACH,OAGF,MAAME,EAAYF,EAAKE,UACjB5G,EAAQ4G,EAAUrG,QAAQkG,IACjB,IAAXzG,GACF4G,EAAUC,OAAO7G,EAAO,GAGtB4G,EAAUhZ,OAAS,IAIvB2Y,GAAYO,SAASxG,WACZuD,EAAMvD,EAAI,WAGZuD,EAAM8C,SACf,CAKO,SAASI,GAAgBC,GAC9B,MAAMC,EAAM,IAAIC,IAAOF,GAEvB,OAAIC,EAAI9E,OAAS6E,EAAMpZ,OACdoZ,EAGF3Y,MAAMwM,KAAKoM,EACpB,CCnLa,MAAAE,GACW,qBAAXC,OACF,SAASnI,GACd,OAAOA,GACT,EAEKmI,OAAOC,sBAOT,SAASC,GACdpI,EACAE,GAEA,IAAImI,EAAY,GACZC,GAAU,EAEd,OAAO,WAAyB,QAAAC,EAAA9Z,UAAAC,OAAbuR,EAAW,IAAA9Q,MAAAoZ,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAXvI,EAAWuI,GAAA/Z,UAAA+Z,GAE5BH,EAAYpI,EACPqI,IACHA,GAAU,EACVL,GAAiB/I,KAAKgJ,QAAQ,KAC5BI,GAAU,EACVtI,EAAGG,MAAMD,EAASmI,EAAA,IAGxB,CACF,CAsBO,MAAMI,GAAsBC,GAAgD,UAAVA,EAAoB,OAAmB,QAAVA,EAAkB,QAAU,SAMrHC,GAAiBA,CAACD,EAAmCxC,EAAeC,IAA0B,UAAVuC,EAAoBxC,EAAkB,QAAVwC,EAAkBvC,GAAOD,EAAQC,GAAO,EAe9J,SAASyC,GAAiCC,EAAqCC,EAAwBC,GAC5G,MAAMC,EAAaF,EAAOpa,OAE1B,IAAIwX,EAAQ,EACR+C,EAAQD,EAEZ,GAAIH,EAAKK,QAAS,CAChB,MAAM,OAACC,EAAA,QAAQC,GAAWP,EACpBQ,EAAOF,EAAOE,MACd,IAAC7c,EAAG,IAAED,EAAG,WAAE+c,EAAU,WAAEC,GAAcJ,EAAOK,gBAE9CF,IACFpD,EAAQO,GAAYna,KAAKE,IAEvBya,GAAamC,EAASC,EAAM7c,GAAKwa,GAEjC+B,EAAqBC,EAAa/B,GAAa6B,EAAQO,EAAMF,EAAOM,iBAAiBjd,IAAMwa,IAC7F,EAAGgC,EAAa,IAGhBC,EADEM,EACM9C,GAAYna,KAAKC,IAEvB0a,GAAamC,EAASD,EAAOE,KAAM9c,GAAK,GAAMwa,GAAK,EAEnDgC,EAAqB,EAAI9B,GAAa6B,EAAQO,EAAMF,EAAOM,iBAAiBld,IAAM,GAAMwa,GAAK,GAC/Fb,EAAO8C,GAAc9C,EAEb8C,EAAa9C,EAIzB,MAAO,CAACA,QAAO+C,QACjB,CAQO,SAASS,GAAoBb,GAClC,MAAM,OAACc,EAAM,OAAEC,EAAA,aAAQC,GAAgBhB,EACjCiB,EAAY,CAChBC,KAAMJ,EAAOnd,IACbwd,KAAML,EAAOpd,IACb0d,KAAML,EAAOpd,IACb0d,KAAMN,EAAOrd,KAEf,IAAKsd,EAEH,OADAhB,EAAKgB,aAAeC,GACb,EAET,MAAMK,EAAUN,EAAaE,OAASJ,EAAOnd,KAC1Cqd,EAAaG,OAASL,EAAOpd,KAC7Bsd,EAAaI,OAASL,EAAOpd,KAC7Bqd,EAAaK,OAASN,EAAOrd,IAGhC,OADAuO,OAAOmB,OAAO4N,EAAcC,GACrBK,CACT,CC/IA,MAAMC,GAAUvM,GAAoB,IAANA,GAAiB,IAANA,EACnCwM,GAAYA,CAACxM,EAAWvP,EAAWoP,KAAgBpR,KAAKoP,IAAI,EAAG,IAAMmC,GAAK,IAAMvR,KAAKge,KAAKzM,EAAIvP,GAAK+U,GAAM3F,GACzG6M,GAAaA,CAAC1M,EAAWvP,EAAWoP,IAAcpR,KAAKoP,IAAI,GAAI,GAAKmC,GAAKvR,KAAKge,KAAKzM,EAAIvP,GAAK+U,GAAM3F,GAAK,EAOvG8M,GAAU,CACdC,OAAS5M,GAAcA,EAEvB6M,WAAa7M,GAAcA,EAAIA,EAE/B8M,YAAc9M,IAAeA,GAAKA,EAAI,GAEtC+M,cAAgB/M,IAAgBA,GAAK,IAAO,EACxC,GAAMA,EAAIA,GACT,MAAUA,GAAMA,EAAI,GAAK,GAE9BgN,YAAchN,GAAcA,EAAIA,EAAIA,EAEpCiN,aAAejN,IAAeA,GAAK,GAAKA,EAAIA,EAAI,EAEhDkN,eAAiBlN,IAAgBA,GAAK,IAAO,EACzC,GAAMA,EAAIA,EAAIA,EACd,KAAQA,GAAK,GAAKA,EAAIA,EAAI,GAE9BmN,YAAcnN,GAAcA,EAAIA,EAAIA,EAAIA,EAExCoN,aAAepN,MAAiBA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAEtDqN,eAAiBrN,IAAgBA,GAAK,IAAO,EACzC,GAAMA,EAAIA,EAAIA,EAAIA,GACjB,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAEnCsN,YAActN,GAAcA,EAAIA,EAAIA,EAAIA,EAAIA,EAE5CuN,aAAevN,IAAeA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,EAExDwN,eAAiBxN,IAAgBA,GAAK,IAAO,EACzC,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EACtB,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GAEtCyN,WAAazN,GAAuC,EAAxBvR,KAAKif,IAAI1N,EAAI6F,IAEzC8H,YAAc3N,GAAcvR,KAAKge,IAAIzM,EAAI6F,IAEzC+H,cAAgB5N,IAAe,IAAOvR,KAAKif,IAAInI,GAAKvF,GAAK,GAEzD6N,WAAa7N,GAAqB,IAAPA,EAAY,EAAIvR,KAAKoP,IAAI,EAAG,IAAMmC,EAAI,IAEjE8N,YAAc9N,GAAqB,IAAPA,EAAY,EAA4B,EAAvBvR,KAAKoP,IAAI,GAAI,GAAKmC,GAE/D+N,cAAgB/N,GAAcuM,GAAOvM,GAAKA,EAAIA,EAAI,GAC9C,GAAMvR,KAAKoP,IAAI,EAAG,IAAU,EAAJmC,EAAQ,IAChC,IAAyC,EAAjCvR,KAAKoP,IAAI,GAAI,IAAU,EAAJmC,EAAQ,KAEvCgO,WAAahO,GAAcA,GAAM,EAAKA,IAAMvR,KAAKkZ,KAAK,EAAI3H,EAAIA,GAAK,GAEnEiO,YAAcjO,GAAcvR,KAAKkZ,KAAK,GAAK3H,GAAK,GAAKA,GAErDkO,cAAgBlO,IAAgBA,GAAK,IAAO,GACvC,IAAOvR,KAAKkZ,KAAK,EAAI3H,EAAIA,GAAK,GAC/B,IAAOvR,KAAKkZ,KAAK,GAAK3H,GAAK,GAAKA,GAAK,GAEzCmO,cAAgBnO,GAAcuM,GAAOvM,GAAKA,EAAIwM,GAAUxM,EAAG,KAAO,IAElEoO,eAAiBpO,GAAcuM,GAAOvM,GAAKA,EAAI0M,GAAW1M,EAAG,KAAO,IAEpEqO,iBAAiBrO,GACf,MAAMvP,EAAI,MAEV,OAAO8b,GAAOvM,GAAKA,EACjBA,EAAI,GACA,GAAMwM,GAAc,EAAJxM,EAAOvP,EAHnB,KAIJ,GAAM,GAAMic,GAAe,EAAJ1M,EAAQ,EAAGvP,EAJ9B,IAKZ,EAEA6d,WAAWtO,GACT,MAAMvP,EAAI,QACV,OAAOuP,EAAIA,IAAMvP,EAAI,GAAKuP,EAAIvP,EAChC,EAEA8d,YAAYvO,GACV,MAAMvP,EAAI,QACV,OAAQuP,GAAK,GAAKA,IAAMvP,EAAI,GAAKuP,EAAIvP,GAAK,CAC5C,EAEA+d,cAAcxO,GACZ,IAAIvP,EAAI,QACR,OAAKuP,GAAK,IAAO,EACDA,EAAIA,IAAuB,GAAhBvP,GAAM,QAAeuP,EAAIvP,GAA3C,GAEF,KAAQuP,GAAK,GAAKA,IAAuB,GAAhBvP,GAAM,QAAeuP,EAAIvP,GAAK,EAChE,EAEAge,aAAezO,GAAc,EAAI2M,GAAQ+B,cAAc,EAAI1O,GAE3D0O,cAAc1O,GACZ,MAAMnO,EAAI,OACJnC,EAAI,KACV,OAAIsQ,EAAK,EAAItQ,EACJmC,EAAImO,EAAIA,EAEbA,EAAK,EAAItQ,EACJmC,GAAKmO,GAAM,IAAMtQ,GAAMsQ,EAAI,IAEhCA,EAAK,IAAMtQ,EACNmC,GAAKmO,GAAM,KAAOtQ,GAAMsQ,EAAI,MAE9BnO,GAAKmO,GAAM,MAAQtQ,GAAMsQ,EAAI,OACtC,EAEA2O,gBAAkB3O,GAAeA,EAAI,GACH,GAA9B2M,GAAQ8B,aAAiB,EAAJzO,GACc,GAAnC2M,GAAQ+B,cAAkB,EAAJ1O,EAAQ,GAAW,ICpHxC,SAAS4O,GAAoB1N,GAClC,GAAIA,GAA0B,kBAAVA,EAAoB,CACtC,MAAMtC,EAAOsC,EAAME,WACnB,MAAgB,2BAATxC,GAA8C,4BAATA,EAG9C,OAAO,CACT,CAWO,SAASY,GAAM0B,GACpB,OAAO0N,GAAoB1N,GAASA,EAAQ,IAAIxC,EAAMwC,EACxD,CAKO,SAAS2N,GAAc3N,GAC5B,OAAO0N,GAAoB1N,GACvBA,EACA,IAAIxC,EAAMwC,GAAOR,SAAS,IAAKD,OAAO,IAAKxQ,WACjD,CC/BA,MAAM6e,GAAU,CAAC,IAAK,IAAK,cAAe,SAAU,WAC9CC,GAAS,CAAC,QAAS,cAAe,mBCAxC,MAAMC,GAAY,IAAIC,IAaf,SAASC,GAAaC,EAAaC,EAAgB1L,GACxD,OAZF,SAAyB0L,EAAgB1L,GACvCA,EAAUA,GAAW,CAAC,EACtB,MAAM2L,EAAWD,EAASE,KAAKC,UAAU7L,GACzC,IAAI8L,EAAYR,GAAUS,IAAIJ,GAK9B,OAJKG,IACHA,EAAY,IAAIE,KAAKC,aAAaP,EAAQ1L,GAC1CsL,GAAU9E,IAAImF,EAAUG,IAEnBA,CACT,CAGSI,CAAgBR,EAAQ1L,GAASmM,OAAOV,EACjD,CCRA,MAAMW,GAAa,CAOjBC,OAAO7O,GACE3P,EAAQ2P,GAAkCA,EAAS,GAAKA,EAWjE8O,QAAQC,EAAWhN,EAAOiN,GACxB,GAAkB,IAAdD,EACF,MAAO,IAGT,MAAMb,EAASpQ,KAAKmR,MAAMzM,QAAQ0L,OAClC,IAAIgB,EACAC,EAAQJ,EAEZ,GAAIC,EAAMrf,OAAS,EAAG,CAEpB,MAAMyf,EAAU7hB,KAAKC,IAAID,KAAK2X,IAAI8J,EAAM,GAAGhP,OAAQzS,KAAK2X,IAAI8J,EAAMA,EAAMrf,OAAS,GAAGqQ,SAChFoP,EAAU,MAAQA,EAAU,QAC9BF,EAAW,cAGbC,EAyCN,SAAwBJ,EAAWC,GAGjC,IAAIG,EAAQH,EAAMrf,OAAS,EAAIqf,EAAM,GAAGhP,MAAQgP,EAAM,GAAGhP,MAAQgP,EAAM,GAAGhP,MAAQgP,EAAM,GAAGhP,MAGvFzS,KAAK2X,IAAIiK,IAAU,GAAKJ,IAAcxhB,KAAKgY,MAAMwJ,KAEnDI,EAAQJ,EAAYxhB,KAAKgY,MAAMwJ,IAEjC,OAAOI,CACT,CApDcE,CAAeN,EAAWC,GAGpC,MAAMM,EAAWxK,GAAMvX,KAAK2X,IAAIiK,IAO1BI,EAAa7J,MAAM4J,GAAY,EAAI/hB,KAAKC,IAAID,KAAKE,KAAK,EAAIF,KAAKgY,MAAM+J,GAAW,IAAK,GAErF9M,EAAU,CAAC0M,WAAUM,sBAAuBD,EAAYE,sBAAuBF,GAGrF,OAFAxT,OAAOmB,OAAOsF,EAAS1E,KAAK0E,QAAQwM,MAAML,QAEnCX,GAAae,EAAWb,EAAQ1L,EACzC,EAWAkN,YAAYX,EAAWhN,EAAOiN,GAC5B,GAAkB,IAAdD,EACF,MAAO,IAET,MAAMY,EAASX,EAAMjN,GAAO6N,aAAgBb,EAAaxhB,KAAKoP,IAAI,GAAIpP,KAAKgY,MAAMT,GAAMiK,KACvF,MAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,IAAIc,SAASF,IAAW5N,EAAQ,GAAMiN,EAAMrf,OACxDif,GAAWE,QAAQ3O,KAAKrC,KAAMiR,EAAWhN,EAAOiN,GAElD,EACT,GAsBF,IAAAc,GAAe,CAAClB,qBC/FHmB,GAAYhU,OAAOmG,OAAO,MAC1B8N,GAAcjU,OAAOmG,OAAO,MAOzC,SAAS+N,GAASC,EAAM7N,GACtB,IAAKA,EACH,OAAO6N,EAET,MAAMpU,EAAOuG,EAAImB,MAAM,KACvB,IAAK,IAAIxT,EAAI,EAAGR,EAAIsM,EAAKnM,OAAQK,EAAIR,IAAKQ,EAAG,CAC3C,MAAMP,EAAIqM,EAAK9L,GACfkgB,EAAOA,EAAKzgB,KAAOygB,EAAKzgB,GAAKsM,OAAOmG,OAAO,MAC7C,CACA,OAAOgO,CACT,CAEA,SAASlH,GAAImH,EAAMC,EAAOvB,GACxB,MAAqB,kBAAVuB,EACFzN,EAAMsN,GAASE,EAAMC,GAAQvB,GAE/BlM,EAAMsN,GAASE,EAAM,IAAKC,EACnC,CAMO,MAAMC,GACX5S,YAAY6S,EAAcC,GACxBzS,KAAK0S,eAAYphB,EACjB0O,KAAK2S,gBAAkB,kBACvB3S,KAAK4S,YAAc,kBACnB5S,KAAKQ,MAAQ,OACbR,KAAK6S,SAAW,CAAC,EACjB7S,KAAK8S,iBAAoBC,GAAYA,EAAQ5B,MAAM6B,SAASC,sBAC5DjT,KAAKkT,SAAW,CAAC,EACjBlT,KAAKmT,OAAS,CACZ,YACA,WACA,QACA,aACA,aAEFnT,KAAKoT,KAAO,CACVC,OAAQ,qDACRjN,KAAM,GACNkN,MAAO,SACPC,WAAY,IACZ9S,OAAQ,MAEVT,KAAKwT,MAAQ,CAAC,EACdxT,KAAKyT,qBAAuB,CAACC,EAAKhP,IAAYmL,GAAcnL,EAAQiO,iBACpE3S,KAAK2T,iBAAmB,CAACD,EAAKhP,IAAYmL,GAAcnL,EAAQkO,aAChE5S,KAAK4T,WAAa,CAACF,EAAKhP,IAAYmL,GAAcnL,EAAQlE,OAC1DR,KAAK6T,UAAY,IACjB7T,KAAK8T,YAAc,CACjBC,KAAM,UACNC,WAAW,EACXC,kBAAkB,GAEpBjU,KAAKkU,qBAAsB,EAC3BlU,KAAKmU,QAAU,KACfnU,KAAKoU,QAAU,KACfpU,KAAKqU,SAAU,EACfrU,KAAKsU,QAAU,CAAC,EAChBtU,KAAKuU,YAAa,EAClBvU,KAAKwU,WAAQljB,EACb0O,KAAKyU,OAAS,CAAC,EACfzU,KAAK0U,UAAW,EAChB1U,KAAK2U,yBAA0B,EAE/B3U,KAAK4U,SAASpC,GACdxS,KAAKsD,MAAMmP,EACb,CAMAvH,IAAIoH,EAAOvB,GACT,OAAO7F,GAAIlL,KAAMsS,EAAOvB,EAC1B,CAKAN,IAAI6B,GACF,OAAOH,GAASnS,KAAMsS,EACxB,CAMAsC,SAAStC,EAAOvB,GACd,OAAO7F,GAAIgH,GAAaI,EAAOvB,EACjC,CAEA8D,SAASvC,EAAOvB,GACd,OAAO7F,GAAI+G,GAAWK,EAAOvB,EAC/B,CAmBA+D,MAAMxC,EAAOyC,EAAMC,EAAaC,GAC9B,MAAMC,EAAc/C,GAASnS,KAAMsS,GAC7B6C,EAAoBhD,GAASnS,KAAMgV,GACnCI,EAAc,IAAML,EAE1B9W,OAAOoX,iBAAiBH,EAAa,CAEnC,CAACE,GAAc,CACblT,MAAOgT,EAAYH,GACnBO,UAAU,GAGZ,CAACP,GAAO,CACNQ,YAAY,EACZ9E,MACE,MAAM+E,EAAQxV,KAAKoV,GACbjR,EAASgR,EAAkBF,GACjC,OAAI1S,EAASiT,GACJvX,OAAOmB,OAAO,CAAC,EAAG+E,EAAQqR,GAE5B3S,EAAe2S,EAAOrR,EAC/B,EACA+G,IAAIhJ,GACFlC,KAAKoV,GAAelT,CACtB,IAGN,CAEAoB,MAAMmS,GACJA,EAAS1K,SAASzH,GAAUA,EAAMtD,OACpC,EAIF,IAAA0V,GAA+B,IAAInD,GAAS,CAC1CoD,YAAcZ,IAAUA,EAAKa,WAAW,MACxCC,WAAad,GAAkB,WAATA,EACtBvB,MAAO,CACLsC,UAAW,eAEbhC,YAAa,CACX6B,aAAa,EACbE,YAAY,IAEb,CH3KI,SAAiCH,GACtCA,EAASxK,IAAI,YAAa,CACxB6K,WAAOzkB,EACP0kB,SAAU,IACVC,OAAQ,eACR9S,QAAI7R,EACJwN,UAAMxN,EACN4kB,UAAM5kB,EACNsN,QAAItN,EACJsO,UAAMtO,IAGRokB,EAASd,SAAS,YAAa,CAC7BkB,WAAW,EACXD,YAAY,EACZF,YAAcZ,GAAkB,eAATA,GAAkC,eAATA,GAAkC,OAATA,IAG3EW,EAASxK,IAAI,aAAc,CACzB6E,OAAQ,CACNnQ,KAAM,QACNuW,WAAYpG,IAEdD,QAAS,CACPlQ,KAAM,SACNuW,WAAYrG,MAIhB4F,EAASd,SAAS,aAAc,CAC9BkB,UAAW,cAGbJ,EAASxK,IAAI,cAAe,CAC1BkL,OAAQ,CACN1D,UAAW,CACTsD,SAAU,MAGdK,OAAQ,CACN3D,UAAW,CACTsD,SAAU,IAGdM,KAAM,CACJC,WAAY,CACVxG,OAAQ,CACNjR,KAAM,eAER0X,QAAS,CACP5W,KAAM,UACNoW,SAAU,KAIhBS,KAAM,CACJF,WAAY,CACVxG,OAAQ,CACNnR,GAAI,eAEN4X,QAAS,CACP5W,KAAM,UACNqW,OAAQ,SACR9S,GAAI9T,GAAS,EAAJA,MAKnB,EIvEO,SAA8BqmB,GACnCA,EAASxK,IAAI,SAAU,CACrBwL,aAAa,EACbC,QAAS,CACPC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,IAGZ,ECRO,SAA4BrB,GACjCA,EAASxK,IAAI,QAAS,CACpB8L,SAAS,EACTC,QAAQ,EACRxT,SAAS,EACTyT,aAAa,EASbC,OAAQ,QAERC,MAAM,EAMNC,MAAO,EAGPC,KAAM,CACJN,SAAS,EACTO,UAAW,EACXC,iBAAiB,EACjBC,WAAW,EACXC,WAAY,EACZC,UAAWA,CAACC,EAAMlT,IAAYA,EAAQ6S,UACtCM,UAAWA,CAACD,EAAMlT,IAAYA,EAAQlE,MACtCyW,QAAQ,GAGVa,OAAQ,CACNd,SAAS,EACTe,KAAM,GACNC,WAAY,EACZC,MAAO,GAITC,MAAO,CAELlB,SAAS,EAGTmB,KAAM,GAGNxB,QAAS,CACPC,IAAK,EACLE,OAAQ,IAKZ5F,MAAO,CACLkH,YAAa,EACbC,YAAa,GACbC,QAAQ,EACRC,gBAAiB,EACjBC,gBAAiB,GACjB7B,QAAS,EACTK,SAAS,EACTyB,UAAU,EACVC,gBAAiB,EACjBC,YAAa,EAEbzV,SAAU8O,GAAMlB,WAAWC,OAC3B6H,MAAO,CAAC,EACRC,MAAO,CAAC,EACRhN,MAAO,SACPiN,WAAY,OAEZC,mBAAmB,EACnBC,cAAe,4BACfC,gBAAiB,KAIrBvD,EAASZ,MAAM,cAAe,QAAS,GAAI,SAC3CY,EAASZ,MAAM,aAAc,QAAS,GAAI,eAC1CY,EAASZ,MAAM,eAAgB,QAAS,GAAI,eAC5CY,EAASZ,MAAM,cAAe,QAAS,GAAI,SAE3CY,EAASd,SAAS,QAAS,CACzBkB,WAAW,EACXH,YAAcZ,IAAUA,EAAKa,WAAW,YAAcb,EAAKa,WAAW,UAAqB,aAATb,GAAgC,WAATA,EACzGc,WAAad,GAAkB,eAATA,GAAkC,mBAATA,GAAsC,SAATA,IAG9EW,EAASd,SAAS,SAAU,CAC1BkB,UAAW,UAGbJ,EAASd,SAAS,cAAe,CAC/Be,YAAcZ,GAAkB,oBAATA,GAAuC,aAATA,EACrDc,WAAad,GAAkB,oBAATA,GAE1B,IClEO,SAASmE,GACdxF,EACAyF,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAYJ,EAAKG,GAQrB,OAPKC,IACHA,EAAYJ,EAAKG,GAAU5F,EAAI8F,YAAYF,GAAQrB,MACnDmB,EAAGxT,KAAK0T,IAENC,EAAYF,IACdA,EAAUE,GAELF,CACT,CASO,SAASI,GACd/F,EACAN,EACAsG,EACAC,GAGA,IAAIR,GADJQ,EAAQA,GAAS,CAAC,GACDR,KAAOQ,EAAMR,MAAQ,CAAC,EACnCC,EAAKO,EAAMC,eAAiBD,EAAMC,gBAAkB,GAEpDD,EAAMvG,OAASA,IACjB+F,EAAOQ,EAAMR,KAAO,CAAC,EACrBC,EAAKO,EAAMC,eAAiB,GAC5BD,EAAMvG,KAAOA,GAGfM,EAAImG,OAEJnG,EAAIN,KAAOA,EACX,IAAIiG,EAAU,EACd,MAAMxV,EAAO6V,EAAc7nB,OAC3B,IAAIK,EAAWiM,EAAW2b,EAAcC,EAAwBC,EAChE,IAAK9nB,EAAI,EAAGA,EAAI2R,EAAM3R,IAIpB,GAHA6nB,EAAQL,EAAcxnB,QAGRZ,IAAVyoB,GAAiC,OAAVA,GAAmBxnB,EAAQwnB,IAE/C,GAAIxnB,EAAQwnB,GAGjB,IAAK5b,EAAI,EAAG2b,EAAOC,EAAMloB,OAAQsM,EAAI2b,EAAM3b,IACzC6b,EAAcD,EAAM5b,QAEA7M,IAAhB0oB,GAA6C,OAAhBA,GAAyBznB,EAAQynB,KAChEX,EAAUH,GAAaxF,EAAKyF,EAAMC,EAAIC,EAASW,SARnDX,EAAUH,GAAaxF,EAAKyF,EAAMC,EAAIC,EAASU,GAcnDrG,EAAIuG,UAEJ,MAAMC,EAAQd,EAAGvnB,OAAS,EAC1B,GAAIqoB,EAAQR,EAAc7nB,OAAQ,CAChC,IAAKK,EAAI,EAAGA,EAAIgoB,EAAOhoB,WACdinB,EAAKC,EAAGlnB,IAEjBknB,EAAGtO,OAAO,EAAGoP,GAEf,OAAOb,CACT,CAUO,SAASc,GAAYhJ,EAAciJ,EAAenC,GACvD,MAAMnF,EAAmB3B,EAAMkJ,wBACzBC,EAAsB,IAAVrC,EAAcxoB,KAAKC,IAAIuoB,EAAQ,EAAG,IAAO,EAC3D,OAAOxoB,KAAKL,OAAOgrB,EAAQE,GAAaxH,GAAoBA,EAAmBwH,CACjF,CAKO,SAASC,GAAYC,EAA4B9G,IACjDA,GAAQ8G,MAIb9G,EAAMA,GAAO8G,EAAOC,WAAW,OAE3BZ,OAGJnG,EAAIgH,iBACJhH,EAAIiH,UAAU,EAAG,EAAGH,EAAOvC,MAAOuC,EAAOI,QACzClH,EAAIuG,UACN,CASO,SAASY,GACdnH,EACAhP,EACAvR,EACAmS,GAGAwV,GAAgBpH,EAAKhP,EAASvR,EAAGmS,EAAG,KACtC,CAGO,SAASwV,GACdpH,EACAhP,EACAvR,EACAmS,EACAtT,GAEA,IAAI4N,EAAcmb,EAAiBC,EAAiB5U,EAAc6U,EAAsBhD,EAAeiD,EAAkBC,EACzH,MAAM7H,EAAQ5O,EAAQ0W,WAChBC,EAAW3W,EAAQ2W,SACnBC,EAAS5W,EAAQ4W,OACvB,IAAIC,GAAOF,GAAY,GAAKzU,GAE5B,GAAI0M,GAA0B,kBAAVA,IAClB1T,EAAO0T,EAAMlR,WACA,8BAATxC,GAAiD,+BAATA,GAM1C,OALA8T,EAAImG,OACJnG,EAAI8H,UAAUroB,EAAGmS,GACjBoO,EAAI9R,OAAO2Z,GACX7H,EAAI+H,UAAUnI,GAAQA,EAAM2E,MAAQ,GAAI3E,EAAMsH,OAAS,EAAGtH,EAAM2E,MAAO3E,EAAMsH,aAC7ElH,EAAIuG,UAKR,KAAIrS,MAAM0T,IAAWA,GAAU,GAA/B,CAMA,OAFA5H,EAAIgI,YAEIpI,GAEN,QACMthB,EACF0hB,EAAIiI,QAAQxoB,EAAGmS,EAAGtT,EAAI,EAAGspB,EAAQ,EAAG,EAAG9U,IAEvCkN,EAAIkI,IAAIzoB,EAAGmS,EAAGgW,EAAQ,EAAG9U,IAE3BkN,EAAImI,YACJ,MACF,IAAK,WACH5D,EAAQjmB,EAAIA,EAAI,EAAIspB,EACpB5H,EAAIoI,OAAO3oB,EAAI1D,KAAKge,IAAI8N,GAAOtD,EAAO3S,EAAI7V,KAAKif,IAAI6M,GAAOD,GAC1DC,GAAOxU,GACP2M,EAAIqI,OAAO5oB,EAAI1D,KAAKge,IAAI8N,GAAOtD,EAAO3S,EAAI7V,KAAKif,IAAI6M,GAAOD,GAC1DC,GAAOxU,GACP2M,EAAIqI,OAAO5oB,EAAI1D,KAAKge,IAAI8N,GAAOtD,EAAO3S,EAAI7V,KAAKif,IAAI6M,GAAOD,GAC1D5H,EAAImI,YACJ,MACF,IAAK,cAQHZ,EAAwB,KAATK,EACflV,EAAOkV,EAASL,EAChBF,EAAUtrB,KAAKif,IAAI6M,EAAMzU,IAAcV,EACvC8U,EAAWzrB,KAAKif,IAAI6M,EAAMzU,KAAe9U,EAAIA,EAAI,EAAIipB,EAAe7U,GACpE4U,EAAUvrB,KAAKge,IAAI8N,EAAMzU,IAAcV,EACvC+U,EAAW1rB,KAAKge,IAAI8N,EAAMzU,KAAe9U,EAAIA,EAAI,EAAIipB,EAAe7U,GACpEsN,EAAIkI,IAAIzoB,EAAI+nB,EAAU5V,EAAI0V,EAASC,EAAcM,EAAMhV,GAAIgV,EAAM1U,IACjE6M,EAAIkI,IAAIzoB,EAAIgoB,EAAU7V,EAAIyV,EAASE,EAAcM,EAAM1U,GAAS0U,GAChE7H,EAAIkI,IAAIzoB,EAAI+nB,EAAU5V,EAAI0V,EAASC,EAAcM,EAAKA,EAAM1U,IAC5D6M,EAAIkI,IAAIzoB,EAAIgoB,EAAU7V,EAAIyV,EAASE,EAAcM,EAAM1U,GAAS0U,EAAMhV,IACtEmN,EAAImI,YACJ,MACF,IAAK,OACH,IAAKR,EAAU,CACbjV,EAAO3W,KAAKusB,QAAUV,EACtBrD,EAAQjmB,EAAIA,EAAI,EAAIoU,EACpBsN,EAAIuI,KAAK9oB,EAAI8kB,EAAO3S,EAAIc,EAAM,EAAI6R,EAAO,EAAI7R,GAC7C,MAEFmV,GAAOzU,GAET,IAAK,UACHoU,EAAWzrB,KAAKif,IAAI6M,IAAQvpB,EAAIA,EAAI,EAAIspB,GACxCP,EAAUtrB,KAAKif,IAAI6M,GAAOD,EAC1BN,EAAUvrB,KAAKge,IAAI8N,GAAOD,EAC1BH,EAAW1rB,KAAKge,IAAI8N,IAAQvpB,EAAIA,EAAI,EAAIspB,GACxC5H,EAAIoI,OAAO3oB,EAAI+nB,EAAU5V,EAAI0V,GAC7BtH,EAAIqI,OAAO5oB,EAAIgoB,EAAU7V,EAAIyV,GAC7BrH,EAAIqI,OAAO5oB,EAAI+nB,EAAU5V,EAAI0V,GAC7BtH,EAAIqI,OAAO5oB,EAAIgoB,EAAU7V,EAAIyV,GAC7BrH,EAAImI,YACJ,MACF,IAAK,WACHN,GAAOzU,GAET,IAAK,QACHoU,EAAWzrB,KAAKif,IAAI6M,IAAQvpB,EAAIA,EAAI,EAAIspB,GACxCP,EAAUtrB,KAAKif,IAAI6M,GAAOD,EAC1BN,EAAUvrB,KAAKge,IAAI8N,GAAOD,EAC1BH,EAAW1rB,KAAKge,IAAI8N,IAAQvpB,EAAIA,EAAI,EAAIspB,GACxC5H,EAAIoI,OAAO3oB,EAAI+nB,EAAU5V,EAAI0V,GAC7BtH,EAAIqI,OAAO5oB,EAAI+nB,EAAU5V,EAAI0V,GAC7BtH,EAAIoI,OAAO3oB,EAAIgoB,EAAU7V,EAAIyV,GAC7BrH,EAAIqI,OAAO5oB,EAAIgoB,EAAU7V,EAAIyV,GAC7B,MACF,IAAK,OACHG,EAAWzrB,KAAKif,IAAI6M,IAAQvpB,EAAIA,EAAI,EAAIspB,GACxCP,EAAUtrB,KAAKif,IAAI6M,GAAOD,EAC1BN,EAAUvrB,KAAKge,IAAI8N,GAAOD,EAC1BH,EAAW1rB,KAAKge,IAAI8N,IAAQvpB,EAAIA,EAAI,EAAIspB,GACxC5H,EAAIoI,OAAO3oB,EAAI+nB,EAAU5V,EAAI0V,GAC7BtH,EAAIqI,OAAO5oB,EAAI+nB,EAAU5V,EAAI0V,GAC7BtH,EAAIoI,OAAO3oB,EAAIgoB,EAAU7V,EAAIyV,GAC7BrH,EAAIqI,OAAO5oB,EAAIgoB,EAAU7V,EAAIyV,GAC7BQ,GAAOzU,GACPoU,EAAWzrB,KAAKif,IAAI6M,IAAQvpB,EAAIA,EAAI,EAAIspB,GACxCP,EAAUtrB,KAAKif,IAAI6M,GAAOD,EAC1BN,EAAUvrB,KAAKge,IAAI8N,GAAOD,EAC1BH,EAAW1rB,KAAKge,IAAI8N,IAAQvpB,EAAIA,EAAI,EAAIspB,GACxC5H,EAAIoI,OAAO3oB,EAAI+nB,EAAU5V,EAAI0V,GAC7BtH,EAAIqI,OAAO5oB,EAAI+nB,EAAU5V,EAAI0V,GAC7BtH,EAAIoI,OAAO3oB,EAAIgoB,EAAU7V,EAAIyV,GAC7BrH,EAAIqI,OAAO5oB,EAAIgoB,EAAU7V,EAAIyV,GAC7B,MACF,IAAK,OACHA,EAAU/oB,EAAIA,EAAI,EAAIvC,KAAKif,IAAI6M,GAAOD,EACtCN,EAAUvrB,KAAKge,IAAI8N,GAAOD,EAC1B5H,EAAIoI,OAAO3oB,EAAI4nB,EAASzV,EAAI0V,GAC5BtH,EAAIqI,OAAO5oB,EAAI4nB,EAASzV,EAAI0V,GAC5B,MACF,IAAK,OACHtH,EAAIoI,OAAO3oB,EAAGmS,GACdoO,EAAIqI,OAAO5oB,EAAI1D,KAAKif,IAAI6M,IAAQvpB,EAAIA,EAAI,EAAIspB,GAAShW,EAAI7V,KAAKge,IAAI8N,GAAOD,GACzE,MACF,KAAK,EACH5H,EAAImI,YAIRnI,EAAIwI,OACAxX,EAAQyX,YAAc,GACxBzI,EAAI0I,SAER,CASO,SAASC,GACdC,EACAC,EACAC,GAIA,OAFAA,EAASA,GAAU,IAEXD,GAASD,GAASA,EAAMnpB,EAAIopB,EAAKxF,KAAOyF,GAAUF,EAAMnpB,EAAIopB,EAAK1F,MAAQ2F,GACjFF,EAAMhX,EAAIiX,EAAK3F,IAAM4F,GAAUF,EAAMhX,EAAIiX,EAAKzF,OAAS0F,CACzD,CAEO,SAASC,GAAS/I,EAA+B6I,GACtD7I,EAAImG,OACJnG,EAAIgI,YACJhI,EAAIuI,KAAKM,EAAKxF,KAAMwF,EAAK3F,IAAK2F,EAAK1F,MAAQ0F,EAAKxF,KAAMwF,EAAKzF,OAASyF,EAAK3F,KACzElD,EAAI0D,MACN,CAEO,SAASsF,GAAWhJ,GACzBA,EAAIuG,SACN,CAKO,SAAS0C,GACdjJ,EACAkJ,EACAzY,EACA0Y,EACA9I,GAEA,IAAK6I,EACH,OAAOlJ,EAAIqI,OAAO5X,EAAOhR,EAAGgR,EAAOmB,GAErC,GAAa,WAATyO,EAAmB,CACrB,MAAM+I,GAAYF,EAASzpB,EAAIgR,EAAOhR,GAAK,EAC3CugB,EAAIqI,OAAOe,EAAUF,EAAStX,GAC9BoO,EAAIqI,OAAOe,EAAU3Y,EAAOmB,EAC9B,KAAoB,UAATyO,MAAuB8I,EAChCnJ,EAAIqI,OAAOa,EAASzpB,EAAGgR,EAAOmB,GAE9BoO,EAAIqI,OAAO5X,EAAOhR,EAAGypB,EAAStX,GAEhCoO,EAAIqI,OAAO5X,EAAOhR,EAAGgR,EAAOmB,EAC9B,CAKO,SAASyX,GACdrJ,EACAkJ,EACAzY,EACA0Y,GAEA,IAAKD,EACH,OAAOlJ,EAAIqI,OAAO5X,EAAOhR,EAAGgR,EAAOmB,GAErCoO,EAAIsJ,cACFH,EAAOD,EAASK,KAAOL,EAASM,KAChCL,EAAOD,EAASO,KAAOP,EAASQ,KAChCP,EAAO1Y,EAAO+Y,KAAO/Y,EAAO8Y,KAC5BJ,EAAO1Y,EAAOiZ,KAAOjZ,EAAOgZ,KAC5BhZ,EAAOhR,EACPgR,EAAOmB,EACX,CAEA,SAAS+X,GAAc3J,EAA+B4J,GAChDA,EAAKC,aACP7J,EAAI8H,UAAU8B,EAAKC,YAAY,GAAID,EAAKC,YAAY,IAGjDtb,EAAcqb,EAAKjC,WACtB3H,EAAI9R,OAAO0b,EAAKjC,UAGdiC,EAAK9c,QACPkT,EAAI8J,UAAYF,EAAK9c,OAGnB8c,EAAKG,YACP/J,EAAI+J,UAAYH,EAAKG,WAGnBH,EAAKI,eACPhK,EAAIgK,aAAeJ,EAAKI,aAE5B,CAEA,SAASC,GACPjK,EACAvgB,EACAmS,EACAsY,EACAN,GAEA,GAAIA,EAAKO,eAAiBP,EAAKQ,UAAW,CAQxC,MAAMC,EAAUrK,EAAI8F,YAAYoE,GAC1B7G,EAAO5jB,EAAI4qB,EAAQC,sBACnBnH,EAAQ1jB,EAAI4qB,EAAQE,uBACpBrH,EAAMtR,EAAIyY,EAAQG,wBAClBpH,EAASxR,EAAIyY,EAAQI,yBACrBC,EAAcd,EAAKO,eAAiBjH,EAAME,GAAU,EAAIA,EAE9DpD,EAAI2K,YAAc3K,EAAI8J,UACtB9J,EAAIgI,YACJhI,EAAI6D,UAAY+F,EAAKgB,iBAAmB,EACxC5K,EAAIoI,OAAO/E,EAAMqH,GACjB1K,EAAIqI,OAAOlF,EAAOuH,GAClB1K,EAAI0I,SAER,CAEA,SAASmC,GAAa7K,EAA+B4J,GACnD,MAAMkB,EAAW9K,EAAI8J,UAErB9J,EAAI8J,UAAYF,EAAK9c,MACrBkT,EAAI+K,SAASnB,EAAKvG,KAAMuG,EAAK1G,IAAK0G,EAAKrF,MAAOqF,EAAK1C,QACnDlH,EAAI8J,UAAYgB,CAClB,CAKO,SAASE,GACdhL,EACAyE,EACAhlB,EACAmS,EACA8N,GAEA,IADAkK,EAAuB1rB,UAAAC,OAAA,QAAAP,IAAAM,UAAA,GAAAA,UAAA,MAEvB,MAAM+sB,EAAQpsB,EAAQ4lB,GAAQA,EAAO,CAACA,GAChCiE,EAASkB,EAAKsB,YAAc,GAA0B,KAArBtB,EAAKuB,YAC5C,IAAI3sB,EAAW0rB,EAMf,IAJAlK,EAAImG,OACJnG,EAAIN,KAAOA,EAAKkG,OAChB+D,GAAc3J,EAAK4J,GAEdprB,EAAI,EAAGA,EAAIysB,EAAM9sB,SAAUK,EAC9B0rB,EAAOe,EAAMzsB,GAETorB,EAAKwB,UACPP,GAAa7K,EAAK4J,EAAKwB,UAGrB1C,IACEkB,EAAKuB,cACPnL,EAAI2K,YAAcf,EAAKuB,aAGpB5c,EAAcqb,EAAKsB,eACtBlL,EAAI6D,UAAY+F,EAAKsB,aAGvBlL,EAAIqL,WAAWnB,EAAMzqB,EAAGmS,EAAGgY,EAAK0B,WAGlCtL,EAAIuL,SAASrB,EAAMzqB,EAAGmS,EAAGgY,EAAK0B,UAC9BrB,GAAajK,EAAKvgB,EAAGmS,EAAGsY,EAAMN,GAE9BhY,GAAK7C,OAAO2Q,EAAKG,YAGnBG,EAAIuG,SACN,CAOO,SAASiF,GACdxL,EACAuI,GAEA,MAAM,EAAC9oB,EAAC,EAAEmS,EAAC,EAAEtT,EAAC,EAAExC,EAAC,OAAE8rB,GAAUW,EAG7BvI,EAAIkI,IAAIzoB,EAAImoB,EAAO6D,QAAS7Z,EAAIgW,EAAO6D,QAAS7D,EAAO6D,QAAS,IAAM5Y,GAAIA,IAAI,GAG9EmN,EAAIqI,OAAO5oB,EAAGmS,EAAI9V,EAAI8rB,EAAO8D,YAG7B1L,EAAIkI,IAAIzoB,EAAImoB,EAAO8D,WAAY9Z,EAAI9V,EAAI8rB,EAAO8D,WAAY9D,EAAO8D,WAAY7Y,GAAIM,IAAS,GAG1F6M,EAAIqI,OAAO5oB,EAAInB,EAAIspB,EAAO+D,YAAa/Z,EAAI9V,GAG3CkkB,EAAIkI,IAAIzoB,EAAInB,EAAIspB,EAAO+D,YAAa/Z,EAAI9V,EAAI8rB,EAAO+D,YAAa/D,EAAO+D,YAAaxY,GAAS,GAAG,GAGhG6M,EAAIqI,OAAO5oB,EAAInB,EAAGsT,EAAIgW,EAAOgE,UAG7B5L,EAAIkI,IAAIzoB,EAAInB,EAAIspB,EAAOgE,SAAUha,EAAIgW,EAAOgE,SAAUhE,EAAOgE,SAAU,GAAIzY,IAAS,GAGpF6M,EAAIqI,OAAO5oB,EAAImoB,EAAO6D,QAAS7Z,EACjC,CCxgBA,MAAMia,GAAc,uCACdC,GAAa,wEAcZ,SAASC,GAAavd,EAAwBkE,GACnD,MAAMsZ,GAAW,GAAKxd,GAAOyd,MAAMJ,IACnC,IAAKG,GAA0B,WAAfA,EAAQ,GACtB,OAAc,IAAPtZ,EAKT,OAFAlE,GAASwd,EAAQ,GAETA,EAAQ,IACd,IAAK,KACH,OAAOxd,EACT,IAAK,IACHA,GAAS,IAMb,OAAOkE,EAAOlE,CAChB,CAUO,SAAS0d,GAAkB1d,EAAwC2d,GACxE,MAAMhgB,EAAM,CAAC,EACPigB,EAAWvd,EAASsd,GACpB7hB,EAAO8hB,EAAW7hB,OAAOD,KAAK6hB,GAASA,EACvCE,EAAOxd,EAASL,GAClB4d,EACEE,GAAQnd,EAAeX,EAAM8d,GAAO9d,EAAM2d,EAAMG,KAChDA,GAAQ9d,EAAM8d,GAChB,IAAM9d,EAEV,IAAK,MAAM8d,KAAQhiB,EACjB6B,EAAImgB,IAAqBD,EAAKC,IAnBS,EAqBzC,OAAOngB,CACT,CAUO,SAASogB,GAAO/d,GACrB,OAAO0d,GAAkB1d,EAAO,CAAC0U,IAAK,IAAKC,MAAO,IAAKC,OAAQ,IAAKC,KAAM,KAC5E,CASO,SAASmJ,GAAche,GAC5B,OAAO0d,GAAkB1d,EAAO,CAAC,UAAW,WAAY,aAAc,eACxE,CAUO,SAASie,GAAUje,GACxB,MAAM9B,EAAM6f,GAAO/d,GAKnB,OAHA9B,EAAI6X,MAAQ7X,EAAI2W,KAAO3W,EAAIyW,MAC3BzW,EAAIwa,OAASxa,EAAIwW,IAAMxW,EAAI0W,OAEpB1W,CACT,CAUO,SAASggB,GAAO1b,EAA4B2b,GACjD3b,EAAUA,GAAW,CAAC,EACtB2b,EAAWA,GAAY3K,GAAStC,KAEhC,IAAIhN,EAAOvD,EAAe6B,EAAQ0B,KAAMia,EAASja,MAE7B,kBAATA,IACTA,EAAO7H,SAAS6H,EAAM,KAExB,IAAIkN,EAAQzQ,EAAe6B,EAAQ4O,MAAO+M,EAAS/M,OAC/CA,KAAW,GAAKA,GAAOqM,MAAMH,MAC/Bc,QAAQC,KAAK,kCAAoCjN,EAAQ,KACzDA,OAAQhiB,GAGV,MAAM8hB,EAAO,CACXC,OAAQxQ,EAAe6B,EAAQ2O,OAAQgN,EAAShN,QAChDE,WAAYkM,GAAa5c,EAAe6B,EAAQ6O,WAAY8M,EAAS9M,YAAanN,GAClFA,OACAkN,QACA7S,OAAQoC,EAAe6B,EAAQjE,OAAQ4f,EAAS5f,QAChD6Y,OAAQ,IAIV,OADAlG,EAAKkG,ODlHA,SAAsBlG,GAC3B,OAAKA,GAAQnR,EAAcmR,EAAKhN,OAASnE,EAAcmR,EAAKC,QACnD,MAGDD,EAAKE,MAAQF,EAAKE,MAAQ,IAAM,KACrCF,EAAK3S,OAAS2S,EAAK3S,OAAS,IAAM,IACnC2S,EAAKhN,KAAO,MACZgN,EAAKC,MACT,CCyGgBmN,CAAapN,GACpBA,CACT,CAaO,SAASqN,GAAQC,EAAwB3N,EAAkB9O,EAAgB0c,GAChF,IACIzuB,EAAW2R,EAAc3B,EADzB0e,GAAY,EAGhB,IAAK1uB,EAAI,EAAG2R,EAAO6c,EAAO7uB,OAAQK,EAAI2R,IAAQ3R,EAE5C,GADAgQ,EAAQwe,EAAOxuB,QACDZ,IAAV4Q,SAGY5Q,IAAZyhB,GAA0C,oBAAV7Q,IAClCA,EAAQA,EAAM6Q,GACd6N,GAAY,QAEAtvB,IAAV2S,GAAuB1R,EAAQ2P,KACjCA,EAAQA,EAAM+B,EAAQ/B,EAAMrQ,QAC5B+uB,GAAY,QAEAtvB,IAAV4Q,GAIF,OAHIye,IAASC,IACXD,EAAKC,WAAY,GAEZ1e,CAGb,CA0BO,SAAS2e,GAAcC,EAAuB/N,GACnD,OAAO9U,OAAOmB,OAAOnB,OAAOmG,OAAO0c,GAAgB/N,EACrD,CCnLO,SAASgO,GAIdC,GAKA,IAJAC,EAAWrvB,UAAAC,OAAA,QAAAP,IAAAM,UAAC,GAADA,UAAC,GAAD,CAAC,IACZsvB,EAActvB,UAAAC,OAAA,EAAAD,UAAA,QAAAN,EACd+uB,EAA4BzuB,UAAAC,OAAA,EAAAD,UAAA,QAAAN,EAC5B6vB,EAAAvvB,UAAAC,OAAA,QAAAP,IAAAM,UAAA,GAAAA,UAAA,GAAY,IAAMovB,EAAO,GAEzB,MAAMI,EAAkBF,GAAcF,EACd,qBAAbX,IACTA,EAAWgB,GAAS,YAAaL,IAEnC,MAAMrH,EAA6B,CACjC,CAAC2H,OAAOC,aAAc,SACtBC,YAAY,EACZC,QAAST,EACTU,YAAaN,EACbtL,UAAWuK,EACXsB,WAAYR,EACZtM,SAAWvC,GAAqByO,GAAgB,CAACzO,KAAU0O,GAASC,EAAUG,EAAiBf,IAEjG,OAAO,IAAIuB,MAAMjI,EAAO,CAItBkI,eAAeA,CAAA1d,EAAQ6b,YACd7b,EAAO6b,UACP7b,EAAO2d,aACPd,EAAO,GAAGhB,IACV,GAMTvP,IAAIA,CAAAtM,EAAQ6b,IACH+B,GAAQ5d,EAAQ6b,GACrB,IAAMgC,GAAqBhC,EAAMiB,EAAUD,EAAQ7c,KAOvD8d,yBAAyBA,CAAA9d,EAAQ6b,IACxBkC,QAAQD,yBAAyB9d,EAAOsd,QAAQ,GAAIzB,GAM7DmC,eAAiBA,IACRD,QAAQC,eAAenB,EAAO,IAMvC1a,IAAIA,CAAAnC,EAAQ6b,IACHoC,GAAqBje,GAAQ4N,SAASiO,GAM/CqC,QAAQle,GACCie,GAAqBje,GAM9B+G,IAAI/G,EAAQ6b,EAAc9d,GACxB,MAAMogB,EAAUne,EAAOoe,WAAape,EAAOoe,SAAWpB,KAGtD,OAFAhd,EAAO6b,GAAQsC,EAAQtC,GAAQ9d,SACxBiC,EAAO2d,OACP,CACT,GAEJ,CAUO,SAASU,GAIdC,EACA1P,EACA2P,EACAC,GAEA,MAAMhJ,EAA4B,CAChC6H,YAAY,EACZoB,OAAQH,EACRI,SAAU9P,EACV+P,UAAWJ,EACXK,OAAQ,IAAI5X,IACZqH,aAAcA,GAAaiQ,EAAOE,GAClCK,WAAatP,GAAmB8O,GAAeC,EAAO/O,EAAKgP,EAAUC,GACrE9N,SAAWvC,GAAqBkQ,GAAeC,EAAM5N,SAASvC,GAAQS,EAAS2P,EAAUC,IAE3F,OAAO,IAAIf,MAAMjI,EAAO,CAItBkI,eAAeA,CAAA1d,EAAQ6b,YACd7b,EAAO6b,UACPyC,EAAMzC,IACN,GAMTvP,IAAG,CAACtM,EAAQ6b,EAAciD,IACjBlB,GAAQ5d,EAAQ6b,GACrB,IAiFR,SACE7b,EACA6b,EACAiD,GAEA,MAAM,OAACL,EAAM,SAAEC,EAAQ,UAAEC,EAAWtQ,aAAcN,GAAe/N,EACjE,IAAIjC,EAAQ0gB,EAAO5C,GAGf9Z,GAAWhE,IAAUgQ,EAAYgR,aAAalD,KAChD9d,EAYJ,SACE8d,EACAmD,EACAhf,EACA8e,GAEA,MAAM,OAACL,EAAA,SAAQC,EAAA,UAAUC,EAAS,OAAEC,GAAU5e,EAC9C,GAAI4e,EAAOzc,IAAI0Z,GACb,MAAM,IAAIoD,MAAM,uBAAyB9wB,MAAMwM,KAAKikB,GAAQM,KAAK,MAAQ,KAAOrD,GAElF+C,EAAOO,IAAItD,GACX,IAAI9d,EAAQihB,EAASN,EAAUC,GAAaG,GAC5CF,EAAOQ,OAAOvD,GACVwD,GAAiBxD,EAAM9d,KAEzBA,EAAQuhB,GAAkBb,EAAOnB,QAASmB,EAAQ5C,EAAM9d,IAE1D,OAAOA,CACT,CA9BYwhB,CAAmB1D,EAAM9d,EAAOiC,EAAQ8e,IAE9C1wB,EAAQ2P,IAAUA,EAAMrQ,SAC1BqQ,EA6BJ,SACE8d,EACA9d,EACAiC,EACAwf,GAEA,MAAM,OAACf,EAAM,SAAEC,EAAQ,UAAEC,EAAWtQ,aAAcN,GAAe/N,EAEjE,GAA8B,qBAAnB0e,EAAS5e,OAAyB0f,EAAY3D,GACvD,OAAO9d,EAAM2gB,EAAS5e,MAAQ/B,EAAMrQ,QAC/B,GAAI0Q,EAASL,EAAM,IAAK,CAE7B,MAAM0hB,EAAM1hB,EACN8e,EAAS4B,EAAOnB,QAAQoC,QAAOpyB,GAAKA,IAAMmyB,IAChD1hB,EAAQ,GACR,IAAK,MAAMmE,KAAQud,EAAK,CACtB,MAAMpe,EAAWie,GAAkBzC,EAAQ4B,EAAQ5C,EAAM3Z,GACzDnE,EAAM0D,KAAK4c,GAAehd,EAAUqd,EAAUC,GAAaA,EAAU9C,GAAO9N,GAC9E,EAEF,OAAOhQ,CACT,CAlDY4hB,CAAc9D,EAAM9d,EAAOiC,EAAQ+N,EAAYyR,cAErDH,GAAiBxD,EAAM9d,KAEzBA,EAAQsgB,GAAetgB,EAAO2gB,EAAUC,GAAaA,EAAU9C,GAAO9N,IAExE,OAAOhQ,CACT,CArGc6hB,CAAoB5f,EAAQ6b,EAAMiD,KAO5ChB,yBAAyBA,CAAA9d,EAAQ6b,IACxB7b,EAAOqO,aAAawR,QACvB9B,QAAQ5b,IAAImc,EAAOzC,GAAQ,CAACzK,YAAY,EAAM0O,cAAc,QAAQ3yB,EACpE4wB,QAAQD,yBAAyBQ,EAAOzC,GAM9CmC,eAAiBA,IACRD,QAAQC,eAAeM,GAMhCnc,IAAIA,CAAAnC,EAAQ6b,IACHkC,QAAQ5b,IAAImc,EAAOzC,GAM5BqC,QAAUA,IACDH,QAAQG,QAAQI,GAMzBvX,IAAG,CAAC/G,EAAQ6b,EAAM9d,KAChBugB,EAAMzC,GAAQ9d,SACPiC,EAAO6b,IACP,IAGb,CAKO,SAASxN,GACdiQ,GAEY,IADZ/M,EAA+B9jB,UAAAC,OAAA,QAAAP,IAAAM,UAAA,GAAAA,UAAA,IAACsyB,YAAY,EAAMC,WAAW,GAE7D,MAAM,YAACxO,EAAcD,EAASwO,WAAU,WAAErO,EAAaH,EAASyO,UAAS,SAAEC,EAAW1O,EAASsO,SAAWvB,EAC1G,MAAO,CACLuB,QAASI,EACTF,WAAYvO,EACZwO,UAAWtO,EACXqN,aAAchd,GAAWyP,GAAeA,EAAc,IAAMA,EAC5DgO,YAAazd,GAAW2P,GAAcA,EAAa,IAAMA,EAE7D,CAEA,MAAMwO,GAAUA,CAACC,EAAgBvP,IAAiBuP,EAASA,EAASve,GAAYgP,GAAQA,EAClFyO,GAAmBA,CAACxD,EAAc9d,IAAmBK,EAASL,IAAmB,aAAT8d,IAC1C,OAAjC/hB,OAAOkkB,eAAejgB,IAAmBA,EAAMvC,cAAgB1B,QAElE,SAAS8jB,GACP5d,EACA6b,EACAS,GAEA,GAAIxiB,OAAOkE,UAAUgD,eAAe9C,KAAK8B,EAAQ6b,IAAkB,gBAATA,EACxD,OAAO7b,EAAO6b,GAGhB,MAAM9d,EAAQue,IAGd,OADAtc,EAAO6b,GAAQ9d,EACRA,CACT,CAmEA,SAASqiB,GACPlE,EACAL,EACA9d,GAEA,OAAOgE,GAAWma,GAAYA,EAASL,EAAM9d,GAASme,CACxD,CAEA,MAAMmE,GAAWA,CAACjgB,EAAwBkgB,KAA8B,IAARlgB,EAAekgB,EAC5D,kBAARlgB,EAAmBgB,GAAiBkf,EAAQlgB,QAAOjT,EAE9D,SAASozB,GACPxZ,EACAyZ,EACApgB,EACAqgB,EACA1iB,GAEA,IAAK,MAAMuiB,KAAUE,EAAc,CACjC,MAAMrS,EAAQkS,GAASjgB,EAAKkgB,GAC5B,GAAInS,EAAO,CACTpH,EAAIoY,IAAIhR,GACR,MAAM+N,EAAWkE,GAAgBjS,EAAMwD,UAAWvR,EAAKrC,GACvD,GAAwB,qBAAbme,GAA4BA,IAAa9b,GAAO8b,IAAauE,EAGtE,OAAOvE,OAEJ,IAAc,IAAV/N,GAA6C,qBAAnBsS,GAAkCrgB,IAAQqgB,EAG7E,OAAO,IAEX,CACA,OAAO,CACT,CAEA,SAASnB,GACPkB,EACAnf,EACAwa,EACA9d,GAEA,MAAMgf,EAAa1b,EAASkc,YACtBrB,EAAWkE,GAAgB/e,EAASsQ,UAAWkK,EAAM9d,GACrD2iB,EAAY,IAAIF,KAAiBzD,GACjChW,EAAM,IAAIC,IAChBD,EAAIoY,IAAIphB,GACR,IAAIqC,EAAMugB,GAAiB5Z,EAAK2Z,EAAW7E,EAAMK,GAAYL,EAAM9d,GACnE,OAAY,OAARqC,KAGoB,qBAAb8b,GAA4BA,IAAaL,IAClDzb,EAAMugB,GAAiB5Z,EAAK2Z,EAAWxE,EAAU9b,EAAKrC,GAC1C,OAARqC,KAICwc,GAAgBzuB,MAAMwM,KAAKoM,GAAM,CAAC,IAAKgW,EAAYb,GACxD,IAgBJ,SACE7a,EACAwa,EACA9d,GAEA,MAAMuiB,EAASjf,EAASmc,aAClB3B,KAAQyE,IACZA,EAAOzE,GAAQ,CAAC,GAElB,MAAM7b,EAASsgB,EAAOzE,GACtB,GAAIztB,EAAQ4R,IAAW5B,EAASL,GAE9B,OAAOA,EAET,OAAOiC,GAAU,CAAC,CACpB,CA/BU4gB,CAAavf,EAAUwa,EAAgB9d,KACjD,CAEA,SAAS4iB,GACP5Z,EACA2Z,EACAtgB,EACA8b,EACAha,GAEA,KAAO9B,GACLA,EAAMmgB,GAAUxZ,EAAK2Z,EAAWtgB,EAAK8b,EAAUha,GAEjD,OAAO9B,CACT,CAmBA,SAASyd,GACPhC,EACAiB,EACAD,EACAyB,GAEA,IAAIvgB,EACJ,IAAK,MAAMoiB,KAAUrD,EAEnB,GADA/e,EAAQmf,GAASgD,GAAQC,EAAQtE,GAAOgB,GACnB,qBAAV9e,EACT,OAAOshB,GAAiBxD,EAAM9d,GAC1BuhB,GAAkBzC,EAAQyB,EAAOzC,EAAM9d,GACvCA,CAGV,CAEA,SAASmf,GAAS9c,EAAayc,GAC7B,IAAK,MAAM1O,KAAS0O,EAAQ,CAC1B,IAAK1O,EACH,SAEF,MAAMpQ,EAAQoQ,EAAM/N,GACpB,GAAqB,qBAAVrC,EACT,OAAOA,CAEX,CACF,CAEA,SAASkgB,GAAqBje,GAC5B,IAAInG,EAAOmG,EAAO2d,MAIlB,OAHK9jB,IACHA,EAAOmG,EAAO2d,MAKlB,SAAkCd,GAChC,MAAM9V,EAAM,IAAIC,IAChB,IAAK,MAAMmH,KAAS0O,EAClB,IAAK,MAAMzc,KAAOtG,OAAOD,KAAKsU,GAAOuR,QAAOlyB,IAAMA,EAAEikB,WAAW,OAC7D1K,EAAIoY,IAAI/e,GAGZ,OAAOjS,MAAMwM,KAAKoM,EACpB,CAb0B8Z,CAAyB7gB,EAAOsd,UAEjDzjB,CACT,CAYO,SAASinB,GACdjZ,EACAmN,EACA9P,EACA+C,GAEA,MAAM,OAACE,GAAUN,GACX,IAACzH,EAAM,KAAOvE,KAAKklB,SACnBC,EAAS,IAAI7yB,MAAoB8Z,GACvC,IAAIla,EAAW2R,EAAcI,EAAeoC,EAE5C,IAAKnU,EAAI,EAAG2R,EAAOuI,EAAOla,EAAI2R,IAAQ3R,EACpC+R,EAAQ/R,EAAImX,EACZhD,EAAO8S,EAAKlV,GACZkhB,EAAOjzB,GAAK,CACVhB,EAAGob,EAAO8Y,MAAM7f,GAAiBc,EAAM9B,GAAMN,IAGjD,OAAOkhB,CACT,CClcA,MAAME,GAAU5iB,OAAO4iB,SAAW,MAG5BC,GAAWA,CAACrZ,EAAuB/Z,IAAmCA,EAAI+Z,EAAOpa,SAAWoa,EAAO/Z,GAAGqzB,MAAQtZ,EAAO/Z,GACrHszB,GAAgB3R,GAAuC,MAAdA,EAAoB,IAAM,IAElE,SAAS4R,GACdC,EACAC,EACAC,EACA5kB,GAUA,MAAM4b,EAAW8I,EAAWH,KAAOI,EAAcD,EAC3C1gB,EAAU2gB,EACVE,EAAOD,EAAWL,KAAOI,EAAcC,EACvCE,EAAM/c,GAAsB/D,EAAS4X,GACrCmJ,EAAMhd,GAAsB8c,EAAM7gB,GAExC,IAAIghB,EAAMF,GAAOA,EAAMC,GACnBE,EAAMF,GAAOD,EAAMC,GAGvBC,EAAMpe,MAAMoe,GAAO,EAAIA,EACvBC,EAAMre,MAAMqe,GAAO,EAAIA,EAEvB,MAAMC,EAAKllB,EAAIglB,EACTG,EAAKnlB,EAAIilB,EAEf,MAAO,CACLrJ,SAAU,CACRzpB,EAAG6R,EAAQ7R,EAAI+yB,GAAML,EAAK1yB,EAAIypB,EAASzpB,GACvCmS,EAAGN,EAAQM,EAAI4gB,GAAML,EAAKvgB,EAAIsX,EAAStX,IAEzCugB,KAAM,CACJ1yB,EAAG6R,EAAQ7R,EAAIgzB,GAAMN,EAAK1yB,EAAIypB,EAASzpB,GACvCmS,EAAGN,EAAQM,EAAI6gB,GAAMN,EAAKvgB,EAAIsX,EAAStX,IAG7C,CAKA,SAAS8gB,GAAena,EAAuBoa,EAAkBC,GAC/D,MAAMC,EAAYta,EAAOpa,OAEzB,IAAI20B,EAAgBC,EAAeC,EAAcC,EAA0BC,EACvEC,EAAavB,GAASrZ,EAAQ,GAClC,IAAK,IAAI/Z,EAAI,EAAGA,EAAIq0B,EAAY,IAAKr0B,EACnC00B,EAAeC,EACfA,EAAavB,GAASrZ,EAAQ/Z,EAAI,GAC7B00B,GAAiBC,IAIlB3f,GAAamf,EAAOn0B,GAAI,EAAGmzB,IAC7BiB,EAAGp0B,GAAKo0B,EAAGp0B,EAAI,GAAK,GAItBs0B,EAASF,EAAGp0B,GAAKm0B,EAAOn0B,GACxBu0B,EAAQH,EAAGp0B,EAAI,GAAKm0B,EAAOn0B,GAC3By0B,EAAmBl3B,KAAKoP,IAAI2nB,EAAQ,GAAK/2B,KAAKoP,IAAI4nB,EAAO,GACrDE,GAAoB,IAIxBD,EAAO,EAAIj3B,KAAKkZ,KAAKge,GACrBL,EAAGp0B,GAAKs0B,EAASE,EAAOL,EAAOn0B,GAC/Bo0B,EAAGp0B,EAAI,GAAKu0B,EAAQC,EAAOL,EAAOn0B,KAEtC,CAEA,SAAS40B,GAAgB7a,EAAuBqa,GAA0C,IAA5BzS,EAAAjiB,UAAAC,OAAA,QAAAP,IAAAM,UAAA,GAAAA,UAAA,GAAuB,IACnF,MAAMm1B,EAAYvB,GAAa3R,GACzB0S,EAAYta,EAAOpa,OACzB,IAAIwf,EAAe2V,EAAkCJ,EACjDC,EAAavB,GAASrZ,EAAQ,GAElC,IAAK,IAAI/Z,EAAI,EAAGA,EAAIq0B,IAAar0B,EAAG,CAIlC,GAHA80B,EAAcJ,EACdA,EAAeC,EACfA,EAAavB,GAASrZ,EAAQ/Z,EAAI,IAC7B00B,EACH,SAGF,MAAMK,EAASL,EAAa/S,GACtBqT,EAASN,EAAaG,GACxBC,IACF3V,GAAS4V,EAASD,EAAYnT,IAAc,EAC5C+S,EAAc,MAAK/S,KAAeoT,EAAS5V,EAC3CuV,EAAc,MAAKG,KAAeG,EAAS7V,EAAQiV,EAAGp0B,IAEpD20B,IACFxV,GAASwV,EAAWhT,GAAaoT,GAAU,EAC3CL,EAAc,MAAK/S,KAAeoT,EAAS5V,EAC3CuV,EAAc,MAAKG,KAAeG,EAAS7V,EAAQiV,EAAGp0B,GAE1D,CACF,CA2CA,SAASi1B,GAAgBC,EAAYz3B,EAAaD,GAChD,OAAOD,KAAKC,IAAID,KAAKE,IAAIy3B,EAAI13B,GAAMC,EACrC,CA2BO,SAAS03B,GACdpb,EACAvH,EACA6X,EACArG,EACArC,GAEA,IAAI3hB,EAAW2R,EAAcyY,EAAoBgL,EAOjD,GAJI5iB,EAAQ6iB,WACVtb,EAASA,EAAO4X,QAAQuD,IAAQA,EAAG7B,QAGE,aAAnC7gB,EAAQ8iB,wBA9EP,SAA6Bvb,GAAmD,IAA5B4H,EAAAjiB,UAAAC,OAAA,QAAAP,IAAAM,UAAA,GAAAA,UAAA,GAAuB,IAChF,MAAMm1B,EAAYvB,GAAa3R,GACzB0S,EAAYta,EAAOpa,OACnBw0B,EAAmB/zB,MAAMi0B,GAAWrK,KAAK,GACzCoK,EAAeh0B,MAAMi0B,GAG3B,IAAIr0B,EAAG80B,EAAkCJ,EACrCC,EAAavB,GAASrZ,EAAQ,GAElC,IAAK/Z,EAAI,EAAGA,EAAIq0B,IAAar0B,EAI3B,GAHA80B,EAAcJ,EACdA,EAAeC,EACfA,EAAavB,GAASrZ,EAAQ/Z,EAAI,GAC7B00B,EAAL,CAIA,GAAIC,EAAY,CACd,MAAMY,EAAaZ,EAAWhT,GAAa+S,EAAa/S,GAGxDwS,EAAOn0B,GAAoB,IAAfu1B,GAAoBZ,EAAWE,GAAaH,EAAaG,IAAcU,EAAa,EAElGnB,EAAGp0B,GAAM80B,EACJH,EACE5f,GAAKof,EAAOn0B,EAAI,MAAQ+U,GAAKof,EAAOn0B,IAAO,GACzCm0B,EAAOn0B,EAAI,GAAKm0B,EAAOn0B,IAAM,EAFpBm0B,EAAOn0B,EAAI,GADNm0B,EAAOn0B,GAMhCk0B,GAAena,EAAQoa,EAAQC,GAE/BQ,GAAgB7a,EAAQqa,EAAIzS,EAC9B,CA8CI6T,CAAoBzb,EAAQ4H,OACvB,CACL,IAAI8T,EAAOzR,EAAOjK,EAAOA,EAAOpa,OAAS,GAAKoa,EAAO,GACrD,IAAK/Z,EAAI,EAAG2R,EAAOoI,EAAOpa,OAAQK,EAAI2R,IAAQ3R,EAC5CoqB,EAAQrQ,EAAO/Z,GACfo1B,EAAgB7B,GACdkC,EACArL,EACArQ,EAAOxc,KAAKE,IAAIuC,EAAI,EAAG2R,GAAQqS,EAAO,EAAI,IAAMrS,GAChDa,EAAQkjB,SAEVtL,EAAMW,KAAOqK,EAAc1K,SAASzpB,EACpCmpB,EAAMa,KAAOmK,EAAc1K,SAAStX,EACpCgX,EAAMY,KAAOoK,EAAczB,KAAK1yB,EAChCmpB,EAAMc,KAAOkK,EAAczB,KAAKvgB,EAChCqiB,EAAOrL,EAIP5X,EAAQmjB,iBA3Dd,SAAyB5b,EAAuBsQ,GAC9C,IAAIrqB,EAAG2R,EAAMyY,EAAOwL,EAAQC,EACxBC,EAAa3L,GAAepQ,EAAO,GAAIsQ,GAC3C,IAAKrqB,EAAI,EAAG2R,EAAOoI,EAAOpa,OAAQK,EAAI2R,IAAQ3R,EAC5C61B,EAAaD,EACbA,EAASE,EACTA,EAAa91B,EAAI2R,EAAO,GAAKwY,GAAepQ,EAAO/Z,EAAI,GAAIqqB,GACtDuL,IAGLxL,EAAQrQ,EAAO/Z,GACX61B,IACFzL,EAAMW,KAAOkK,GAAgB7K,EAAMW,KAAMV,EAAKxF,KAAMwF,EAAK1F,OACzDyF,EAAMa,KAAOgK,GAAgB7K,EAAMa,KAAMZ,EAAK3F,IAAK2F,EAAKzF,SAEtDkR,IACF1L,EAAMY,KAAOiK,GAAgB7K,EAAMY,KAAMX,EAAKxF,KAAMwF,EAAK1F,OACzDyF,EAAMc,KAAO+J,GAAgB7K,EAAMc,KAAMb,EAAK3F,IAAK2F,EAAKzF,SAG9D,CAwCI+Q,CAAgB5b,EAAQsQ,EAE5B,CC9MO,SAAS0L,KACd,MAAyB,qBAAX5c,QAA8C,qBAAb6c,QACjD,CAKO,SAASC,GAAeC,GAC7B,IAAI3D,EAAS2D,EAAQC,WAIrB,OAHI5D,GAAgC,wBAAtBA,EAAOriB,aACnBqiB,EAAUA,EAAsB6D,MAE3B7D,CACT,CAOA,SAAS8D,GAAcC,EAA6BpW,EAAmBqW,GACrE,IAAIC,EAYJ,MAX0B,kBAAfF,GACTE,EAAgBnqB,SAASiqB,EAAY,KAEJ,IAA7BA,EAAWhkB,QAAQ,OAErBkkB,EAAgBA,EAAiB,IAAOtW,EAAKiW,WAAWI,KAG1DC,EAAgBF,EAGXE,CACT,CAEA,MAAMC,GAAoBC,GACxBA,EAAQC,cAAcC,YAAYH,iBAAiBC,EAAS,MAM9D,MAAMG,GAAY,CAAC,MAAO,QAAS,SAAU,QAC7C,SAASC,GAAmBC,EAA6B3V,EAAe4V,GACtE,MAAMC,EAAS,CAAC,EAChBD,EAASA,EAAS,IAAMA,EAAS,GACjC,IAAK,IAAIh3B,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMk3B,EAAML,GAAU72B,GACtBi3B,EAAOC,GAAOnmB,WAAWgmB,EAAO3V,EAAQ,IAAM8V,EAAMF,KAAY,CAClE,CAGA,OAFAC,EAAOlR,MAAQkR,EAAOpS,KAAOoS,EAAOtS,MACpCsS,EAAOvO,OAASuO,EAAOvS,IAAMuS,EAAOrS,OAC7BqS,CACT,CA0CO,SAASE,GACdC,EACAnY,GAEA,GAAI,WAAYmY,EACd,OAAOA,EAGT,MAAM,OAAC9O,EAAA,wBAAQH,GAA2BlJ,EACpCmC,EAAQqV,GAAiBnO,GACzB+O,EAAgC,eAApBjW,EAAMkW,UAClBC,EAAWT,GAAmB1V,EAAO,WACrCoW,EAAUV,GAAmB1V,EAAO,SAAU,UAC9C,EAACngB,EAAA,EAAGmS,EAAA,IAAGqkB,GA7Cf,SACEh5B,EACA6pB,GAMA,MAAMoP,EAAUj5B,EAAkBi5B,QAC5B1lB,EAAU0lB,GAAWA,EAAQ/3B,OAAS+3B,EAAQ,GAAKj5B,GACnD,QAACk5B,EAAA,QAASC,GAAW5lB,EAC3B,IACI/Q,EAAGmS,EADHqkB,GAAM,EAEV,GArBmBI,EAAC52B,EAAWmS,EAAWnB,KACzChR,EAAI,GAAKmS,EAAI,MAAQnB,IAAWA,EAAwB6lB,YAoBrDD,CAAaF,EAASC,EAASn5B,EAAEwT,QACnChR,EAAI02B,EACJvkB,EAAIwkB,MACC,CACL,MAAM7N,EAAOzB,EAAOyP,wBACpB92B,EAAI+Q,EAAOgmB,QAAUjO,EAAKlF,KAC1BzR,EAAIpB,EAAOimB,QAAUlO,EAAKrF,IAC1B+S,GAAM,EAER,MAAO,CAACx2B,IAAGmS,IAAGqkB,MAChB,CAsBsBS,CAAkBd,EAAO9O,GACvCO,EAAU0O,EAAS1S,MAAQ4S,GAAOD,EAAQ3S,MAC1CiE,EAAUyO,EAAS7S,KAAO+S,GAAOD,EAAQ9S,KAE/C,IAAI,MAACqB,EAAA,OAAO2C,GAAUzJ,EAKtB,OAJIoY,IACFtR,GAASwR,EAASxR,MAAQyR,EAAQzR,MAClC2C,GAAU6O,EAAS7O,OAAS8O,EAAQ9O,QAE/B,CACLznB,EAAG1D,KAAKL,OAAO+D,EAAI4nB,GAAW9C,EAAQuC,EAAOvC,MAAQoC,GACrD/U,EAAG7V,KAAKL,OAAOkW,EAAI0V,GAAWJ,EAASJ,EAAOI,OAASP,GAE3D,CA6BA,MAAMgQ,GAAUh7B,GAAcI,KAAKL,MAAU,GAAJC,GAAU,GAG5C,SAASi7B,GACd9P,EACA+P,EACAC,EACAC,GAEA,MAAMnX,EAAQqV,GAAiBnO,GACzBkQ,EAAU1B,GAAmB1V,EAAO,UACpC0L,EAAWuJ,GAAcjV,EAAM0L,SAAUxE,EAAQ,gBAAkB9T,GACnEikB,EAAYpC,GAAcjV,EAAMqX,UAAWnQ,EAAQ,iBAAmB9T,GACtEkkB,EAxCR,SAA0BpQ,EAA2BvC,EAAe2C,GAClE,IAAIoE,EAAkB2L,EAEtB,QAAcr5B,IAAV2mB,QAAkC3mB,IAAXspB,EAAsB,CAC/C,MAAMiQ,EAAYrQ,GAAU2N,GAAe3N,GAC3C,GAAKqQ,EAGE,CACL,MAAM5O,EAAO4O,EAAUZ,wBACjBa,EAAiBnC,GAAiBkC,GAClCE,EAAkB/B,GAAmB8B,EAAgB,SAAU,SAC/DE,EAAmBhC,GAAmB8B,EAAgB,WAC5D7S,EAAQgE,EAAKhE,MAAQ+S,EAAiB/S,MAAQ8S,EAAgB9S,MAC9D2C,EAASqB,EAAKrB,OAASoQ,EAAiBpQ,OAASmQ,EAAgBnQ,OACjEoE,EAAWuJ,GAAcuC,EAAe9L,SAAU6L,EAAW,eAC7DF,EAAYpC,GAAcuC,EAAeH,UAAWE,EAAW,qBAV/D5S,EAAQuC,EAAOyQ,YACfrQ,EAASJ,EAAO0Q,aAYpB,MAAO,CACLjT,QACA2C,SACAoE,SAAUA,GAAYtY,GACtBikB,UAAWA,GAAajkB,GAE5B,CAewBykB,CAAiB3Q,EAAQ+P,EAASC,GACxD,IAAI,MAACvS,EAAA,OAAO2C,GAAUgQ,EAEtB,GAAwB,gBAApBtX,EAAMkW,UAA6B,CACrC,MAAME,EAAUV,GAAmB1V,EAAO,SAAU,SAC9CmW,EAAWT,GAAmB1V,EAAO,WAC3C2E,GAASwR,EAASxR,MAAQyR,EAAQzR,MAClC2C,GAAU6O,EAAS7O,OAAS8O,EAAQ9O,OAEtC3C,EAAQxoB,KAAKC,IAAI,EAAGuoB,EAAQyS,EAAQzS,OACpC2C,EAASnrB,KAAKC,IAAI,EAAG+6B,EAAcxS,EAAQwS,EAAc7P,EAAS8P,EAAQ9P,QAC1E3C,EAAQoS,GAAO56B,KAAKE,IAAIsoB,EAAO+G,EAAU4L,EAAc5L,WACvDpE,EAASyP,GAAO56B,KAAKE,IAAIirB,EAAQ+P,EAAWC,EAAcD,YACtD1S,IAAU2C,IAGZA,EAASyP,GAAOpS,EAAQ,IAU1B,YAPmC3mB,IAAZi5B,QAAsCj5B,IAAbk5B,IAE1BC,GAAeG,EAAchQ,QAAUA,EAASgQ,EAAchQ,SAClFA,EAASgQ,EAAchQ,OACvB3C,EAAQoS,GAAO56B,KAAKgY,MAAMmT,EAAS6P,KAG9B,CAACxS,QAAO2C,SACjB,CAQO,SAASwQ,GACdja,EACAka,EACAC,GAEA,MAAMC,EAAaF,GAAc,EAC3BG,EAAe/7B,KAAKgY,MAAM0J,EAAMyJ,OAAS2Q,GACzCE,EAAch8B,KAAKgY,MAAM0J,EAAM8G,MAAQsT,GAE7Cpa,EAAMyJ,OAASnrB,KAAKgY,MAAM0J,EAAMyJ,QAChCzJ,EAAM8G,MAAQxoB,KAAKgY,MAAM0J,EAAM8G,OAE/B,MAAMuC,EAASrJ,EAAMqJ,OAUrB,OALIA,EAAOlH,QAAUgY,IAAgB9Q,EAAOlH,MAAMsH,SAAWJ,EAAOlH,MAAM2E,SACxEuC,EAAOlH,MAAMsH,OAAU,GAAEzJ,EAAMyJ,WAC/BJ,EAAOlH,MAAM2E,MAAS,GAAE9G,EAAM8G,YAG5B9G,EAAMkJ,0BAA4BkR,GAC/B/Q,EAAOI,SAAW4Q,GAClBhR,EAAOvC,QAAUwT,KACtBta,EAAMkJ,wBAA0BkR,EAChC/Q,EAAOI,OAAS4Q,EAChBhR,EAAOvC,MAAQwT,EACfta,EAAMuC,IAAIgY,aAAaH,EAAY,EAAG,EAAGA,EAAY,EAAG,IACjD,EAGX,CAOa,MAAAI,GAAgC,WAC3C,IAAIC,GAAmB,EACvB,IACE,MAAMlnB,EAAU,CACVmnB,cAEF,OADAD,GAAmB,GACZ,CACT,GAGE3D,OACF5c,OAAOygB,iBAAiB,OAAQ,KAAMpnB,GACtC2G,OAAO0gB,oBAAoB,OAAQ,KAAMrnB,IAE3C,MAAO/T,IAGT,OAAOi7B,CACT,CAlB6C,GA8BtC,SAASI,GACdpD,EACA7gB,GAEA,MAAM7F,EAzOD,SAAkB+pB,EAAiBlkB,GACxC,OAAO4gB,GAAiBsD,GAAIC,iBAAiBnkB,EAC/C,CAuOgBokB,CAASvD,EAAS7gB,GAC1B2X,EAAUxd,GAASA,EAAMyd,MAAM,qBACrC,OAAOD,GAAWA,EAAQ,QAAKpuB,CACjC,CC9RO,SAAS86B,GAAar5B,EAAWC,EAAWgO,EAAW+S,GAC5D,MAAO,CACL5gB,EAAGJ,EAAGI,EAAI6N,GAAKhO,EAAGG,EAAIJ,EAAGI,GACzBmS,EAAGvS,EAAGuS,EAAItE,GAAKhO,EAAGsS,EAAIvS,EAAGuS,GAE7B,CAKO,SAAS+mB,GACdt5B,EACAC,EACAgO,EAAW+S,GAEX,MAAO,CACL5gB,EAAGJ,EAAGI,EAAI6N,GAAKhO,EAAGG,EAAIJ,EAAGI,GACzBmS,EAAY,WAATyO,EAAoB/S,EAAI,GAAMjO,EAAGuS,EAAItS,EAAGsS,EAC9B,UAATyO,EAAmB/S,EAAI,EAAIjO,EAAGuS,EAAItS,EAAGsS,EACnCtE,EAAI,EAAIhO,EAAGsS,EAAIvS,EAAGuS,EAE5B,CAKO,SAASgnB,GAAqBv5B,EAAiBC,EAAiBgO,EAAW+S,GAChF,MAAMwY,EAAM,CAACp5B,EAAGJ,EAAGmqB,KAAM5X,EAAGvS,EAAGqqB,MACzBoP,EAAM,CAACr5B,EAAGH,EAAGiqB,KAAM3X,EAAGtS,EAAGmqB,MACzB5sB,EAAI67B,GAAar5B,EAAIw5B,EAAKvrB,GAC1BxQ,EAAI47B,GAAaG,EAAKC,EAAKxrB,GAC3BvQ,EAAI27B,GAAaI,EAAKx5B,EAAIgO,GAC1BtQ,EAAI07B,GAAa77B,EAAGC,EAAGwQ,GACvBrQ,EAAIy7B,GAAa57B,EAAGC,EAAGuQ,GAC7B,OAAOorB,GAAa17B,EAAGC,EAAGqQ,EAC5B,CCUO,SAASyrB,GAAcC,EAAcC,EAAe1U,GACzD,OAAOyU,EA3CqB,SAASC,EAAe1U,GACpD,MAAO,CACL9kB,EAAEA,GACOw5B,EAAQA,EAAQ1U,EAAQ9kB,EAEjCy5B,SAAS56B,GACPimB,EAAQjmB,CACV,EACAyrB,UAAU5R,GACM,WAAVA,EACKA,EAEQ,UAAVA,EAAoB,OAAS,QAEtCghB,MAAMA,CAAA15B,EAAG+O,IACA/O,EAAI+O,EAEb4qB,WAAWA,CAAA35B,EAAG45B,IACL55B,EAAI45B,EAGjB,CAsBeC,CAAsBL,EAAO1U,GAnBnC,CACL9kB,EAAEA,GACOA,EAETy5B,SAAS56B,GAAI,EAEbyrB,UAAU5R,GACDA,EAETghB,MAAMA,CAAA15B,EAAG+O,IACA/O,EAAI+O,EAEb4qB,WAAWA,CAAA35B,EAAG85B,IACL95B,EAOb,CAEO,SAAS+5B,GAAsBxZ,EAA+ByZ,GACnE,IAAI7Z,EAA4B8Z,EACd,QAAdD,GAAqC,QAAdA,IACzB7Z,EAAQI,EAAI8G,OAAOlH,MACnB8Z,EAAW,CACT9Z,EAAM4Y,iBAAiB,aACvB5Y,EAAM+Z,oBAAoB,cAG5B/Z,EAAMga,YAAY,YAAaH,EAAW,aACzCzZ,EAAiD6Z,kBAAoBH,EAE1E,CAEO,SAASI,GAAqB9Z,EAA+B0Z,QACjD97B,IAAb87B,WACM1Z,EAAiD6Z,kBACzD7Z,EAAI8G,OAAOlH,MAAMga,YAAY,YAAaF,EAAS,GAAIA,EAAS,IAEpE,CC/DA,SAASK,GAAW1lB,GAClB,MAAiB,UAAbA,EACK,CACL2lB,QAAStkB,GACTukB,QAASzkB,GACT0kB,UAAWzkB,IAGR,CACLukB,QAAS7jB,GACT8jB,QAASA,CAACp9B,EAAGC,IAAMD,EAAIC,EACvBo9B,UAAWz6B,GAAKA,EAEpB,CAEA,SAAS06B,GAAiBC,GAAkC,IAAlC,MAACzkB,EAAK,IAAEC,EAAG,MAAE8C,EAAK,KAAE8J,EAAI,MAAE5C,GAAMwa,EACxD,MAAO,CACLzkB,MAAOA,EAAQ+C,EACf9C,IAAKA,EAAM8C,EACX8J,KAAMA,IAAS5M,EAAMD,EAAQ,GAAK+C,IAAU,EAC5CkH,QAEJ,CA4CO,SAASya,GAAcC,EAAS/hB,EAAQkL,GAC7C,IAAKA,EACH,MAAO,CAAC6W,GAGV,MAAM,SAACjmB,EAAUsB,MAAO4kB,EAAY3kB,IAAK4kB,GAAY/W,EAC/C/K,EAAQH,EAAOpa,QACf,QAAC87B,EAAA,QAASD,EAAA,UAASE,GAAaH,GAAW1lB,IAC3C,MAACsB,EAAA,IAAOC,EAAA,KAAK4M,EAAA,MAAM5C,GAlD3B,SAAoB0a,EAAS/hB,EAAQkL,GACnC,MAAM,SAACpP,EAAUsB,MAAO4kB,EAAY3kB,IAAK4kB,GAAY/W,GAC/C,QAACuW,EAAO,UAAEE,GAAaH,GAAW1lB,GAClCqE,EAAQH,EAAOpa,OAErB,IACIK,EAAG2R,GADH,MAACwF,EAAK,IAAEC,EAAA,KAAK4M,GAAQ8X,EAGzB,GAAI9X,EAAM,CAGR,IAFA7M,GAAS+C,EACT9C,GAAO8C,EACFla,EAAI,EAAG2R,EAAOuI,EAAOla,EAAI2R,GACvB6pB,EAAQE,EAAU3hB,EAAO5C,EAAQ+C,GAAOrE,IAAYkmB,EAAYC,KADjCh8B,EAIpCmX,IACAC,IAEFD,GAAS+C,EACT9C,GAAO8C,EAMT,OAHI9C,EAAMD,IACRC,GAAO8C,GAEF,CAAC/C,QAAOC,MAAK4M,OAAM5C,MAAO0a,EAAQ1a,MAC3C,CAwBoC6a,CAAWH,EAAS/hB,EAAQkL,GAExDgS,EAAS,GACf,IAEIjnB,EAAOoa,EAAO8R,EAFdC,GAAS,EACTC,EAAW,KAGf,MAEMC,EAAcA,IAAMF,GAFEX,EAAQO,EAAYG,EAAWlsB,IAA6C,IAAnCyrB,EAAQM,EAAYG,GAGnFI,EAAaA,KAAOH,GAF6B,IAA7BV,EAAQO,EAAUhsB,IAAgBwrB,EAAQQ,EAAUE,EAAWlsB,GAIzF,IAAK,IAAIhQ,EAAImX,EAAOse,EAAOte,EAAOnX,GAAKoX,IAAOpX,EAC5CoqB,EAAQrQ,EAAO/Z,EAAIka,GAEfkQ,EAAMiJ,OAIVrjB,EAAQ0rB,EAAUtR,EAAMvU,IAEpB7F,IAAUksB,IAIdC,EAASX,EAAQxrB,EAAO+rB,EAAYC,GAEnB,OAAbI,GAAqBC,MACvBD,EAA0C,IAA/BX,EAAQzrB,EAAO+rB,GAAoB/7B,EAAIy1B,GAGnC,OAAb2G,GAAqBE,MACvBrF,EAAOvjB,KAAKioB,GAAiB,CAACxkB,MAAOilB,EAAUhlB,IAAKpX,EAAGgkB,OAAM9J,QAAOkH,WACpEgb,EAAW,MAEb3G,EAAOz1B,EACPk8B,EAAYlsB,IAOd,OAJiB,OAAbosB,GACFnF,EAAOvjB,KAAKioB,GAAiB,CAACxkB,MAAOilB,EAAUhlB,MAAK4M,OAAM9J,QAAOkH,WAG5D6V,CACT,CAYO,SAASsF,GAAe7Q,EAAMzG,GACnC,MAAMgS,EAAS,GACTuF,EAAW9Q,EAAK8Q,SAEtB,IAAK,IAAIx8B,EAAI,EAAGA,EAAIw8B,EAAS78B,OAAQK,IAAK,CACxC,MAAMy8B,EAAMZ,GAAcW,EAASx8B,GAAI0rB,EAAK3R,OAAQkL,GAChDwX,EAAI98B,QACNs3B,EAAOvjB,QAAQ+oB,EAEnB,CACA,OAAOxF,CACT,CAiHA,SAASyF,GAAchR,EAAM8Q,EAAUziB,EAAQ4iB,GAC7C,OAAKA,GAAmBA,EAAe7L,YAAe/W,EAaxD,SAAyB2R,EAAM8Q,EAAUziB,EAAQ4iB,GAC/C,MAAMC,EAAelR,EAAKmR,OAAOtU,aAC3BuU,EAAYC,GAAUrR,EAAKlZ,UAC1BwqB,cAAelrB,EAAcU,SAAS,SAAC6iB,IAAa3J,EACrDxR,EAAQH,EAAOpa,OACfs3B,EAAS,GACf,IAAIgG,EAAYH,EACZ3lB,EAAQqlB,EAAS,GAAGrlB,MACpBnX,EAAImX,EAER,SAAS+lB,EAAS39B,EAAGd,EAAGpB,EAAG8/B,GACzB,MAAMC,EAAM/H,GAAY,EAAI,EAC5B,GAAI91B,IAAMd,EAAV,CAKA,IADAc,GAAK2a,EACEH,EAAOxa,EAAI2a,GAAOmZ,MACvB9zB,GAAK69B,EAEP,KAAOrjB,EAAOtb,EAAIyb,GAAOmZ,MACvB50B,GAAK2+B,EAEH79B,EAAI2a,IAAUzb,EAAIyb,IACpB+c,EAAOvjB,KAAK,CAACyD,MAAO5X,EAAI2a,EAAO9C,IAAK3Y,EAAIyb,EAAO8J,KAAM3mB,EAAG+jB,MAAO+b,IAC/DF,EAAYE,EACZhmB,EAAQ1Y,EAAIyb,GAEhB,CAEA,IAAK,MAAM4hB,KAAWU,EAAU,CAC9BrlB,EAAQke,EAAWle,EAAQ2kB,EAAQ3kB,MACnC,IACIiK,EADAqU,EAAO1b,EAAO5C,EAAQ+C,GAE1B,IAAKla,EAAImX,EAAQ,EAAGnX,GAAK87B,EAAQ1kB,IAAKpX,IAAK,CACzC,MAAMk1B,EAAKnb,EAAO/Z,EAAIka,GACtBkH,EAAQ2b,GAAUJ,EAAe7L,WAAWnC,GAAciO,EAAc,CACtElvB,KAAM,UACN2vB,GAAI5H,EACJ50B,GAAIq0B,EACJoI,aAAct9B,EAAI,GAAKka,EACvBqjB,YAAav9B,EAAIka,EACjBpI,mBAEE0rB,GAAapc,EAAO6b,IACtBC,EAAS/lB,EAAOnX,EAAI,EAAG87B,EAAQ9X,KAAMiZ,GAEvCxH,EAAOP,EACP+H,EAAY7b,CACd,CACIjK,EAAQnX,EAAI,GACdk9B,EAAS/lB,EAAOnX,EAAI,EAAG87B,EAAQ9X,KAAMiZ,EAEzC,CAEA,OAAOhG,CACT,CAlESwG,CAAgB/R,EAAM8Q,EAAUziB,EAAQ4iB,GAFtCH,CAGX,CAmEA,SAASO,GAAUvqB,GACjB,MAAO,CACLiO,gBAAiBjO,EAAQiO,gBACzBid,eAAgBlrB,EAAQkrB,eACxBC,WAAYnrB,EAAQmrB,WACpBC,iBAAkBprB,EAAQorB,iBAC1BC,gBAAiBrrB,EAAQqrB,gBACzB5T,YAAazX,EAAQyX,YACrBvJ,YAAalO,EAAQkO,YAEzB,CAEA,SAAS8c,GAAapc,EAAO6b,GAC3B,IAAKA,EACH,OAAO,EAET,MAAMxV,EAAQ,GACRqW,EAAW,SAASzrB,EAAKrC,GAC7B,OAAK0N,GAAoB1N,IAGpByX,EAAM5H,SAAS7P,IAClByX,EAAM/T,KAAK1D,GAENyX,EAAMnV,QAAQtC,IALZA,CAMX,EACA,OAAOoO,KAAKC,UAAU+C,EAAO0c,KAAc1f,KAAKC,UAAU4e,EAAWa,EACvE,CChWO,MAAMC,GACXtwB,cACEK,KAAKkwB,SAAW,KAChBlwB,KAAKmwB,QAAU,IAAIlgB,IACnBjQ,KAAKowB,UAAW,EAChBpwB,KAAKqwB,eAAY/+B,CACnB,CAKAg/B,QAAQnf,EAAOof,EAAOC,EAAM5wB,GAC1B,MAAM6wB,EAAYF,EAAM1lB,UAAUjL,GAC5B8wB,EAAWH,EAAMva,SAEvBya,EAAU1lB,SAAQ5H,GAAMA,EAAG,CACzBgO,QACAwf,QAASJ,EAAMI,QACfD,WACAE,YAAanhC,KAAKE,IAAI6gC,EAAOD,EAAMlnB,MAAOqnB,MAE9C,CAKAG,WACM7wB,KAAKkwB,WAGTlwB,KAAKowB,UAAW,EAEhBpwB,KAAKkwB,SAAW9kB,GAAiB/I,KAAKgJ,QAAQ,KAC5CrL,KAAK8wB,UACL9wB,KAAKkwB,SAAW,KAEZlwB,KAAKowB,UACPpwB,KAAK6wB,cAGX,CAKAC,UAA2B,IAAnBN,EAAA5+B,UAAAC,OAAA,QAAAP,IAAAM,UAAA,GAAAA,UAAA,GAAOm/B,KAAKC,MACdC,EAAY,EAEhBjxB,KAAKmwB,QAAQplB,SAAQ,CAACwlB,EAAOpf,KAC3B,IAAKof,EAAMW,UAAYX,EAAMtlB,MAAMpZ,OACjC,OAEF,MAAMoZ,EAAQslB,EAAMtlB,MACpB,IAEI5E,EAFAnU,EAAI+Y,EAAMpZ,OAAS,EACnBs/B,GAAO,EAGX,KAAOj/B,GAAK,IAAKA,EACfmU,EAAO4E,EAAM/Y,GAETmU,EAAK+qB,SACH/qB,EAAKgrB,OAASd,EAAMva,WAGtBua,EAAMva,SAAW3P,EAAKgrB,QAExBhrB,EAAKirB,KAAKd,GACVW,GAAO,IAIPlmB,EAAM/Y,GAAK+Y,EAAMA,EAAMpZ,OAAS,GAChCoZ,EAAMsmB,OAINJ,IACFhgB,EAAMggB,OACNnxB,KAAKswB,QAAQnf,EAAOof,EAAOC,EAAM,aAG9BvlB,EAAMpZ,SACT0+B,EAAMW,SAAU,EAChBlxB,KAAKswB,QAAQnf,EAAOof,EAAOC,EAAM,YACjCD,EAAMI,SAAU,GAGlBM,GAAahmB,EAAMpZ,MAAM,IAG3BmO,KAAKqwB,UAAYG,EAEC,IAAdS,IACFjxB,KAAKowB,UAAW,EAEpB,CAKAoB,UAAUrgB,GACR,MAAMsgB,EAASzxB,KAAKmwB,QACpB,IAAII,EAAQkB,EAAOhhB,IAAIU,GAavB,OAZKof,IACHA,EAAQ,CACNW,SAAS,EACTP,SAAS,EACT1lB,MAAO,GACPJ,UAAW,CACT6mB,SAAU,GACVC,SAAU,KAGdF,EAAOvmB,IAAIiG,EAAOof,IAEbA,CACT,CAOAqB,OAAOzgB,EAAOmY,EAAOuI,GACnB7xB,KAAKwxB,UAAUrgB,GAAOtG,UAAUye,GAAO1jB,KAAKisB,EAC9C,CAOAvO,IAAInS,EAAOlG,GACJA,GAAUA,EAAMpZ,QAGrBmO,KAAKwxB,UAAUrgB,GAAOlG,MAAMrF,QAAQqF,EACtC,CAMA3E,IAAI6K,GACF,OAAOnR,KAAKwxB,UAAUrgB,GAAOlG,MAAMpZ,OAAS,CAC9C,CAMAwX,MAAM8H,GACJ,MAAMof,EAAQvwB,KAAKmwB,QAAQ1f,IAAIU,GAC1Bof,IAGLA,EAAMW,SAAU,EAChBX,EAAMlnB,MAAQ0nB,KAAKC,MACnBT,EAAMva,SAAWua,EAAMtlB,MAAM6mB,QAAO,CAACC,EAAKC,IAAQviC,KAAKC,IAAIqiC,EAAKC,EAAIC,YAAY,GAChFjyB,KAAK6wB,WACP,CAEAK,QAAQ/f,GACN,IAAKnR,KAAKowB,SACR,OAAO,EAET,MAAMG,EAAQvwB,KAAKmwB,QAAQ1f,IAAIU,GAC/B,SAAKof,GAAUA,EAAMW,SAAYX,EAAMtlB,MAAMpZ,OAI/C,CAMAqgC,KAAK/gB,GACH,MAAMof,EAAQvwB,KAAKmwB,QAAQ1f,IAAIU,GAC/B,IAAKof,IAAUA,EAAMtlB,MAAMpZ,OACzB,OAEF,MAAMoZ,EAAQslB,EAAMtlB,MACpB,IAAI/Y,EAAI+Y,EAAMpZ,OAAS,EAEvB,KAAOK,GAAK,IAAKA,EACf+Y,EAAM/Y,GAAGigC,SAEX5B,EAAMtlB,MAAQ,GACdjL,KAAKswB,QAAQnf,EAAOof,EAAOQ,KAAKC,MAAO,WACzC,CAMAoB,OAAOjhB,GACL,OAAOnR,KAAKmwB,QAAQ5M,OAAOpS,EAC7B,EAIF,IAAAkhB,GAA+B,IAAIpC,GCjNnC,MAAMxxB,GAAc,cACd6zB,GAAgB,CACpBC,QAAO,CAACzzB,EAAMF,EAAI4zB,IACTA,EAAS,GAAM5zB,EAAKE,EAO7B0B,MAAM1B,EAAMF,EAAI4zB,GACd,MAAMC,EAAKjyB,GAAa1B,GAAQL,IAC1BiC,EAAK+xB,EAAGtyB,OAASK,GAAa5B,GAAMH,IAC1C,OAAOiC,GAAMA,EAAGP,MACZO,EAAGH,IAAIkyB,EAAID,GAAQvhC,YACnB2N,CACN,EACA8zB,OAAM,CAAC5zB,EAAMF,EAAI4zB,IACR1zB,GAAQF,EAAKE,GAAQ0zB,GAIjB,MAAMG,GACnBhzB,YAAYizB,EAAKzuB,EAAQ6b,EAAMphB,GAC7B,MAAMi0B,EAAe1uB,EAAO6b,GAE5BphB,EAAK6hB,GAAQ,CAACmS,EAAIh0B,GAAIA,EAAIi0B,EAAcD,EAAI9zB,OAC5C,MAAMA,EAAO2hB,GAAQ,CAACmS,EAAI9zB,KAAM+zB,EAAcj0B,IAE9CoB,KAAKoxB,SAAU,EACfpxB,KAAK8yB,IAAMF,EAAIzvB,IAAMmvB,GAAcM,EAAIhzB,aAAed,GACtDkB,KAAK+yB,QAAUplB,GAAQilB,EAAI3c,SAAWtI,GAAQC,OAC9C5N,KAAKgzB,OAASvjC,KAAKgY,MAAMspB,KAAKC,OAAS4B,EAAI7c,OAAS,IACpD/V,KAAKiyB,UAAYjyB,KAAKqxB,OAAS5hC,KAAKgY,MAAMmrB,EAAI5c,UAC9ChW,KAAKizB,QAAUL,EAAI1c,KACnBlW,KAAKkzB,QAAU/uB,EACfnE,KAAKmzB,MAAQnT,EACbhgB,KAAKozB,MAAQt0B,EACbkB,KAAKqzB,IAAMz0B,EACXoB,KAAKszB,eAAYhiC,CACnB,CAEA8kB,SACE,OAAOpW,KAAKoxB,OACd,CAEAmC,OAAOX,EAAKh0B,EAAI4xB,GACd,GAAIxwB,KAAKoxB,QAAS,CAChBpxB,KAAKswB,SAAQ,GAEb,MAAMuC,EAAe7yB,KAAKkzB,QAAQlzB,KAAKmzB,OACjCK,EAAUhD,EAAOxwB,KAAKgzB,OACtBnhB,EAAS7R,KAAKiyB,UAAYuB,EAChCxzB,KAAKgzB,OAASxC,EACdxwB,KAAKiyB,UAAYxiC,KAAKgY,MAAMhY,KAAKC,IAAImiB,EAAQ+gB,EAAI5c,WACjDhW,KAAKqxB,QAAUmC,EACfxzB,KAAKizB,QAAUL,EAAI1c,KACnBlW,KAAKqzB,IAAM5S,GAAQ,CAACmS,EAAIh0B,GAAIA,EAAIi0B,EAAcD,EAAI9zB,OAClDkB,KAAKozB,MAAQ3S,GAAQ,CAACmS,EAAI9zB,KAAM+zB,EAAcj0B,IAElD,CAEAuzB,SACMnyB,KAAKoxB,UAEPpxB,KAAKsxB,KAAKP,KAAKC,OACfhxB,KAAKoxB,SAAU,EACfpxB,KAAKswB,SAAQ,GAEjB,CAEAgB,KAAKd,GACH,MAAMgD,EAAUhD,EAAOxwB,KAAKgzB,OACtBhd,EAAWhW,KAAKiyB,UAChBjS,EAAOhgB,KAAKmzB,MACZr0B,EAAOkB,KAAKozB,MACZld,EAAOlW,KAAKizB,MACZr0B,EAAKoB,KAAKqzB,IAChB,IAAIb,EAIJ,GAFAxyB,KAAKoxB,QAAUtyB,IAASF,IAAOsX,GAASsd,EAAUxd,IAE7ChW,KAAKoxB,QAGR,OAFApxB,KAAKkzB,QAAQlT,GAAQphB,OACrBoB,KAAKswB,SAAQ,GAIXkD,EAAU,EACZxzB,KAAKkzB,QAAQlT,GAAQlhB,GAIvB0zB,EAAUgB,EAAUxd,EAAY,EAChCwc,EAAStc,GAAQsc,EAAS,EAAI,EAAIA,EAASA,EAC3CA,EAASxyB,KAAK+yB,QAAQtjC,KAAKE,IAAI,EAAGF,KAAKC,IAAI,EAAG8iC,KAE9CxyB,KAAKkzB,QAAQlT,GAAQhgB,KAAK8yB,IAAIh0B,EAAMF,EAAI4zB,GAC1C,CAEAiB,OACE,MAAMC,EAAW1zB,KAAKszB,YAActzB,KAAKszB,UAAY,IACrD,OAAO,IAAIK,SAAQ,CAACC,EAAKC,KACvBH,EAAS9tB,KAAK,CAACguB,MAAKC,OAAK,GAE7B,CAEAvD,QAAQwD,GACN,MAAMC,EAASD,EAAW,MAAQ,MAC5BJ,EAAW1zB,KAAKszB,WAAa,GACnC,IAAK,IAAIphC,EAAI,EAAGA,EAAIwhC,EAAS7hC,OAAQK,IACnCwhC,EAASxhC,GAAG6hC,IAEhB,EChHa,MAAMC,GACnBr0B,YAAYwR,EAAO8iB,GACjBj0B,KAAK+uB,OAAS5d,EACdnR,KAAKk0B,YAAc,IAAIjkB,IACvBjQ,KAAKm0B,UAAUF,EACjB,CAEAE,UAAUF,GACR,IAAK1xB,EAAS0xB,GACZ,OAGF,MAAMG,EAAmBn2B,OAAOD,KAAK0X,GAAShD,WACxC2hB,EAAgBr0B,KAAKk0B,YAE3Bj2B,OAAOq2B,oBAAoBL,GAAQlpB,SAAQxG,IACzC,MAAMquB,EAAMqB,EAAO1vB,GACnB,IAAKhC,EAASqwB,GACZ,OAEF,MAAMkB,EAAW,CAAC,EAClB,IAAK,MAAMS,KAAUH,EACnBN,EAASS,GAAU3B,EAAI2B,IAGxBhiC,EAAQqgC,EAAIzc,aAAeyc,EAAIzc,YAAc,CAAC5R,IAAMwG,SAASiV,IACxDA,IAASzb,GAAQ8vB,EAAc/tB,IAAI0Z,IACrCqU,EAAcnpB,IAAI8U,EAAM8T,KAE1B,GAEN,CAMAU,gBAAgBrwB,EAAQ4M,GACtB,MAAM0jB,EAAa1jB,EAAOrM,QACpBA,EAsGV,SAA8BP,EAAQswB,GACpC,IAAKA,EACH,OAEF,IAAI/vB,EAAUP,EAAOO,QACrB,IAAKA,EAEH,YADAP,EAAOO,QAAU+vB,GAGf/vB,EAAQgwB,UAGVvwB,EAAOO,QAAUA,EAAUzG,OAAOmB,OAAO,CAAC,EAAGsF,EAAS,CAACgwB,SAAS,EAAOC,YAAa,CAAC,KAEvF,OAAOjwB,CACT,CArHoBkwB,CAAqBzwB,EAAQswB,GAC7C,IAAK/vB,EACH,MAAO,GAGT,MAAM6R,EAAavW,KAAK60B,kBAAkBnwB,EAAS+vB,GAYnD,OAXIA,EAAWC,SAmFnB,SAAkBne,EAAYJ,GAC5B,MAAM+a,EAAU,GACVlzB,EAAOC,OAAOD,KAAKmY,GACzB,IAAK,IAAIjkB,EAAI,EAAGA,EAAI8L,EAAKnM,OAAQK,IAAK,CACpC,MAAM4iC,EAAOve,EAAWvY,EAAK9L,IACzB4iC,GAAQA,EAAK1e,UACf8a,EAAQtrB,KAAKkvB,EAAKrB,OAEtB,CAEA,OAAOE,QAAQoB,IAAI7D,EACrB,CA1FM8D,CAAS7wB,EAAOO,QAAQiwB,YAAaF,GAAYQ,MAAK,KACpD9wB,EAAOO,QAAU+vB,CAAA,IAChB,SAKEle,CACT,CAKAse,kBAAkB1wB,EAAQ4M,GACxB,MAAMsjB,EAAgBr0B,KAAKk0B,YACrB3d,EAAa,GACb2a,EAAU/sB,EAAOwwB,cAAgBxwB,EAAOwwB,YAAc,CAAC,GACvD9U,EAAQ5hB,OAAOD,KAAK+S,GACpByf,EAAOO,KAAKC,MAClB,IAAI9+B,EAEJ,IAAKA,EAAI2tB,EAAMhuB,OAAS,EAAGK,GAAK,IAAKA,EAAG,CACtC,MAAM8tB,EAAOH,EAAM3tB,GACnB,GAAuB,MAAnB8tB,EAAKxgB,OAAO,GACd,SAGF,GAAa,YAATwgB,EAAoB,CACtBzJ,EAAW3Q,QAAQ5F,KAAKw0B,gBAAgBrwB,EAAQ4M,IAChD,SAEF,MAAM7O,EAAQ6O,EAAOiP,GACrB,IAAItN,EAAYwe,EAAQlR,GACxB,MAAM4S,EAAMyB,EAAc5jB,IAAIuP,GAE9B,GAAItN,EAAW,CACb,GAAIkgB,GAAOlgB,EAAU0D,SAAU,CAE7B1D,EAAU6gB,OAAOX,EAAK1wB,EAAOsuB,GAC7B,SAEA9d,EAAUyf,SAGTS,GAAQA,EAAI5c,UAMjBkb,EAAQlR,GAAQtN,EAAY,IAAIigB,GAAUC,EAAKzuB,EAAQ6b,EAAM9d,GAC7DqU,EAAW3Q,KAAK8M,IALdvO,EAAO6b,GAAQ9d,CAMnB,CACA,OAAOqU,CACT,CASAgd,OAAOpvB,EAAQ4M,GACb,GAA8B,IAA1B/Q,KAAKk0B,YAAY9tB,KAGnB,YADAnI,OAAOmB,OAAO+E,EAAQ4M,GAIxB,MAAMwF,EAAavW,KAAK60B,kBAAkB1wB,EAAQ4M,GAElD,OAAIwF,EAAW1kB,QACbwgC,GAAS/O,IAAItjB,KAAK+uB,OAAQxY,IACnB,QAFT,CAIF,ECvHF,SAAS2e,GAAU1gB,EAAO2gB,GACxB,MAAM7X,EAAO9I,GAASA,EAAM9P,SAAW,CAAC,EAClCjB,EAAU6Z,EAAK7Z,QACf9T,OAAmB2B,IAAbgsB,EAAK3tB,IAAoBwlC,EAAkB,EACjDzlC,OAAmB4B,IAAbgsB,EAAK5tB,IAAoBylC,EAAkB,EACvD,MAAO,CACL9rB,MAAO5F,EAAU/T,EAAMC,EACvB2Z,IAAK7F,EAAU9T,EAAMD,EAEzB,CAsCA,SAAS0lC,GAAwBjkB,EAAOkkB,GACtC,MAAMr3B,EAAO,GACPs3B,EAAWnkB,EAAMokB,uBAAuBF,GAC9C,IAAInjC,EAAG2R,EAEP,IAAK3R,EAAI,EAAG2R,EAAOyxB,EAASzjC,OAAQK,EAAI2R,IAAQ3R,EAC9C8L,EAAK4H,KAAK0vB,EAASpjC,GAAG+R,OAExB,OAAOjG,CACT,CAEA,SAASw3B,GAAWC,EAAOvzB,EAAOwzB,GAAuB,IAAdhxB,EAAA9S,UAAAC,OAAA,QAAAP,IAAAM,UAAA,GAAAA,UAAA,GAAU,CAAC,EACpD,MAAMoM,EAAOy3B,EAAMz3B,KACb23B,EAA8B,WAAjBjxB,EAAQqP,KAC3B,IAAI7hB,EAAG2R,EAAMG,EAAc4xB,EAE3B,GAAc,OAAV1zB,EAAJ,CAIA,IAAKhQ,EAAI,EAAG2R,EAAO7F,EAAKnM,OAAQK,EAAI2R,IAAQ3R,EAAG,CAE7C,GADA8R,GAAgBhG,EAAK9L,GACjB8R,IAAiB0xB,EAAS,CAC5B,GAAIhxB,EAAQqwB,IACV,SAEF,MAEFa,EAAaH,EAAM1kB,OAAO/M,GACtBxB,EAASozB,KAAgBD,GAAyB,IAAVzzB,GAAe+E,GAAK/E,KAAW+E,GAAK2uB,MAC9E1zB,GAAS0zB,EAEb,CACA,OAAO1zB,EACT,CAmBA,SAAS2zB,GAAUrhB,EAAOxI,GACxB,MAAM8pB,EAAUthB,GAASA,EAAM9P,QAAQoxB,QACvC,OAAOA,QAAwBxkC,IAAZwkC,QAAwCxkC,IAAf0a,EAAKypB,KACnD,CAcA,SAASM,GAAiBC,EAAQC,EAAUC,GAC1C,MAAMC,EAAWH,EAAOC,KAAcD,EAAOC,GAAY,CAAC,GAC1D,OAAOE,EAASD,KAAgBC,EAASD,GAAc,CAAC,EAC1D,CAEA,SAASE,GAAoBX,EAAOY,EAAQC,EAAU12B,GACpD,IAAK,MAAMoM,KAAQqqB,EAAOE,wBAAwB32B,GAAM6D,UAAW,CACjE,MAAMvB,EAAQuzB,EAAMzpB,EAAK/H,OACzB,GAAIqyB,GAAap0B,EAAQ,IAAQo0B,GAAYp0B,EAAQ,EACnD,OAAO8J,EAAK/H,KAEhB,CAEA,OAAO,IACT,CAEA,SAASuyB,GAAaC,EAAYtR,GAChC,MAAM,MAAChU,EAAOulB,YAAa1qB,GAAQyqB,EAC7BT,EAAS7kB,EAAMwlB,UAAYxlB,EAAMwlB,QAAU,CAAC,IAC5C,OAACrqB,EAAA,OAAQ+pB,EAAQpyB,MAAOD,GAAgBgI,EACxC4qB,EAAQtqB,EAAOE,KACfqqB,EAAQR,EAAO7pB,KACfjI,EAlCR,SAAqBuyB,EAAYC,EAAY/qB,GAC3C,MAAQ,GAAE8qB,EAAW90B,MAAM+0B,EAAW/0B,MAAMgK,EAAKypB,OAASzpB,EAAKpM,MACjE,CAgCco3B,CAAY1qB,EAAQ+pB,EAAQrqB,GAClCnI,EAAOshB,EAAOtzB,OACpB,IAAI4jC,EAEJ,IAAK,IAAIvjC,EAAI,EAAGA,EAAI2R,IAAQ3R,EAAG,CAC7B,MAAMmU,EAAO8e,EAAOjzB,IACb,CAAC0kC,GAAQ3yB,EAAO,CAAC4yB,GAAQ30B,GAASmE,EAEzCovB,GADmBpvB,EAAKswB,UAAYtwB,EAAKswB,QAAU,CAAC,IACjCE,GAASd,GAAiBC,EAAQzxB,EAAKN,GAC1DwxB,EAAMzxB,GAAgB9B,EAEtBuzB,EAAMwB,KAAOb,GAAoBX,EAAOY,GAAQ,EAAMrqB,EAAKpM,MAC3D61B,EAAMyB,QAAUd,GAAoBX,EAAOY,GAAQ,EAAOrqB,EAAKpM,OAE1C61B,EAAM0B,gBAAkB1B,EAAM0B,cAAgB,CAAC,IACvDnzB,GAAgB9B,CAC/B,CACF,CAEA,SAASk1B,GAAgBjmB,EAAO3E,GAC9B,MAAMiI,EAAStD,EAAMsD,OACrB,OAAOxW,OAAOD,KAAKyW,GAAQoP,QAAOtf,GAAOkQ,EAAOlQ,GAAKiI,OAASA,IAAM6qB,OACtE,CA4BA,SAASC,GAAYtrB,EAAMf,GAEzB,MAAMjH,EAAegI,EAAKyqB,WAAWxyB,MAC/BuI,EAAOR,EAAKqqB,QAAUrqB,EAAKqqB,OAAO7pB,KACxC,GAAKA,EAAL,CAIAvB,EAAQA,GAASe,EAAKO,QACtB,IAAK,MAAM4Y,KAAUla,EAAO,CAC1B,MAAM+qB,EAAS7Q,EAAOwR,QACtB,IAAKX,QAA2B1kC,IAAjB0kC,EAAOxpB,SAAsDlb,IAA/B0kC,EAAOxpB,GAAMxI,GACxD,cAEKgyB,EAAOxpB,GAAMxI,QACe1S,IAA/B0kC,EAAOxpB,GAAM2qB,oBAA4E7lC,IAA7C0kC,EAAOxpB,GAAM2qB,cAAcnzB,WAClEgyB,EAAOxpB,GAAM2qB,cAAcnzB,EAEtC,EACF,CAEA,MAAMuzB,GAAsBxjB,GAAkB,UAATA,GAA6B,SAATA,EACnDyjB,GAAmBA,CAACC,EAAQC,IAAWA,EAASD,EAASx5B,OAAOmB,OAAO,CAAC,EAAGq4B,GAIlE,MAAME,GAKnBC,gBAAkB,GAKlBA,0BAA4B,KAK5BA,uBAAyB,KAMzBj4B,YAAYwR,EAAOnN,GACjBhE,KAAKmR,MAAQA,EACbnR,KAAK4X,KAAOzG,EAAMuC,IAClB1T,KAAKiE,MAAQD,EACbhE,KAAK63B,gBAAkB,CAAC,EACxB73B,KAAK02B,YAAc12B,KAAK83B,UACxB93B,KAAK+3B,MAAQ/3B,KAAK02B,YAAY92B,KAC9BI,KAAK0E,aAAUpT,EAEf0O,KAAKklB,UAAW,EAChBllB,KAAKg4B,WAAQ1mC,EACb0O,KAAKi4B,iBAAc3mC,EACnB0O,KAAKk4B,oBAAiB5mC,EACtB0O,KAAKm4B,gBAAa7mC,EAClB0O,KAAKo4B,gBAAa9mC,EAClB0O,KAAKq4B,qBAAsB,EAC3Br4B,KAAKs4B,oBAAqB,EAC1Bt4B,KAAKu4B,cAAWjnC,EAChB0O,KAAKw4B,UAAY,GACjBx4B,KAAKy4B,8BAAgCA,mBACrCz4B,KAAK04B,2BAA6BA,gBAElC14B,KAAK24B,YACP,CAEAA,aACE,MAAM3sB,EAAOhM,KAAK02B,YAClB12B,KAAKm0B,YACLn0B,KAAK44B,aACL5sB,EAAK6sB,SAAWhD,GAAU7pB,EAAKqqB,OAAQrqB,GACvChM,KAAK84B,cAED94B,KAAK0E,QAAQwX,OAASlc,KAAKmR,MAAM4nB,gBAAgB,WACnDzY,QAAQC,KAAK,qKAEjB,CAEAyY,YAAYh1B,GACNhE,KAAKiE,QAAUD,GACjBszB,GAAYt3B,KAAK02B,aAEnB12B,KAAKiE,MAAQD,CACf,CAEA40B,aACE,MAAMznB,EAAQnR,KAAKmR,MACbnF,EAAOhM,KAAK02B,YACZuC,EAAUj5B,KAAKk5B,aAEfC,EAAWA,CAAC3sB,EAAMrZ,EAAGmS,EAAGpU,IAAe,MAATsb,EAAerZ,EAAa,MAATqZ,EAAetb,EAAIoU,EAEpE8zB,EAAMptB,EAAKqtB,QAAUx2B,EAAeo2B,EAAQI,QAASjC,GAAgBjmB,EAAO,MAC5EmoB,EAAMttB,EAAKutB,QAAU12B,EAAeo2B,EAAQM,QAASnC,GAAgBjmB,EAAO,MAC5EqoB,EAAMxtB,EAAKytB,QAAU52B,EAAeo2B,EAAQQ,QAASrC,GAAgBjmB,EAAO,MAC5E0C,EAAY7H,EAAK6H,UACjB6lB,EAAM1tB,EAAK2tB,QAAUR,EAAStlB,EAAWulB,EAAKE,EAAKE,GACnDI,EAAM5tB,EAAK6tB,QAAUV,EAAStlB,EAAWylB,EAAKF,EAAKI,GACzDxtB,EAAKc,OAAS9M,KAAK85B,cAAcV,GACjCptB,EAAKe,OAAS/M,KAAK85B,cAAcR,GACjCttB,EAAK+tB,OAAS/5B,KAAK85B,cAAcN,GACjCxtB,EAAKM,OAAStM,KAAK85B,cAAcJ,GACjC1tB,EAAKqqB,OAASr2B,KAAK85B,cAAcF,EACnC,CAEAV,aACE,OAAOl5B,KAAKmR,MAAMgI,KAAKtG,SAAS7S,KAAKiE,MACvC,CAEA6zB,UACE,OAAO93B,KAAKmR,MAAM6oB,eAAeh6B,KAAKiE,MACxC,CAMA61B,cAAcG,GACZ,OAAOj6B,KAAKmR,MAAMsD,OAAOwlB,EAC3B,CAKAC,eAAe1lB,GACb,MAAMxI,EAAOhM,KAAK02B,YAClB,OAAOliB,IAAUxI,EAAKM,OAClBN,EAAKqqB,OACLrqB,EAAKM,MACX,CAEA6tB,QACEn6B,KAAK8wB,QAAQ,QACf,CAKAsJ,WACE,MAAMpuB,EAAOhM,KAAK02B,YACd12B,KAAKg4B,OACPvtB,GAAoBzK,KAAKg4B,MAAOh4B,MAE9BgM,EAAK6sB,UACPvB,GAAYtrB,EAEhB,CAKAquB,aACE,MAAMpB,EAAUj5B,KAAKk5B,aACf/f,EAAO8f,EAAQ9f,OAAS8f,EAAQ9f,KAAO,IACvC6e,EAAQh4B,KAAKg4B,MAMnB,GAAIz1B,EAAS4W,GAAO,CAClB,MAAMnN,EAAOhM,KAAK02B,YAClB12B,KAAKg4B,MAlRX,SAAkC7e,EAAMnN,GACtC,MAAM,OAACM,EAAA,OAAQ+pB,GAAUrqB,EACnBsuB,EAA2B,MAAhBhuB,EAAOE,KAAe,IAAM,IACvC+tB,EAA2B,MAAhBlE,EAAO7pB,KAAe,IAAM,IACvCxO,EAAOC,OAAOD,KAAKmb,GACnBqhB,EAAQ,IAAIloC,MAAM0L,EAAKnM,QAC7B,IAAIK,EAAG2R,EAAMU,EACb,IAAKrS,EAAI,EAAG2R,EAAO7F,EAAKnM,OAAQK,EAAI2R,IAAQ3R,EAC1CqS,EAAMvG,EAAK9L,GACXsoC,EAAMtoC,GAAK,CACT,CAACooC,GAAW/1B,EACZ,CAACg2B,GAAWphB,EAAK5U,IAGrB,OAAOi2B,CACT,CAmQmBC,CAAyBthB,EAAMnN,QACvC,GAAIgsB,IAAU7e,EAAM,CACzB,GAAI6e,EAAO,CAETvtB,GAAoButB,EAAOh4B,MAE3B,MAAMgM,EAAOhM,KAAK02B,YAClBY,GAAYtrB,GACZA,EAAKO,QAAU,GAEb4M,GAAQlb,OAAOy8B,aAAavhB,KrBvQGzO,EqBwQT1K,MrBxQE8H,EqBwQRqR,GrBvQdvO,SACR9C,EAAM8C,SAASC,UAAUjF,KAAK8E,IAIhCzM,OAAO08B,eAAe7yB,EAAO,WAAY,CACvCmc,cAAc,EACd1O,YAAY,EACZrT,MAAO,CACL2I,UAAW,CAACH,MAIhBF,GAAYO,SAASxG,IACnB,MAAMwvB,EAAS,UAAYhuB,GAAYxB,GACjCq2B,EAAO9yB,EAAMvD,GAEnBtG,OAAO08B,eAAe7yB,EAAOvD,EAAK,CAChC0f,cAAc,EACd1O,YAAY,EACZrT,QAAe,QAAA24B,EAAAjpC,UAAAC,OAANuR,EAAI,IAAA9Q,MAAAuoC,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ13B,EAAI03B,GAAAlpC,UAAAkpC,GACX,MAAMlH,EAAMgH,EAAKt3B,MAAMtD,KAAMoD,GAQ7B,OANA0E,EAAM8C,SAASC,UAAUE,SAASgwB,IACF,oBAAnBA,EAAOhH,IAChBgH,EAAOhH,MAAW3wB,MAIfwwB,CACT,GACA,MqB0OA5zB,KAAKw4B,UAAY,GACjBx4B,KAAKg4B,MAAQ7e,ErB3QZ,IAA2BrR,EAAO4C,CqB6QvC,CAEAouB,cACE,MAAM9sB,EAAOhM,KAAK02B,YAElB12B,KAAKq6B,aAEDr6B,KAAKy4B,qBACPzsB,EAAKitB,QAAU,IAAIj5B,KAAKy4B,mBAE5B,CAEAuC,sBAAsBC,GACpB,MAAMjvB,EAAOhM,KAAK02B,YACZuC,EAAUj5B,KAAKk5B,aACrB,IAAIgC,GAAe,EAEnBl7B,KAAKq6B,aAGL,MAAMc,EAAanvB,EAAK6sB,SACxB7sB,EAAK6sB,SAAWhD,GAAU7pB,EAAKqqB,OAAQrqB,GAGnCA,EAAKypB,QAAUwD,EAAQxD,QACzByF,GAAe,EAEf5D,GAAYtrB,GACZA,EAAKypB,MAAQwD,EAAQxD,OAKvBz1B,KAAKo7B,gBAAgBH,IAGjBC,GAAgBC,IAAenvB,EAAK6sB,WACtCrC,GAAax2B,KAAMgM,EAAKO,QAE5B,CAMA4nB,YACE,MAAMF,EAASj0B,KAAKmR,MAAM8iB,OACpBoH,EAAYpH,EAAOqH,iBAAiBt7B,KAAK+3B,OACzC/W,EAASiT,EAAOsH,gBAAgBv7B,KAAKk5B,aAAcmC,GAAW,GACpEr7B,KAAK0E,QAAUuvB,EAAOuH,eAAexa,EAAQhhB,KAAKya,cAClDza,KAAKklB,SAAWllB,KAAK0E,QAAQ2P,QAC7BrU,KAAK63B,gBAAkB,CAAC,CAC1B,CAMAzS,MAAM/b,EAAO+C,GACX,MAAOsqB,YAAa1qB,EAAMgsB,MAAO7e,GAAQnZ,MACnC,OAACsM,EAAA,SAAQusB,GAAY7sB,EACrB4qB,EAAQtqB,EAAOE,KAErB,IAEIta,EAAG8/B,EAAK7M,EAFRsW,EAAmB,IAAVpyB,GAAe+C,IAAU+M,EAAKtnB,QAAgBma,EAAKK,QAC5Dsb,EAAOte,EAAQ,GAAK2C,EAAKO,QAAQlD,EAAQ,GAG7C,IAAsB,IAAlBrJ,KAAKklB,SACPlZ,EAAKO,QAAU4M,EACfnN,EAAKK,SAAU,EACf8Y,EAAShM,MACJ,CAEHgM,EADE5yB,EAAQ4mB,EAAK9P,IACNrJ,KAAK07B,eAAe1vB,EAAMmN,EAAM9P,EAAO+C,GACvC7J,EAAS4W,EAAK9P,IACdrJ,KAAK27B,gBAAgB3vB,EAAMmN,EAAM9P,EAAO+C,GAExCpM,KAAK47B,mBAAmB5vB,EAAMmN,EAAM9P,EAAO+C,GAGtD,MAAMyvB,EAA6BA,IAAqB,OAAf7J,EAAI4E,IAAoBjP,GAAQqK,EAAI4E,GAASjP,EAAKiP,GAC3F,IAAK1kC,EAAI,EAAGA,EAAIka,IAASla,EACvB8Z,EAAKO,QAAQra,EAAImX,GAAS2oB,EAAM7M,EAAOjzB,GACnCupC,IACEI,MACFJ,GAAS,GAEX9T,EAAOqK,GAGXhmB,EAAKK,QAAUovB,EAGb5C,GACFrC,GAAax2B,KAAMmlB,EAEvB,CAaAyW,mBAAmB5vB,EAAMmN,EAAM9P,EAAO+C,GACpC,MAAM,OAACE,EAAA,OAAQ+pB,GAAUrqB,EACnB4qB,EAAQtqB,EAAOE,KACfqqB,EAAQR,EAAO7pB,KACfsvB,EAASxvB,EAAOyvB,YAChBC,EAAc1vB,IAAW+pB,EACzBlR,EAAS,IAAI7yB,MAAM8Z,GACzB,IAAIla,EAAG2R,EAAMI,EAEb,IAAK/R,EAAI,EAAG2R,EAAOuI,EAAOla,EAAI2R,IAAQ3R,EACpC+R,EAAQ/R,EAAImX,EACZ8b,EAAOjzB,GAAK,CACV,CAAC0kC,GAAQoF,GAAe1vB,EAAO8Y,MAAM0W,EAAO73B,GAAQA,GACpD,CAAC4yB,GAAQR,EAAOjR,MAAMjM,EAAKlV,GAAQA,IAGvC,OAAOkhB,CACT,CAaAuW,eAAe1vB,EAAMmN,EAAM9P,EAAO+C,GAChC,MAAM,OAACU,EAAA,OAAQC,GAAUf,EACnBmZ,EAAS,IAAI7yB,MAAM8Z,GACzB,IAAIla,EAAG2R,EAAMI,EAAOoC,EAEpB,IAAKnU,EAAI,EAAG2R,EAAOuI,EAAOla,EAAI2R,IAAQ3R,EACpC+R,EAAQ/R,EAAImX,EACZhD,EAAO8S,EAAKlV,GACZkhB,EAAOjzB,GAAK,CACViB,EAAG2Z,EAAOsY,MAAM/e,EAAK,GAAIpC,GACzBqB,EAAGyH,EAAOqY,MAAM/e,EAAK,GAAIpC,IAG7B,OAAOkhB,CACT,CAaAwW,gBAAgB3vB,EAAMmN,EAAM9P,EAAO+C,GACjC,MAAM,OAACU,EAAA,OAAQC,GAAUf,GACnB,SAACiwB,EAAW,aAAKC,EAAW,KAAOl8B,KAAKklB,SACxCC,EAAS,IAAI7yB,MAAM8Z,GACzB,IAAIla,EAAG2R,EAAMI,EAAOoC,EAEpB,IAAKnU,EAAI,EAAG2R,EAAOuI,EAAOla,EAAI2R,IAAQ3R,EACpC+R,EAAQ/R,EAAImX,EACZhD,EAAO8S,EAAKlV,GACZkhB,EAAOjzB,GAAK,CACViB,EAAG2Z,EAAOsY,MAAM7f,GAAiBc,EAAM41B,GAAWh4B,GAClDqB,EAAGyH,EAAOqY,MAAM7f,GAAiBc,EAAM61B,GAAWj4B,IAGtD,OAAOkhB,CACT,CAKAgX,UAAUl4B,GACR,OAAOjE,KAAK02B,YAAYnqB,QAAQtI,EAClC,CAKAm4B,eAAen4B,GACb,OAAOjE,KAAK02B,YAAYvd,KAAKlV,EAC/B,CAKAuxB,WAAWhhB,EAAO2Q,EAAQpR,GACxB,MAAM5C,EAAQnR,KAAKmR,MACbnF,EAAOhM,KAAK02B,YACZx0B,EAAQijB,EAAO3Q,EAAMhI,MAK3B,OAAOgpB,GAJO,CACZx3B,KAAMo3B,GAAwBjkB,GAAO,GACrCJ,OAAQoU,EAAOwR,QAAQniB,EAAMhI,MAAM2qB,eAEZj1B,EAAO8J,EAAK/H,MAAO,CAAC8P,QAC/C,CAKAsoB,sBAAsB/0B,EAAOkN,EAAO2Q,EAAQsQ,GAC1C,MAAM6G,EAAcnX,EAAO3Q,EAAMhI,MACjC,IAAItK,EAAwB,OAAhBo6B,EAAuBC,IAAMD,EACzC,MAAMvrB,EAAS0kB,GAAStQ,EAAOwR,QAAQniB,EAAMhI,MACzCipB,GAAS1kB,IACX0kB,EAAM1kB,OAASA,EACf7O,EAAQszB,GAAWC,EAAO6G,EAAat8B,KAAK02B,YAAYzyB,QAE1DqD,EAAM3X,IAAMF,KAAKE,IAAI2X,EAAM3X,IAAKuS,GAChCoF,EAAM5X,IAAMD,KAAKC,IAAI4X,EAAM5X,IAAKwS,EAClC,CAKAs6B,UAAUhoB,EAAOioB,GACf,MAAMzwB,EAAOhM,KAAK02B,YACZnqB,EAAUP,EAAKO,QACfkvB,EAASzvB,EAAKK,SAAWmI,IAAUxI,EAAKM,OACxCzI,EAAO0I,EAAQ1a,OACf6qC,EAAa18B,KAAKk6B,eAAe1lB,GACjCihB,EA5YUkH,EAACF,EAAUzwB,EAAMmF,IAAUsrB,IAAazwB,EAAK4wB,QAAU5wB,EAAK6sB,UAC3E,CAAC76B,KAAMo3B,GAAwBjkB,GAAO,GAAOJ,OAAQ,MA2YxC4rB,CAAYF,EAAUzwB,EAAMhM,KAAKmR,OACzC7J,EAAQ,CAAC3X,IAAK8S,OAAOkE,kBAAmBjX,IAAK+S,OAAOo6B,oBACnDltC,IAAKmtC,EAAUptC,IAAKqtC,GArf/B,SAAuBvoB,GACrB,MAAM,IAAC7kB,EAAG,IAAED,EAAG,WAAE+c,EAAU,WAAEC,GAAc8H,EAAM7H,gBACjD,MAAO,CACLhd,IAAK8c,EAAa9c,EAAM8S,OAAOo6B,kBAC/BntC,IAAKgd,EAAahd,EAAM+S,OAAOkE,kBAEnC,CA+e2CgG,CAAc+vB,GACrD,IAAIxqC,EAAGizB,EAEP,SAAS6X,IACP7X,EAAS5Y,EAAQra,GACjB,MAAM0jC,EAAazQ,EAAOuX,EAAWlwB,MACrC,OAAQhK,EAAS2iB,EAAO3Q,EAAMhI,QAAUswB,EAAWlH,GAAcmH,EAAWnH,CAC9E,CAEA,IAAK1jC,EAAI,EAAGA,EAAI2R,IACVm5B,MAGJh9B,KAAKq8B,sBAAsB/0B,EAAOkN,EAAO2Q,EAAQsQ,IAC7CgG,MALkBvpC,GAUxB,GAAIupC,EAEF,IAAKvpC,EAAI2R,EAAO,EAAG3R,GAAK,IAAKA,EAC3B,IAAI8qC,IAAJ,CAGAh9B,KAAKq8B,sBAAsB/0B,EAAOkN,EAAO2Q,EAAQsQ,GACjD,MAGJ,OAAOnuB,CACT,CAEA21B,mBAAmBzoB,GACjB,MAAM2Q,EAASnlB,KAAK02B,YAAYnqB,QAC1BwE,EAAS,GACf,IAAI7e,EAAG2R,EAAM3B,EAEb,IAAKhQ,EAAI,EAAG2R,EAAOshB,EAAOtzB,OAAQK,EAAI2R,IAAQ3R,EAC5CgQ,EAAQijB,EAAOjzB,GAAGsiB,EAAMhI,MACpBhK,EAASN,IACX6O,EAAOnL,KAAK1D,GAGhB,OAAO6O,CACT,CAMAmsB,iBACE,OAAO,CACT,CAKAC,iBAAiBl5B,GACf,MAAM+H,EAAOhM,KAAK02B,YACZpqB,EAASN,EAAKM,OACd+pB,EAASrqB,EAAKqqB,OACdlR,EAASnlB,KAAKm8B,UAAUl4B,GAC9B,MAAO,CACLm5B,MAAO9wB,EAAS,GAAKA,EAAO+wB,iBAAiBlY,EAAO7Y,EAAOE,OAAS,GACpEtK,MAAOm0B,EAAS,GAAKA,EAAOgH,iBAAiBlY,EAAOkR,EAAO7pB,OAAS,GAExE,CAKAskB,QAAQ/c,GACN,MAAM/H,EAAOhM,KAAK02B,YAClB12B,KAAKuzB,OAAOxf,GAAQ,WACpB/H,EAAKsxB,MAlpBT,SAAgBp7B,GACd,IAAIlB,EAAG9P,EAAGV,EAAGjB,EAWb,OATIgT,EAASL,IACXlB,EAAIkB,EAAM0U,IACV1lB,EAAIgR,EAAM2U,MACVrmB,EAAI0R,EAAM4U,OACVvnB,EAAI2S,EAAM6U,MAEV/V,EAAI9P,EAAIV,EAAIjB,EAAI2S,EAGX,CACL0U,IAAK5V,EACL6V,MAAO3lB,EACP4lB,OAAQtmB,EACRumB,KAAMxnB,EACNguC,UAAoB,IAAVr7B,EAEd,CA+nBiBs7B,CAAO36B,EAAe7C,KAAK0E,QAAQ0S,KAjqBpD,SAAqBtK,EAAQC,EAAQooB,GACnC,IAAwB,IAApBA,EACF,OAAO,EAET,MAAMhiC,EAAI+hC,GAAUpoB,EAAQqoB,GACtB7vB,EAAI4vB,GAAUnoB,EAAQooB,GAE5B,MAAO,CACLve,IAAKtR,EAAEgE,IACPuN,MAAO1jB,EAAEmW,IACTwN,OAAQxR,EAAE+D,MACV0N,KAAM5jB,EAAEkW,MAEZ,CAopB0Do0B,CAAYzxB,EAAKc,OAAQd,EAAKe,OAAQ/M,KAAKk9B,mBACnG,CAKA3J,OAAOxf,GAAO,CAEdod,OACE,MAAMzd,EAAM1T,KAAK4X,KACXzG,EAAQnR,KAAKmR,MACbnF,EAAOhM,KAAK02B,YACZxjB,EAAWlH,EAAKmN,MAAQ,GACxBoD,EAAOpL,EAAMusB,UACbtnB,EAAS,GACT/M,EAAQrJ,KAAKm4B,YAAc,EAC3B/rB,EAAQpM,KAAKo4B,YAAellB,EAASrhB,OAASwX,EAC9CsL,EAA0B3U,KAAK0E,QAAQiQ,wBAC7C,IAAIziB,EAMJ,IAJI8Z,EAAKitB,SACPjtB,EAAKitB,QAAQ9H,KAAKzd,EAAK6I,EAAMlT,EAAO+C,GAGjCla,EAAImX,EAAOnX,EAAImX,EAAQ+C,IAASla,EAAG,CACtC,MAAM02B,EAAU1V,EAAShhB,GACrB02B,EAAQgU,SAGRhU,EAAQxS,QAAUzB,EACpByB,EAAOxQ,KAAKgjB,GAEZA,EAAQuI,KAAKzd,EAAK6I,GAEtB,CAEA,IAAKrqB,EAAI,EAAGA,EAAIkkB,EAAOvkB,SAAUK,EAC/BkkB,EAAOlkB,GAAGi/B,KAAKzd,EAAK6I,EAExB,CASA4P,SAASloB,EAAOmS,GACd,MAAMrC,EAAOqC,EAAS,SAAW,UACjC,YAAiB9kB,IAAV2S,GAAuBjE,KAAK02B,YAAYuC,QAC3Cj5B,KAAK29B,6BAA6B5pB,GAClC/T,KAAK49B,0BAA0B35B,GAAS,EAAG8P,EACjD,CAKA0G,WAAWxW,EAAOmS,EAAQrC,GACxB,MAAMklB,EAAUj5B,KAAKk5B,aACrB,IAAInmB,EACJ,GAAI9O,GAAS,GAAKA,EAAQjE,KAAK02B,YAAYvd,KAAKtnB,OAAQ,CACtD,MAAM+2B,EAAU5oB,KAAK02B,YAAYvd,KAAKlV,GACtC8O,EAAU6V,EAAQ2P,WACf3P,EAAQ2P,SA5jBjB,SAA2B9T,EAAQxgB,EAAO2kB,GACxC,OAAO/H,GAAc4D,EAAQ,CAC3BrO,QAAQ,EACRynB,UAAW55B,EACXkhB,YAAQ7zB,EACRwsC,SAAKxsC,EACLs3B,UACA3kB,QACA8P,KAAM,UACNnU,KAAM,QAEV,CAijB4Bm+B,CAAkB/9B,KAAKya,aAAcxW,EAAO2kB,IAClE7V,EAAQoS,OAASnlB,KAAKm8B,UAAUl4B,GAChC8O,EAAQ+qB,IAAM7E,EAAQ9f,KAAKlV,GAC3B8O,EAAQ9O,MAAQ8O,EAAQ8qB,UAAY55B,OAEpC8O,EAAU/S,KAAKu4B,WACZv4B,KAAKu4B,SA/kBd,SAA8B9T,EAAQxgB,GACpC,OAAO4c,GAAc4D,EACnB,CACErO,QAAQ,EACR6iB,aAAS3nC,EACT0S,aAAcC,EACdA,QACA8P,KAAM,UACNnU,KAAM,WAGZ,CAokByBo+B,CAAqBh+B,KAAKmR,MAAMsJ,aAAcza,KAAKiE,QACtE8O,EAAQkmB,QAAUA,EAClBlmB,EAAQ9O,MAAQ8O,EAAQ/O,aAAehE,KAAKiE,MAK9C,OAFA8O,EAAQqD,SAAWA,EACnBrD,EAAQgB,KAAOA,EACRhB,CACT,CAMA4qB,6BAA6B5pB,GAC3B,OAAO/T,KAAKi+B,uBAAuBj+B,KAAKy4B,mBAAmBz2B,GAAI+R,EACjE,CAOA6pB,0BAA0B35B,EAAO8P,GAC/B,OAAO/T,KAAKi+B,uBAAuBj+B,KAAK04B,gBAAgB12B,GAAI+R,EAAM9P,EACpE,CAKAg6B,uBAAuBC,GAAsC,IAAzBnqB,EAAAniB,UAAAC,OAAA,QAAAP,IAAAM,UAAA,GAAAA,UAAA,GAAO,UAAWqS,EAAKrS,UAAAC,OAAA,EAAAD,UAAA,QAAAN,EACzD,MAAM8kB,EAAkB,WAATrC,EACT4F,EAAQ3Z,KAAK63B,gBACbxnB,EAAW6tB,EAAc,IAAMnqB,EAC/B0jB,EAAS9d,EAAMtJ,GACf8tB,EAAUn+B,KAAKq4B,qBAAuBpyB,GAAQhC,GACpD,GAAIwzB,EACF,OAAOD,GAAiBC,EAAQ0G,GAElC,MAAMlK,EAASj0B,KAAKmR,MAAM8iB,OACpBoH,EAAYpH,EAAOmK,wBAAwBp+B,KAAK+3B,MAAOmG,GACvDjd,EAAW7K,EAAS,CAAE,GAAE8nB,SAAoB,QAASA,EAAa,IAAM,CAACA,EAAa,IACtFld,EAASiT,EAAOsH,gBAAgBv7B,KAAKk5B,aAAcmC,GACnDx9B,EAAQI,OAAOD,KAAK0X,GAASxC,SAASgrB,IAItCntB,EAASkjB,EAAOoK,oBAAoBrd,EAAQnjB,GADlCkV,IAAM/S,KAAKya,WAAWxW,EAAOmS,EAAQrC,IACakN,GAalE,OAXIlQ,EAAO2jB,UAGT3jB,EAAO2jB,QAAUyJ,EAKjBxkB,EAAMtJ,GAAYpS,OAAOqgC,OAAO9G,GAAiBzmB,EAAQotB,KAGpDptB,CACT,CAMAwtB,mBAAmBt6B,EAAOu6B,EAAYpoB,GACpC,MAAMjF,EAAQnR,KAAKmR,MACbwI,EAAQ3Z,KAAK63B,gBACbxnB,EAAY,aAAYmuB,IACxB/G,EAAS9d,EAAMtJ,GACrB,GAAIonB,EACF,OAAOA,EAET,IAAI/yB,EACJ,IAAgC,IAA5ByM,EAAMzM,QAAQgO,UAAqB,CACrC,MAAMuhB,EAASj0B,KAAKmR,MAAM8iB,OACpBoH,EAAYpH,EAAOwK,0BAA0Bz+B,KAAK+3B,MAAOyG,GACzDxd,EAASiT,EAAOsH,gBAAgBv7B,KAAKk5B,aAAcmC,GACzD32B,EAAUuvB,EAAOuH,eAAexa,EAAQhhB,KAAKya,WAAWxW,EAAOmS,EAAQooB,IAEzE,MAAMjoB,EAAa,IAAIyd,GAAW7iB,EAAOzM,GAAWA,EAAQ6R,YAI5D,OAHI7R,GAAWA,EAAQ8c,aACrB7H,EAAMtJ,GAAYpS,OAAOqgC,OAAO/nB,IAE3BA,CACT,CAMAmoB,iBAAiBh6B,GACf,GAAKA,EAAQgwB,QAGb,OAAO10B,KAAKk4B,iBAAmBl4B,KAAKk4B,eAAiBj6B,OAAOmB,OAAO,CAAC,EAAGsF,GACzE,CAMAi6B,eAAe5qB,EAAM6qB,GACnB,OAAQA,GAAiBrH,GAAmBxjB,IAAS/T,KAAKmR,MAAM0tB,mBAClE,CAKAC,kBAAkBz1B,EAAO0K,GACvB,MAAMgrB,EAAY/+B,KAAK49B,0BAA0Bv0B,EAAO0K,GAClDirB,EAA0Bh/B,KAAKk4B,eAC/B0G,EAAgB5+B,KAAK0+B,iBAAiBK,GACtCJ,EAAiB3+B,KAAK2+B,eAAe5qB,EAAM6qB,IAAmBA,IAAkBI,EAEtF,OADAh/B,KAAKi/B,oBAAoBL,EAAe7qB,EAAMgrB,GACvC,CAACH,gBAAeD,iBACzB,CAMAO,cAActW,EAAS3kB,EAAOkS,EAAYpC,GACpCwjB,GAAmBxjB,GACrB9V,OAAOmB,OAAOwpB,EAASzS,GAEvBnW,KAAKu+B,mBAAmBt6B,EAAO8P,GAAMwf,OAAO3K,EAASzS,EAEzD,CAMA8oB,oBAAoBL,EAAe7qB,EAAM0gB,GACnCmK,IAAkBrH,GAAmBxjB,IACvC/T,KAAKu+B,wBAAmBjtC,EAAWyiB,GAAMwf,OAAOqL,EAAenK,EAEnE,CAKA0K,UAAUvW,EAAS3kB,EAAO8P,EAAMqC,GAC9BwS,EAAQxS,OAASA,EACjB,MAAM1R,EAAU1E,KAAKmsB,SAASloB,EAAOmS,GACrCpW,KAAKu+B,mBAAmBt6B,EAAO8P,EAAMqC,GAAQmd,OAAO3K,EAAS,CAG3DlkB,SAAW0R,GAAUpW,KAAK0+B,iBAAiBh6B,IAAaA,GAE5D,CAEA06B,iBAAiBxW,EAAS5kB,EAAcC,GACtCjE,KAAKm/B,UAAUvW,EAAS3kB,EAAO,UAAU,EAC3C,CAEAo7B,cAAczW,EAAS5kB,EAAcC,GACnCjE,KAAKm/B,UAAUvW,EAAS3kB,EAAO,UAAU,EAC3C,CAKAq7B,2BACE,MAAM1W,EAAU5oB,KAAK02B,YAAYuC,QAE7BrQ,GACF5oB,KAAKm/B,UAAUvW,OAASt3B,EAAW,UAAU,EAEjD,CAKAiuC,wBACE,MAAM3W,EAAU5oB,KAAK02B,YAAYuC,QAE7BrQ,GACF5oB,KAAKm/B,UAAUvW,OAASt3B,EAAW,UAAU,EAEjD,CAKA8pC,gBAAgBH,GACd,MAAM9hB,EAAOnZ,KAAKg4B,MACZ9kB,EAAWlT,KAAK02B,YAAYvd,KAGlC,IAAK,MAAO4a,EAAQyL,EAAMC,KAASz/B,KAAKw4B,UACtCx4B,KAAK+zB,GAAQyL,EAAMC,GAErBz/B,KAAKw4B,UAAY,GAEjB,MAAMkH,EAAUxsB,EAASrhB,OACnB8tC,EAAUxmB,EAAKtnB,OACfua,EAAQ3c,KAAKE,IAAIgwC,EAASD,GAE5BtzB,GAKFpM,KAAKolB,MAAM,EAAGhZ,GAGZuzB,EAAUD,EACZ1/B,KAAK4/B,gBAAgBF,EAASC,EAAUD,EAASzE,GACxC0E,EAAUD,GACnB1/B,KAAK6/B,gBAAgBF,EAASD,EAAUC,EAE5C,CAKAC,gBAAgBv2B,EAAO+C,GAAgC,IAAzB6uB,IAAArpC,UAAAC,OAAA,QAAAP,IAAAM,UAAA,KAAAA,UAAA,GAC5B,MAAMoa,EAAOhM,KAAK02B,YACZvd,EAAOnN,EAAKmN,KACZ7P,EAAMD,EAAQ+C,EACpB,IAAIla,EAEJ,MAAM4tC,EAAQlc,IAEZ,IADAA,EAAI/xB,QAAUua,EACTla,EAAI0xB,EAAI/xB,OAAS,EAAGK,GAAKoX,EAAKpX,IACjC0xB,EAAI1xB,GAAK0xB,EAAI1xB,EAAIka,EACnB,EAIF,IAFA0zB,EAAK3mB,GAEAjnB,EAAImX,EAAOnX,EAAIoX,IAAOpX,EACzBinB,EAAKjnB,GAAK,IAAI8N,KAAK04B,gBAGjB14B,KAAKklB,UACP4a,EAAK9zB,EAAKO,SAEZvM,KAAKolB,MAAM/b,EAAO+C,GAEd6uB,GACFj7B,KAAK+/B,eAAe5mB,EAAM9P,EAAO+C,EAAO,QAE5C,CAEA2zB,eAAenX,EAASvf,EAAO+C,EAAO2H,GAAO,CAK7C8rB,gBAAgBx2B,EAAO+C,GACrB,MAAMJ,EAAOhM,KAAK02B,YAClB,GAAI12B,KAAKklB,SAAU,CACjB,MAAM8a,EAAUh0B,EAAKO,QAAQzB,OAAOzB,EAAO+C,GACvCJ,EAAK6sB,UACPvB,GAAYtrB,EAAMg0B,GAGtBh0B,EAAKmN,KAAKrO,OAAOzB,EAAO+C,EAC1B,CAKA6zB,MAAM78B,GACJ,GAAIpD,KAAKklB,SACPllB,KAAKw4B,UAAU5yB,KAAKxC,OACf,CACL,MAAO2wB,EAAQyL,EAAMC,GAAQr8B,EAC7BpD,KAAK+zB,GAAQyL,EAAMC,GAErBz/B,KAAKmR,MAAM+uB,aAAat6B,KAAK,CAAC5F,KAAKiE,SAAUb,GAC/C,CAEA+8B,cACE,MAAM/zB,EAAQxa,UAAUC,OACxBmO,KAAKigC,MAAM,CAAC,kBAAmBjgC,KAAKk5B,aAAa/f,KAAKtnB,OAASua,EAAOA,GACxE,CAEAg0B,aACEpgC,KAAKigC,MAAM,CAAC,kBAAmBjgC,KAAK02B,YAAYvd,KAAKtnB,OAAS,EAAG,GACnE,CAEAwuC,eACErgC,KAAKigC,MAAM,CAAC,kBAAmB,EAAG,GACpC,CAEAK,cAAcj3B,EAAO+C,GACfA,GACFpM,KAAKigC,MAAM,CAAC,kBAAmB52B,EAAO+C,IAExC,MAAMm0B,EAAW3uC,UAAUC,OAAS,EAChC0uC,GACFvgC,KAAKigC,MAAM,CAAC,kBAAmB52B,EAAOk3B,GAE1C,CAEAC,iBACExgC,KAAKigC,MAAM,CAAC,kBAAmB,EAAGruC,UAAUC,QAC9C,ECphCF,SAAS4uC,GAAqBz0B,GAC5B,MAAMwI,EAAQxI,EAAKM,OACbyE,EAnBR,SAA2ByD,EAAO5U,GAChC,IAAK4U,EAAMksB,OAAOC,KAAM,CACtB,MAAMC,EAAepsB,EAAM+hB,wBAAwB32B,GACnD,IAAImR,EAAS,GAEb,IAAK,IAAI7e,EAAI,EAAG2R,EAAO+8B,EAAa/uC,OAAQK,EAAI2R,EAAM3R,IACpD6e,EAASA,EAAO8vB,OAAOD,EAAa1uC,GAAGukC,WAAWwG,mBAAmBzoB,IAEvEA,EAAMksB,OAAOC,KAAO31B,GAAa+F,EAAO+vB,MAAK,CAACvwC,EAAGC,IAAMD,EAAIC,KAE7D,OAAOgkB,EAAMksB,OAAOC,IACtB,CAQiBI,CAAkBvsB,EAAOxI,EAAKpM,MAC7C,IACI1N,EAAG2R,EAAMm9B,EAAMrZ,EADfh4B,EAAM6kB,EAAMysB,QAEhB,MAAMC,EAAmBA,KACV,QAATF,IAA4B,QAAVA,IAIlB/6B,GAAQ0hB,KAEVh4B,EAAMF,KAAKE,IAAIA,EAAKF,KAAK2X,IAAI45B,EAAOrZ,IAASh4B,IAE/Cg4B,EAAOqZ,EAAA,EAGT,IAAK9uC,EAAI,EAAG2R,EAAOkN,EAAOlf,OAAQK,EAAI2R,IAAQ3R,EAC5C8uC,EAAOxsB,EAAM5H,iBAAiBmE,EAAO7e,IACrCgvC,IAIF,IADAvZ,OAAOr2B,EACFY,EAAI,EAAG2R,EAAO2Q,EAAMtD,MAAMrf,OAAQK,EAAI2R,IAAQ3R,EACjD8uC,EAAOxsB,EAAM2sB,gBAAgBjvC,GAC7BgvC,IAGF,OAAOvxC,CACT,CA2FA,SAASyxC,GAAWC,EAAOh7B,EAAMgwB,EAAQnkC,GAMvC,OALIK,EAAQ8uC,GA5Bd,SAAuBA,EAAOh7B,EAAMgwB,EAAQnkC,GAC1C,MAAMovC,EAAajL,EAAOjR,MAAMic,EAAM,GAAInvC,GACpCqvC,EAAWlL,EAAOjR,MAAMic,EAAM,GAAInvC,GAClCvC,EAAMF,KAAKE,IAAI2xC,EAAYC,GAC3B7xC,EAAMD,KAAKC,IAAI4xC,EAAYC,GACjC,IAAIC,EAAW7xC,EACX8xC,EAAS/xC,EAETD,KAAK2X,IAAIzX,GAAOF,KAAK2X,IAAI1X,KAC3B8xC,EAAW9xC,EACX+xC,EAAS9xC,GAKX0W,EAAKgwB,EAAO7pB,MAAQi1B,EAEpBp7B,EAAKq7B,QAAU,CACbF,WACAC,SACAp4B,MAAOi4B,EACPh4B,IAAKi4B,EACL5xC,MACAD,MAEJ,CAIIiyC,CAAcN,EAAOh7B,EAAMgwB,EAAQnkC,GAEnCmU,EAAKgwB,EAAO7pB,MAAQ6pB,EAAOjR,MAAMic,EAAOnvC,GAEnCmU,CACT,CAEA,SAASu7B,GAAsB51B,EAAMmN,EAAM9P,EAAO+C,GAChD,MAAME,EAASN,EAAKM,OACd+pB,EAASrqB,EAAKqqB,OACdyF,EAASxvB,EAAOyvB,YAChBC,EAAc1vB,IAAW+pB,EACzBlR,EAAS,GACf,IAAIjzB,EAAG2R,EAAMwC,EAAMg7B,EAEnB,IAAKnvC,EAAImX,EAAOxF,EAAOwF,EAAQ+C,EAAOla,EAAI2R,IAAQ3R,EAChDmvC,EAAQloB,EAAKjnB,GACbmU,EAAO,CAAC,EACRA,EAAKiG,EAAOE,MAAQwvB,GAAe1vB,EAAO8Y,MAAM0W,EAAO5pC,GAAIA,GAC3DizB,EAAOvf,KAAKw7B,GAAWC,EAAOh7B,EAAMgwB,EAAQnkC,IAE9C,OAAOizB,CACT,CAEA,SAAS0c,GAAWC,GAClB,OAAOA,QAA8BxwC,IAApBwwC,EAAON,eAA4ClwC,IAAlBwwC,EAAOL,MAC3D,CA8BA,SAASM,GAAiB5rB,EAAYzR,EAAS+wB,EAAOxxB,GACpD,IAAI+9B,EAAOt9B,EAAQu9B,cACnB,MAAMrO,EAAM,CAAC,EAEb,IAAKoO,EAEH,YADA7rB,EAAW8rB,cAAgBrO,GAI7B,IAAa,IAAToO,EAEF,YADA7rB,EAAW8rB,cAAgB,CAACrrB,KAAK,EAAMC,OAAO,EAAMC,QAAQ,EAAMC,MAAM,IAI1E,MAAM,MAAC1N,EAAA,IAAOC,EAAA,QAAK7F,EAAA,IAASmT,EAAA,OAAKE,GAnCnC,SAAqBX,GACnB,IAAI1S,EAAS4F,EAAOC,EAAKsN,EAAKE,EAiB9B,OAhBIX,EAAW+rB,YACbz+B,EAAU0S,EAAWykB,KAAOzkB,EAAWhjB,EACvCkW,EAAQ,OACRC,EAAM,UAEN7F,EAAU0S,EAAWykB,KAAOzkB,EAAW7Q,EACvC+D,EAAQ,SACRC,EAAM,OAEJ7F,GACFmT,EAAM,MACNE,EAAS,UAETF,EAAM,QACNE,EAAS,OAEJ,CAACzN,QAAOC,MAAK7F,UAASmT,MAAKE,SACpC,CAgB6CqrB,CAAYhsB,GAE1C,WAAT6rB,GAAqBvM,IACvBtf,EAAWisB,oBAAqB,GAC3B3M,EAAMwB,MAAQ,KAAOhzB,EACxB+9B,EAAOprB,GACG6e,EAAMyB,SAAW,KAAOjzB,EAClC+9B,EAAOlrB,GAEP8c,EAAIyO,GAAUvrB,EAAQzN,EAAOC,EAAK7F,KAAY,EAC9Cu+B,EAAOprB,IAIXgd,EAAIyO,GAAUL,EAAM34B,EAAOC,EAAK7F,KAAY,EAC5C0S,EAAW8rB,cAAgBrO,CAC7B,CAEA,SAASyO,GAAUL,EAAMzxC,EAAGC,EAAGiT,GAU/B,IAAc6+B,EAAMv+B,EAAIw+B,EAHtB,OANI9+B,GASkB8+B,EARC/xC,EACrBwxC,EAAOQ,GADPR,GAQUM,EAREN,MAQIj+B,EARExT,GASCgyC,EAAKD,IAASC,EAAKx+B,EAAKu+B,EARrB9xC,EAAGD,IAEzByxC,EAAOQ,GAASR,EAAMzxC,EAAGC,GAEpBwxC,CACT,CAMA,SAASQ,GAASnzC,EAAGga,EAAOC,GAC1B,MAAa,UAANja,EAAgBga,EAAc,QAANha,EAAcia,EAAMja,CACrD,CAEA,SAASozC,GAAiBtsB,EAAU2X,EAAmB9uB,GAAO,IAAxB,cAAC0jC,GAAc5U,EACnD3X,EAAWusB,cAAkC,SAAlBA,EACb,IAAV1jC,EAAc,IAAO,EACrB0jC,CACN,CC3Ne,MAAMC,WAA2BhL,GAE9CC,UAAY,WAKZA,gBAAkB,CAChBa,oBAAoB,EACpBC,gBAAiB,MACjBhmB,UAAW,CAETkwB,eAAe,EAEfC,cAAc,GAEhBtsB,WAAY,CACVzG,QAAS,CACPlQ,KAAM,SACNuW,WAAY,CAAC,gBAAiB,WAAY,cAAe,cAAe,aAAc,IAAK,IAAK,SAAU,cAAe,aAI7H2sB,OAAQ,MAGRznB,SAAU,EAGV0nB,cAAe,IAGfznB,OAAQ,OAGR0nB,QAAS,EAETnvB,UAAW,KAGb+jB,mBAAqB,CACnBjiB,YAAcZ,GAAkB,YAATA,EACvBc,WAAad,GAAkB,YAATA,IAAuBA,EAAKa,WAAW,gBAAkBb,EAAKa,WAAW,oBAMjGgiB,iBAAmB,CACjBnN,YAAa,EAGbnW,QAAS,CACP2uB,OAAQ,CACNnH,OAAQ,CACNoH,eAAe/xB,GACb,MAAMgI,EAAOhI,EAAMgI,KACnB,GAAIA,EAAK2iB,OAAOjqC,QAAUsnB,EAAKtG,SAAShhB,OAAQ,CAC9C,MAAOiqC,QAAQ,WAAC1gB,EAAA,MAAY5a,IAAU2Q,EAAM8xB,OAAOv+B,QAEnD,OAAOyU,EAAK2iB,OAAOtpC,KAAI,CAAC4qC,EAAOlrC,KAC7B,MACMohB,EADOnC,EAAM6oB,eAAe,GACfvD,WAAWtK,SAASj6B,GAEvC,MAAO,CACLimB,KAAMilB,EACN5f,UAAWlK,EAAMX,gBACjB0L,YAAa/K,EAAMV,YACnBuwB,UAAW3iC,EACX+W,UAAWjE,EAAM6I,YACjBf,WAAYA,EACZwhB,QAASzrB,EAAMiyB,kBAAkBlxC,GAGjC+R,MAAO/R,EACR,IAGL,MAAO,EACT,GAGFkiB,QAAQzjB,EAAG0yC,EAAYJ,GACrBA,EAAO9xB,MAAMmyB,qBAAqBD,EAAWp/B,OAC7Cg/B,EAAO9xB,MAAMoiB,QACf,KAKN5zB,YAAYwR,EAAOnN,GACjBu/B,MAAMpyB,EAAOnN,GAEbhE,KAAKq4B,qBAAsB,EAC3Br4B,KAAKwjC,iBAAclyC,EACnB0O,KAAKyjC,iBAAcnyC,EACnB0O,KAAK6pB,aAAUv4B,EACf0O,KAAK8pB,aAAUx4B,CACjB,CAEAsnC,aAAc,CAKdxT,MAAM/b,EAAO+C,GACX,MAAM+M,EAAOnZ,KAAKk5B,aAAa/f,KACzBnN,EAAOhM,KAAK02B,YAElB,IAAsB,IAAlB12B,KAAKklB,SACPlZ,EAAKO,QAAU4M,MACV,CACL,IAOIjnB,EAAG2R,EAPH6/B,EAAUxxC,IAAOinB,EAAKjnB,GAE1B,GAAIqQ,EAAS4W,EAAK9P,IAAS,CACzB,MAAM,IAAC9E,EAAM,SAAWvE,KAAKklB,SAC7Bwe,EAAUxxC,IAAOqT,GAAiB4T,EAAKjnB,GAAIqS,GAI7C,IAAKrS,EAAImX,EAAOxF,EAAOwF,EAAQ+C,EAAOla,EAAI2R,IAAQ3R,EAChD8Z,EAAKO,QAAQra,GAAKwxC,EAAOxxC,GAG/B,CAKAyxC,eACE,OAAO37B,GAAUhI,KAAK0E,QAAQ2W,SAAW,GAC3C,CAKAuoB,oBACE,OAAO57B,GAAUhI,KAAK0E,QAAQq+B,cAChC,CAMAc,sBACE,IAAIl0C,EAAM6W,GACN9W,GAAO8W,GAEX,IAAK,IAAItU,EAAI,EAAGA,EAAI8N,KAAKmR,MAAMgI,KAAKtG,SAAShhB,SAAUK,EACrD,GAAI8N,KAAKmR,MAAM2yB,iBAAiB5xC,IAAM8N,KAAKmR,MAAM6oB,eAAe9nC,GAAG0N,OAASI,KAAK+3B,MAAO,CACtF,MAAMtB,EAAaz2B,KAAKmR,MAAM6oB,eAAe9nC,GAAGukC,WAC1Cpb,EAAWob,EAAWkN,eACtBZ,EAAgBtM,EAAWmN,oBAEjCj0C,EAAMF,KAAKE,IAAIA,EAAK0rB,GACpB3rB,EAAMD,KAAKC,IAAIA,EAAK2rB,EAAW0nB,GAInC,MAAO,CACL1nB,SAAU1rB,EACVozC,cAAerzC,EAAMC,EAEzB,CAKA4jC,OAAOxf,GACL,MAAM5C,EAAQnR,KAAKmR,OACb,UAACusB,GAAavsB,EACdnF,EAAOhM,KAAK02B,YACZqN,EAAO/3B,EAAKmN,KACZ6pB,EAAUhjC,KAAKgkC,oBAAsBhkC,KAAKikC,aAAaF,GAAQ/jC,KAAK0E,QAAQs+B,QAC5EkB,EAAUz0C,KAAKC,KAAKD,KAAKE,IAAI+tC,EAAUzlB,MAAOylB,EAAU9iB,QAAUooB,GAAW,EAAG,GAChFF,EAASrzC,KAAKE,KzB9HKuS,EyB8HYlC,KAAK0E,QAAQo+B,OzB9HD//B,EyB8HSmhC,EzB7H3C,kBAAVhiC,GAAsBA,EAAMc,SAAS,KAC1CC,WAAWf,GAAS,KACjBA,EAAQa,GyB2HyD,GzB9H5CohC,IAACjiC,EAAwBa,EyB+HjD,MAAMqhC,EAAcpkC,KAAKqkC,eAAerkC,KAAKiE,QAKvC,cAAC8+B,EAAA,SAAe1nB,GAAYrb,KAAK6jC,uBACjC,OAACS,EAAA,OAAQC,EAAA,QAAQ1a,EAAA,QAASC,GAjNpC,SAA2BzO,EAAU0nB,EAAeD,GAClD,IAAIwB,EAAS,EACTC,EAAS,EACT1a,EAAU,EACVC,EAAU,EAEd,GAAIiZ,EAAgBv8B,GAAK,CACvB,MAAMg+B,EAAanpB,EACbopB,EAAWD,EAAazB,EACxB2B,EAASj1C,KAAKif,IAAI81B,GAClBG,EAASl1C,KAAKge,IAAI+2B,GAClBI,EAAOn1C,KAAKif,IAAI+1B,GAChBI,EAAOp1C,KAAKge,IAAIg3B,GAChBK,EAAUA,CAACl8B,EAAOrY,EAAGC,IAAM4Y,GAAcR,EAAO47B,EAAYC,GAAU,GAAQ,EAAIh1C,KAAKC,IAAIa,EAAGA,EAAIuyC,EAAQtyC,EAAGA,EAAIsyC,GACjHiC,EAAUA,CAACn8B,EAAOrY,EAAGC,IAAM4Y,GAAcR,EAAO47B,EAAYC,GAAU,IAAS,EAAIh1C,KAAKE,IAAIY,EAAGA,EAAIuyC,EAAQtyC,EAAGA,EAAIsyC,GAClHkC,EAAOF,EAAQ,EAAGJ,EAAQE,GAC1BK,EAAOH,EAAQj+B,GAAS89B,EAAQE,GAChCK,EAAOH,EAAQx+B,GAAIm+B,EAAQE,GAC3BO,EAAOJ,EAAQx+B,GAAKM,GAAS89B,EAAQE,GAC3CP,GAAUU,EAAOE,GAAQ,EACzBX,GAAUU,EAAOE,GAAQ,EACzBtb,IAAYmb,EAAOE,GAAQ,EAC3Bpb,IAAYmb,EAAOE,GAAQ,EAE7B,MAAO,CAACb,SAAQC,SAAQ1a,UAASC,UACnC,CAwL+Csb,CAAkB/pB,EAAU0nB,EAAeD,GAChF9jB,GAAY0e,EAAUzlB,MAAQ+qB,GAAWsB,EACzC3Z,GAAa+S,EAAU9iB,OAASooB,GAAWuB,EAC3Cc,EAAY51C,KAAKC,IAAID,KAAKE,IAAIqvB,EAAU2L,GAAa,EAAG,GACxD8Y,EAAc3gC,EAAY9C,KAAK0E,QAAQ4W,OAAQ+pB,GAE/CC,GAAgB7B,EADFh0C,KAAKC,IAAI+zC,EAAcX,EAAQ,IACA9iC,KAAKulC,gCACxDvlC,KAAK6pB,QAAUA,EAAU4Z,EACzBzjC,KAAK8pB,QAAUA,EAAU2Z,EAEzBz3B,EAAKw5B,MAAQxlC,KAAKylC,iBAElBzlC,KAAKyjC,YAAcA,EAAc6B,EAAetlC,KAAK0lC,qBAAqB1lC,KAAKiE,OAC/EjE,KAAKwjC,YAAc/zC,KAAKC,IAAIsQ,KAAKyjC,YAAc6B,EAAelB,EAAa,GAE3EpkC,KAAK+/B,eAAegE,EAAM,EAAGA,EAAKlyC,OAAQkiB,EAC5C,CAKA4xB,eAAezzC,EAAGioC,GAChB,MAAM7c,EAAOtd,KAAK0E,QACZsH,EAAOhM,KAAK02B,YACZqM,EAAgB/iC,KAAK4jC,oBAC3B,OAAIzJ,GAAU7c,EAAK5K,UAAUkwB,gBAAmB5iC,KAAKmR,MAAMiyB,kBAAkBlxC,IAA0B,OAApB8Z,EAAKO,QAAQra,IAAe8Z,EAAKmN,KAAKjnB,GAAG0qC,OACnH,EAEF58B,KAAK4lC,uBAAuB55B,EAAKO,QAAQra,GAAK6wC,EAAgBv8B,GACvE,CAEAu5B,eAAegE,EAAM16B,EAAO+C,EAAO2H,GACjC,MAAMomB,EAAiB,UAATpmB,EACR5C,EAAQnR,KAAKmR,MACbusB,EAAYvsB,EAAMusB,UAElBmI,EADO10B,EAAMzM,QACQgO,UACrBozB,GAAWpI,EAAU3mB,KAAO2mB,EAAU7mB,OAAS,EAC/CkvB,GAAWrI,EAAU9mB,IAAM8mB,EAAU5mB,QAAU,EAC/C+rB,EAAe1I,GAAS0L,EAAchD,aACtCW,EAAcX,EAAe,EAAI7iC,KAAKwjC,YACtCC,EAAcZ,EAAe,EAAI7iC,KAAKyjC,aACtC,cAAC7E,EAAa,eAAED,GAAkB3+B,KAAK8+B,kBAAkBz1B,EAAO0K,GACtE,IACI7hB,EADAsyC,EAAaxkC,KAAK2jC,eAGtB,IAAKzxC,EAAI,EAAGA,EAAImX,IAASnX,EACvBsyC,GAAcxkC,KAAK2lC,eAAezzC,EAAGioC,GAGvC,IAAKjoC,EAAImX,EAAOnX,EAAImX,EAAQ+C,IAASla,EAAG,CACtC,MAAM6wC,EAAgB/iC,KAAK2lC,eAAezzC,EAAGioC,GACvCve,EAAMmoB,EAAK7xC,GACXikB,EAAa,CACjBhjB,EAAG2yC,EAAU9lC,KAAK6pB,QAClBvkB,EAAGygC,EAAU/lC,KAAK8pB,QAClB0a,aACAC,SAAUD,EAAazB,EACvBA,gBACAU,cACAD,eAEE7E,IACFxoB,EAAWzR,QAAUk6B,GAAiB5+B,KAAK49B,0BAA0B1rC,EAAG0pB,EAAIxF,OAAS,SAAWrC,IAElGywB,GAAczB,EAEd/iC,KAAKk/B,cAActjB,EAAK1pB,EAAGikB,EAAYpC,EACzC,CACF,CAEA0xB,iBACE,MAAMz5B,EAAOhM,KAAK02B,YACZsP,EAAWh6B,EAAKmN,KACtB,IACIjnB,EADAszC,EAAQ,EAGZ,IAAKtzC,EAAI,EAAGA,EAAI8zC,EAASn0C,OAAQK,IAAK,CACpC,MAAMgQ,EAAQ8J,EAAKO,QAAQra,GACb,OAAVgQ,GAAmB0F,MAAM1F,KAAUlC,KAAKmR,MAAMiyB,kBAAkBlxC,IAAO8zC,EAAS9zC,GAAG0qC,SACrF4I,GAAS/1C,KAAK2X,IAAIlF,GAEtB,CAEA,OAAOsjC,CACT,CAEAI,uBAAuB1jC,GACrB,MAAMsjC,EAAQxlC,KAAK02B,YAAY8O,MAC/B,OAAIA,EAAQ,IAAM59B,MAAM1F,GACfsE,IAAO/W,KAAK2X,IAAIlF,GAASsjC,GAE3B,CACT,CAEArI,iBAAiBl5B,GACf,MAAM+H,EAAOhM,KAAK02B,YACZvlB,EAAQnR,KAAKmR,MACb2qB,EAAS3qB,EAAMgI,KAAK2iB,QAAU,GAC9B55B,EAAQgO,GAAalE,EAAKO,QAAQtI,GAAQkN,EAAMzM,QAAQ0L,QAE9D,MAAO,CACLgtB,MAAOtB,EAAO73B,IAAU,GACxB/B,QAEJ,CAEA8hC,kBAAkBD,GAChB,IAAIr0C,EAAM,EACV,MAAMyhB,EAAQnR,KAAKmR,MACnB,IAAIjf,EAAG2R,EAAMmI,EAAMyqB,EAAY/xB,EAE/B,IAAKq/B,EAEH,IAAK7xC,EAAI,EAAG2R,EAAOsN,EAAMgI,KAAKtG,SAAShhB,OAAQK,EAAI2R,IAAQ3R,EACzD,GAAIif,EAAM2yB,iBAAiB5xC,GAAI,CAC7B8Z,EAAOmF,EAAM6oB,eAAe9nC,GAC5B6xC,EAAO/3B,EAAKmN,KACZsd,EAAazqB,EAAKyqB,WAClB,MAKN,IAAKsN,EACH,OAAO,EAGT,IAAK7xC,EAAI,EAAG2R,EAAOkgC,EAAKlyC,OAAQK,EAAI2R,IAAQ3R,EAC1CwS,EAAU+xB,EAAWmH,0BAA0B1rC,GACnB,UAAxBwS,EAAQuhC,cACVv2C,EAAMD,KAAKC,IAAIA,EAAKgV,EAAQyX,aAAe,EAAGzX,EAAQwhC,kBAAoB,IAG9E,OAAOx2C,CACT,CAEAu0C,aAAaF,GACX,IAAIr0C,EAAM,EAEV,IAAK,IAAIwC,EAAI,EAAG2R,EAAOkgC,EAAKlyC,OAAQK,EAAI2R,IAAQ3R,EAAG,CACjD,MAAMwS,EAAU1E,KAAK49B,0BAA0B1rC,GAC/CxC,EAAMD,KAAKC,IAAIA,EAAKgV,EAAQuS,QAAU,EAAGvS,EAAQyhC,aAAe,EAClE,CACA,OAAOz2C,CACT,CAMAg2C,qBAAqB1hC,GACnB,IAAIoiC,EAAmB,EAEvB,IAAK,IAAIl0C,EAAI,EAAGA,EAAI8R,IAAgB9R,EAC9B8N,KAAKmR,MAAM2yB,iBAAiB5xC,KAC9Bk0C,GAAoBpmC,KAAKqkC,eAAenyC,IAI5C,OAAOk0C,CACT,CAKA/B,eAAergC,GACb,OAAOvU,KAAKC,IAAImT,EAAe7C,KAAKmR,MAAMgI,KAAKtG,SAAS7O,GAAcvD,OAAQ,GAAI,EACpF,CAMA8kC,gCACE,OAAOvlC,KAAK0lC,qBAAqB1lC,KAAKmR,MAAMgI,KAAKtG,SAAShhB,SAAW,CACvE,ECrYa,MAAMw0C,WAAuB1O,GAE1CC,UAAY,OAKZA,gBAAkB,CAChBa,mBAAoB,OACpBC,gBAAiB,QAEjBhkB,UAAU,EACV6S,UAAU,GAMZqQ,iBAAmB,CACjBnjB,OAAQ,CACN6xB,QAAS,CACP1mC,KAAM,YAER2mC,QAAS,CACP3mC,KAAM,YAKZ+4B,aACE34B,KAAKq4B,qBAAsB,EAC3Br4B,KAAKs4B,oBAAqB,EAC1BiL,MAAM5K,YACR,CAEApF,OAAOxf,GACL,MAAM/H,EAAOhM,KAAK02B,aACXuC,QAASrb,EAAMzE,KAAMlN,EAAS,GAAE,SAAEu6B,GAAYx6B,EAE/CE,EAAqBlM,KAAKmR,MAAM0tB,oBACtC,IAAI,MAACx1B,EAAA,MAAO+C,GAASL,GAAiCC,EAAMC,EAAQC,GAEpElM,KAAKm4B,WAAa9uB,EAClBrJ,KAAKo4B,WAAahsB,EAEdS,GAAoBb,KACtB3C,EAAQ,EACR+C,EAAQH,EAAOpa,QAIjB+rB,EAAKmR,OAAS/uB,KAAKmR,MACnByM,EAAKsR,cAAgBlvB,KAAKiE,MAC1B2Z,EAAK6oB,aAAeD,EAASC,WAC7B7oB,EAAK3R,OAASA,EAEd,MAAMvH,EAAU1E,KAAK29B,6BAA6B5pB,GAC7C/T,KAAK0E,QAAQgQ,WAChBhQ,EAAQyX,YAAc,GAExBzX,EAAQspB,QAAUhuB,KAAK0E,QAAQspB,QAC/BhuB,KAAKk/B,cAActhB,OAAMtsB,EAAW,CAClCo1C,UAAWx6B,EACXxH,WACCqP,GAGH/T,KAAK+/B,eAAe9zB,EAAQ5C,EAAO+C,EAAO2H,EAC5C,CAEAgsB,eAAe9zB,EAAQ5C,EAAO+C,EAAO2H,GACnC,MAAMomB,EAAiB,UAATpmB,GACR,OAACzH,EAAA,OAAQ+pB,EAAA,SAAQwC,EAAA,SAAU2N,GAAYxmC,KAAK02B,aAC5C,cAACkI,EAAa,eAAED,GAAkB3+B,KAAK8+B,kBAAkBz1B,EAAO0K,GAChE6iB,EAAQtqB,EAAOE,KACfqqB,EAAQR,EAAO7pB,MACf,SAAC+a,EAAA,QAAUyG,GAAWhuB,KAAK0E,QAC3BiiC,EAAeh/B,GAAS4f,GAAYA,EAAW9kB,OAAOkE,kBACtDigC,EAAe5mC,KAAKmR,MAAM0tB,qBAAuB1E,GAAkB,SAATpmB,EAC1DzK,EAAMD,EAAQ+C,EACdy6B,EAAc56B,EAAOpa,OAC3B,IAAIi1C,EAAaz9B,EAAQ,GAAKrJ,KAAKm8B,UAAU9yB,EAAQ,GAErD,IAAK,IAAInX,EAAI,EAAGA,EAAI20C,IAAe30C,EAAG,CACpC,MAAMoqB,EAAQrQ,EAAO/Z,GACfikB,EAAaywB,EAAetqB,EAAQ,GAE1C,GAAIpqB,EAAImX,GAASnX,GAAKoX,EAAK,CACzB6M,EAAWoP,MAAO,EAClB,SAGF,MAAMJ,EAASnlB,KAAKm8B,UAAUjqC,GACxB60C,EAAW9kC,EAAckjB,EAAO0R,IAChC5P,EAAS9Q,EAAWygB,GAAStqB,EAAOM,iBAAiBuY,EAAOyR,GAAQ1kC,GACpEg1B,EAAS/Q,EAAW0gB,GAASsD,GAAS4M,EAAW1Q,EAAO2Q,eAAiB3Q,EAAOzpB,iBAAiBisB,EAAW74B,KAAKw1B,WAAWa,EAAQlR,EAAQ0T,GAAY1T,EAAO0R,GAAQ3kC,GAE7KikB,EAAWoP,KAAO3d,MAAMqf,IAAWrf,MAAMsf,IAAW6f,EACpD5wB,EAAW+b,KAAOhgC,EAAI,GAAKzC,KAAM2X,IAAI+d,EAAOyR,GAASkQ,EAAWlQ,IAAW+P,EACvE3Y,IACF7X,EAAWgP,OAASA,EACpBhP,EAAW2nB,IAAM0I,EAASrtB,KAAKjnB,IAG7BysC,IACFxoB,EAAWzR,QAAUk6B,GAAiB5+B,KAAK49B,0BAA0B1rC,EAAGoqB,EAAMlG,OAAS,SAAWrC,IAG/F6yB,GACH5mC,KAAKk/B,cAAc5iB,EAAOpqB,EAAGikB,EAAYpC,GAG3C+yB,EAAa3hB,CACf,CACF,CAKA+X,iBACE,MAAMlxB,EAAOhM,KAAK02B,YACZuC,EAAUjtB,EAAKitB,QACfnhB,EAASmhB,EAAQv0B,SAAWu0B,EAAQv0B,QAAQyX,aAAe,EAC3DhD,EAAOnN,EAAKmN,MAAQ,GAC1B,IAAKA,EAAKtnB,OACR,OAAOimB,EAET,MAAM4N,EAAavM,EAAK,GAAG/S,KAAKpG,KAAK49B,0BAA0B,IACzDqJ,EAAY9tB,EAAKA,EAAKtnB,OAAS,GAAGuU,KAAKpG,KAAK49B,0BAA0BzkB,EAAKtnB,OAAS,IAC1F,OAAOpC,KAAKC,IAAIooB,EAAQ4N,EAAYuhB,GAAa,CACnD,CAEA9V,OACE,MAAMnlB,EAAOhM,KAAK02B,YAClB1qB,EAAKitB,QAAQiO,oBAAoBlnC,KAAKmR,MAAMusB,UAAW1xB,EAAKM,OAAOE,MACnE+2B,MAAMpS,MACR,EC1Ia,MAAMgW,WAA4BxP,GAE/CC,UAAY,YAKZA,gBAAkB,CAChBc,gBAAiB,MACjBhmB,UAAW,CACTkwB,eAAe,EACfC,cAAc,GAEhBtsB,WAAY,CACVzG,QAAS,CACPlQ,KAAM,SACNuW,WAAY,CAAC,IAAK,IAAK,aAAc,WAAY,cAAe,iBAGpEtC,UAAW,IACX2wB,WAAY,GAMd5M,iBAAmB,CACjBnN,YAAa,EAEbnW,QAAS,CACP2uB,OAAQ,CACNnH,OAAQ,CACNoH,eAAe/xB,GACb,MAAMgI,EAAOhI,EAAMgI,KACnB,GAAIA,EAAK2iB,OAAOjqC,QAAUsnB,EAAKtG,SAAShhB,OAAQ,CAC9C,MAAOiqC,QAAQ,WAAC1gB,EAAA,MAAY5a,IAAU2Q,EAAM8xB,OAAOv+B,QAEnD,OAAOyU,EAAK2iB,OAAOtpC,KAAI,CAAC4qC,EAAOlrC,KAC7B,MACMohB,EADOnC,EAAM6oB,eAAe,GACfvD,WAAWtK,SAASj6B,GAEvC,MAAO,CACLimB,KAAMilB,EACN5f,UAAWlK,EAAMX,gBACjB0L,YAAa/K,EAAMV,YACnBuwB,UAAW3iC,EACX+W,UAAWjE,EAAM6I,YACjBf,WAAYA,EACZwhB,QAASzrB,EAAMiyB,kBAAkBlxC,GAGjC+R,MAAO/R,EACR,IAGL,MAAO,EACT,GAGFkiB,QAAQzjB,EAAG0yC,EAAYJ,GACrBA,EAAO9xB,MAAMmyB,qBAAqBD,EAAWp/B,OAC7Cg/B,EAAO9xB,MAAMoiB,QACf,IAIJ9e,OAAQ,CACNvjB,EAAG,CACD0O,KAAM,eACNwnC,WAAY,CACVpwB,SAAS,GAEXE,aAAa,EACbI,KAAM,CACJ+vB,UAAU,GAEZC,YAAa,CACXtwB,SAAS,GAEXwtB,WAAY,KAKlB7kC,YAAYwR,EAAOnN,GACjBu/B,MAAMpyB,EAAOnN,GAEbhE,KAAKwjC,iBAAclyC,EACnB0O,KAAKyjC,iBAAcnyC,CACrB,CAEA6rC,iBAAiBl5B,GACf,MAAM+H,EAAOhM,KAAK02B,YACZvlB,EAAQnR,KAAKmR,MACb2qB,EAAS3qB,EAAMgI,KAAK2iB,QAAU,GAC9B55B,EAAQgO,GAAalE,EAAKO,QAAQtI,GAAO/S,EAAGigB,EAAMzM,QAAQ0L,QAEhE,MAAO,CACLgtB,MAAOtB,EAAO73B,IAAU,GACxB/B,QAEJ,CAEAy5B,gBAAgB3vB,EAAMmN,EAAM9P,EAAO+C,GACjC,OAAO6Y,GAA4BsiB,KAAKvnC,KAAjCilB,CAAuCjZ,EAAMmN,EAAM9P,EAAO+C,EACnE,CAEAmnB,OAAOxf,GACL,MAAMgwB,EAAO/jC,KAAK02B,YAAYvd,KAE9BnZ,KAAKwnC,gBACLxnC,KAAK+/B,eAAegE,EAAM,EAAGA,EAAKlyC,OAAQkiB,EAC5C,CAKAyoB,YACE,MAAMxwB,EAAOhM,KAAK02B,YACZpvB,EAAQ,CAAC3X,IAAK8S,OAAOkE,kBAAmBjX,IAAK+S,OAAOo6B,mBAgB1D,OAdA7wB,EAAKmN,KAAKpO,SAAQ,CAAC6d,EAAS3kB,KAC1B,MAAMkhB,EAASnlB,KAAKm8B,UAAUl4B,GAAO/S,GAEhC0W,MAAMud,IAAWnlB,KAAKmR,MAAMiyB,kBAAkBn/B,KAC7CkhB,EAAS7d,EAAM3X,MACjB2X,EAAM3X,IAAMw1B,GAGVA,EAAS7d,EAAM5X,MACjB4X,EAAM5X,IAAMy1B,OAKX7d,CACT,CAKAkgC,gBACE,MAAMr2B,EAAQnR,KAAKmR,MACbusB,EAAYvsB,EAAMusB,UAClBpgB,EAAOnM,EAAMzM,QACb+iC,EAAUh4C,KAAKE,IAAI+tC,EAAU7mB,MAAQ6mB,EAAU3mB,KAAM2mB,EAAU5mB,OAAS4mB,EAAU9mB,KAElF6sB,EAAch0C,KAAKC,IAAI+3C,EAAU,EAAG,GAEpCnC,GAAgB7B,EADFh0C,KAAKC,IAAI4tB,EAAKoqB,iBAAmBjE,EAAe,IAAQnmB,EAAKoqB,iBAAoB,EAAG,IACrDv2B,EAAMw2B,yBAEzD3nC,KAAKyjC,YAAcA,EAAe6B,EAAetlC,KAAKiE,MACtDjE,KAAKwjC,YAAcxjC,KAAKyjC,YAAc6B,CACxC,CAEAvF,eAAegE,EAAM16B,EAAO+C,EAAO2H,GACjC,MAAMomB,EAAiB,UAATpmB,EACR5C,EAAQnR,KAAKmR,MAEb00B,EADO10B,EAAMzM,QACQgO,UACrB8B,EAAQxU,KAAK02B,YAAYqD,OACzB+L,EAAUtxB,EAAMozB,QAChB7B,EAAUvxB,EAAMqzB,QAChBC,EAAoBtzB,EAAMuzB,cAAc,GAAK,GAAMxhC,GACzD,IACIrU,EADA0W,EAAQk/B,EAGZ,MAAME,EAAe,IAAMhoC,KAAKioC,uBAEhC,IAAK/1C,EAAI,EAAGA,EAAImX,IAASnX,EACvB0W,GAAS5I,KAAKkoC,cAAch2C,EAAG6hB,EAAMi0B,GAEvC,IAAK91C,EAAImX,EAAOnX,EAAImX,EAAQ+C,EAAOla,IAAK,CACtC,MAAM0pB,EAAMmoB,EAAK7xC,GACjB,IAAIsyC,EAAa57B,EACb67B,EAAW77B,EAAQ5I,KAAKkoC,cAAch2C,EAAG6hB,EAAMi0B,GAC/CvE,EAActyB,EAAMiyB,kBAAkBlxC,GAAKsiB,EAAM2zB,8BAA8BnoC,KAAKm8B,UAAUjqC,GAAGhB,GAAK,EAC1G0X,EAAQ67B,EAEJtK,IACE0L,EAAchD,eAChBY,EAAc,GAEZoC,EAAcjD,gBAChB4B,EAAaC,EAAWqD,IAI5B,MAAM3xB,EAAa,CACjBhjB,EAAG2yC,EACHxgC,EAAGygC,EACHvC,YAAa,EACbC,cACAe,aACAC,WACA//B,QAAS1E,KAAK49B,0BAA0B1rC,EAAG0pB,EAAIxF,OAAS,SAAWrC,IAGrE/T,KAAKk/B,cAActjB,EAAK1pB,EAAGikB,EAAYpC,EACzC,CACF,CAEAk0B,uBACE,MAAMj8B,EAAOhM,KAAK02B,YAClB,IAAItqB,EAAQ,EAQZ,OANAJ,EAAKmN,KAAKpO,SAAQ,CAAC6d,EAAS3kB,MACrB2D,MAAM5H,KAAKm8B,UAAUl4B,GAAO/S,IAAM8O,KAAKmR,MAAMiyB,kBAAkBn/B,IAClEmI,OAIGA,CACT,CAKA87B,cAAcjkC,EAAO8P,EAAMi0B,GACzB,OAAOhoC,KAAKmR,MAAMiyB,kBAAkBn/B,GAChC+D,GAAUhI,KAAK49B,0BAA0B35B,EAAO8P,GAAMnL,OAASo/B,GAC/D,CACN,qDHgCa,cAA4BrQ,GAEzCC,UAAY,MAKZA,gBAAkB,CAChBa,oBAAoB,EACpBC,gBAAiB,MAEjB0P,mBAAoB,GACpBC,cAAe,GACfC,SAAS,EAET/xB,WAAY,CACVzG,QAAS,CACPlQ,KAAM,SACNuW,WAAY,CAAC,IAAK,IAAK,OAAQ,QAAS,aAQ9CyhB,iBAAmB,CACjBnjB,OAAQ,CACN6xB,QAAS,CACP1mC,KAAM,WACNqX,QAAQ,EACRK,KAAM,CACJL,QAAQ,IAGZsvB,QAAS,CACP3mC,KAAM,SACNsX,aAAa,KAWnB0kB,mBAAmB5vB,EAAMmN,EAAM9P,EAAO+C,GACpC,OAAOw1B,GAAsB51B,EAAMmN,EAAM9P,EAAO+C,EAClD,CAOAsvB,eAAe1vB,EAAMmN,EAAM9P,EAAO+C,GAChC,OAAOw1B,GAAsB51B,EAAMmN,EAAM9P,EAAO+C,EAClD,CAOAuvB,gBAAgB3vB,EAAMmN,EAAM9P,EAAO+C,GACjC,MAAM,OAACE,EAAA,OAAQ+pB,GAAUrqB,GACnB,SAACiwB,EAAW,aAAKC,EAAW,KAAOl8B,KAAKklB,SACxCoV,EAA2B,MAAhBhuB,EAAOE,KAAeyvB,EAAWC,EAC5C3B,EAA2B,MAAhBlE,EAAO7pB,KAAeyvB,EAAWC,EAC5C/W,EAAS,GACf,IAAIjzB,EAAG2R,EAAMwC,EAAMjG,EACnB,IAAKlO,EAAImX,EAAOxF,EAAOwF,EAAQ+C,EAAOla,EAAI2R,IAAQ3R,EAChDkO,EAAM+Y,EAAKjnB,GACXmU,EAAO,CAAC,EACRA,EAAKiG,EAAOE,MAAQF,EAAO8Y,MAAM7f,GAAiBnF,EAAKk6B,GAAWpoC,GAClEizB,EAAOvf,KAAKw7B,GAAW77B,GAAiBnF,EAAKm6B,GAAWl0B,EAAMgwB,EAAQnkC,IAExE,OAAOizB,CACT,CAKAkX,sBAAsB/0B,EAAOkN,EAAO2Q,EAAQsQ,GAC1C8N,MAAMlH,sBAAsB/0B,EAAOkN,EAAO2Q,EAAQsQ,GAClD,MAAMqM,EAAS3c,EAAOuc,QAClBI,GAAUttB,IAAUxU,KAAK02B,YAAYL,SAEvC/uB,EAAM3X,IAAMF,KAAKE,IAAI2X,EAAM3X,IAAKmyC,EAAOnyC,KACvC2X,EAAM5X,IAAMD,KAAKC,IAAI4X,EAAM5X,IAAKoyC,EAAOpyC,KAE3C,CAMAwtC,iBACE,OAAO,CACT,CAKAC,iBAAiBl5B,GACf,MAAM+H,EAAOhM,KAAK02B,aACZ,OAACpqB,EAAA,OAAQ+pB,GAAUrqB,EACnBmZ,EAASnlB,KAAKm8B,UAAUl4B,GACxB69B,EAAS3c,EAAOuc,QAChBx/B,EAAQ2/B,GAAWC,GACrB,IAAMA,EAAOz4B,MAAQ,KAAOy4B,EAAOx4B,IAAM,IACzC,GAAK+sB,EAAOgH,iBAAiBlY,EAAOkR,EAAO7pB,OAE/C,MAAO,CACL4wB,MAAO,GAAK9wB,EAAO+wB,iBAAiBlY,EAAO7Y,EAAOE,OAClDtK,QAEJ,CAEAy2B,aACE34B,KAAKq4B,qBAAsB,EAE3BkL,MAAM5K,aAEO34B,KAAK02B,YACbjB,MAAQz1B,KAAKk5B,aAAazD,KACjC,CAEAlC,OAAOxf,GACL,MAAM/H,EAAOhM,KAAK02B,YAClB12B,KAAK+/B,eAAe/zB,EAAKmN,KAAM,EAAGnN,EAAKmN,KAAKtnB,OAAQkiB,EACtD,CAEAgsB,eAAewI,EAAMl/B,EAAO+C,EAAO2H,GACjC,MAAMomB,EAAiB,UAATpmB,GACR,MAAC9P,EAAOyyB,aAAa,OAACL,IAAWr2B,KACjC46B,EAAOvE,EAAO2Q,eACd9E,EAAa7L,EAAOmS,eACpBC,EAAQzoC,KAAK0oC,aACb,cAAC9J,EAAa,eAAED,GAAkB3+B,KAAK8+B,kBAAkBz1B,EAAO0K,GAEtE,IAAK,IAAI7hB,EAAImX,EAAOnX,EAAImX,EAAQ+C,EAAOla,IAAK,CAC1C,MAAMizB,EAASnlB,KAAKm8B,UAAUjqC,GACxBy2C,EAAUxO,GAASl4B,EAAckjB,EAAOkR,EAAO7pB,OAAS,CAACouB,OAAMgO,KAAMhO,GAAQ56B,KAAK6oC,yBAAyB32C,GAC3G42C,EAAU9oC,KAAK+oC,yBAAyB72C,EAAGu2C,GAC3ChT,GAAStQ,EAAOwR,SAAW,CAAC,GAAGN,EAAO7pB,MAEtC2J,EAAa,CACjB+rB,aACAtH,KAAM+N,EAAQ/N,KACdwH,oBAAqB3M,GAASoM,GAAW1c,EAAOuc,UAAaz9B,IAAUwxB,EAAMwB,MAAQhzB,IAAUwxB,EAAMyB,QACrG/jC,EAAG+uC,EAAayG,EAAQC,KAAOE,EAAQE,OACvC1jC,EAAG48B,EAAa4G,EAAQE,OAASL,EAAQC,KACzChuB,OAAQsnB,EAAa4G,EAAQ1iC,KAAO3W,KAAK2X,IAAIuhC,EAAQviC,MACrD6R,MAAOiqB,EAAazyC,KAAK2X,IAAIuhC,EAAQviC,MAAQ0iC,EAAQ1iC,MAGnDu4B,IACFxoB,EAAWzR,QAAUk6B,GAAiB5+B,KAAK49B,0BAA0B1rC,EAAGq2C,EAAKr2C,GAAGkkB,OAAS,SAAWrC,IAEtG,MAAMrP,EAAUyR,EAAWzR,SAAW6jC,EAAKr2C,GAAGwS,QAC9Cq9B,GAAiB5rB,EAAYzR,EAAS+wB,EAAOxxB,GAC7Cw+B,GAAiBtsB,EAAYzR,EAAS+jC,EAAMzpC,OAC5CgB,KAAKk/B,cAAcqJ,EAAKr2C,GAAIA,EAAGikB,EAAYpC,EAC7C,CACF,CASAk1B,WAAW5+B,EAAMwzB,GACf,MAAM,OAACvxB,GAAUtM,KAAK02B,YAChBpB,EAAWhpB,EAAOiqB,wBAAwBv2B,KAAK+3B,OAClDlU,QAAO7X,GAAQA,EAAKyqB,WAAW/xB,QAAQ4jC,UACpCxS,EAAUxpB,EAAO5H,QAAQoxB,QACzBE,EAAS,GAETkT,EAAYl9B,IAChB,MAAMmZ,EAASnZ,EAAKyqB,WAAW0F,UAAU0B,GACnCx8B,EAAM8jB,GAAUA,EAAOnZ,EAAKqqB,OAAO7pB,MAEzC,GAAIvK,EAAcZ,IAAQuG,MAAMvG,GAC9B,OAAO,GAIX,IAAK,MAAM2K,KAAQspB,EACjB,SAAkBhkC,IAAdusC,IAA2BqL,EAASl9B,QASxB,IAAZ8pB,IAAqD,IAAhCE,EAAOxxB,QAAQwH,EAAKypB,aAClCnkC,IAAZwkC,QAAwCxkC,IAAf0a,EAAKypB,QAC3BO,EAAOpwB,KAAKoG,EAAKypB,OAEfzpB,EAAK/H,QAAUoG,GACjB,MAWJ,OAJK2rB,EAAOnkC,QACVmkC,EAAOpwB,UAAKtU,GAGP0kC,CACT,CAMAmT,eAAellC,GACb,OAAOjE,KAAKipC,gBAAW33C,EAAW2S,GAAOpS,MAC3C,CAUAu3C,eAAeplC,EAAc+Q,EAAM8oB,GACjC,MAAM7H,EAASh2B,KAAKipC,WAAWjlC,EAAc65B,GACvC55B,OAAkB3S,IAAVyjB,EACVihB,EAAOxxB,QAAQuQ,IACd,EAEL,OAAmB,IAAX9Q,EACJ+xB,EAAOnkC,OAAS,EAChBoS,CACN,CAKAykC,YACE,MAAMprB,EAAOtd,KAAK0E,QACZsH,EAAOhM,KAAK02B,YACZpqB,EAASN,EAAKM,OACd+8B,EAAS,GACf,IAAIn3C,EAAG2R,EAEP,IAAK3R,EAAI,EAAG2R,EAAOmI,EAAKmN,KAAKtnB,OAAQK,EAAI2R,IAAQ3R,EAC/Cm3C,EAAOzjC,KAAK0G,EAAOM,iBAAiB5M,KAAKm8B,UAAUjqC,GAAGoa,EAAOE,MAAOta,IAGtE,MAAMo3C,EAAehsB,EAAKgsB,aAG1B,MAAO,CACL35C,IAHU25C,GAAgB7I,GAAqBz0B,GAI/Cq9B,SACAhgC,MAAOiD,EAAOi9B,YACdjgC,IAAKgD,EAAOk9B,UACZC,WAAYzpC,KAAKmpC,iBACjB30B,MAAOlI,EACPg8B,QAAShrB,EAAKgrB,QAEdtpC,MAAOsqC,EAAe,EAAIhsB,EAAK8qB,mBAAqB9qB,EAAK+qB,cAE7D,CAMAQ,yBAAyB5kC,GACvB,MAAOyyB,aAAa,OAACL,EAAA,SAAQwC,EAAU50B,MAAOD,GAAeU,SAAUk2B,KAAM8O,EAAS,aAAEC,IAAiB3pC,KACnG4pC,EAAaF,GAAa,EAC1BvkB,EAASnlB,KAAKm8B,UAAUl4B,GACxB69B,EAAS3c,EAAOuc,QAChBmI,EAAWhI,GAAWC,GAC5B,IAGI8G,EAAMxiC,EAHNlE,EAAQijB,EAAOkR,EAAO7pB,MACtBnD,EAAQ,EACRxX,EAASgnC,EAAW74B,KAAKw1B,WAAWa,EAAQlR,EAAQ0T,GAAY32B,EAGhErQ,IAAWqQ,IACbmH,EAAQxX,EAASqQ,EACjBrQ,EAASqQ,GAGP2nC,IACF3nC,EAAQ4/B,EAAON,SACf3vC,EAASiwC,EAAOL,OAASK,EAAON,SAElB,IAAVt/B,GAAe+E,GAAK/E,KAAW+E,GAAK66B,EAAOL,UAC7Cp4B,EAAQ,GAEVA,GAASnH,GAGX,MAAMo/B,EAAcr/B,EAAcynC,IAAeG,EAAuBxgC,EAAZqgC,EAC5D,IAAI9O,EAAOvE,EAAOzpB,iBAAiB00B,GAWnC,GAREsH,EADE5oC,KAAKmR,MAAMiyB,kBAAkBn/B,GACxBoyB,EAAOzpB,iBAAiBvD,EAAQxX,GAGhC+oC,EAGTx0B,EAAOwiC,EAAOhO,EAEVnrC,KAAK2X,IAAIhB,GAAQujC,EAAc,CACjCvjC,EArZN,SAAiBA,EAAMiwB,EAAQuT,GAC7B,OAAa,IAATxjC,EACKa,GAAKb,IAENiwB,EAAOmS,eAAiB,GAAK,IAAMnS,EAAO1mC,KAAOi6C,EAAa,GAAK,EAC7E,CAgZaE,CAAQ1jC,EAAMiwB,EAAQuT,GAAcD,EACvCznC,IAAU0nC,IACZhP,GAAQx0B,EAAO,GAEjB,MAAM2jC,EAAa1T,EAAO2T,mBAAmB,GACvCC,EAAW5T,EAAO2T,mBAAmB,GACrCr6C,EAAMF,KAAKE,IAAIo6C,EAAYE,GAC3Bv6C,EAAMD,KAAKC,IAAIq6C,EAAYE,GACjCrP,EAAOnrC,KAAKC,IAAID,KAAKE,IAAIirC,EAAMlrC,GAAMC,GACrCi5C,EAAOhO,EAAOx0B,EAEVyyB,IAAagR,IAEf1kB,EAAOwR,QAAQN,EAAO7pB,MAAM2qB,cAAcnzB,GAAgBqyB,EAAO6T,iBAAiBtB,GAAQvS,EAAO6T,iBAAiBtP,IAItH,GAAIA,IAASvE,EAAOzpB,iBAAiBg9B,GAAa,CAChD,MAAMO,EAAWljC,GAAKb,GAAQiwB,EAAO+T,qBAAqBR,GAAc,EACxEhP,GAAQuP,EACR/jC,GAAQ+jC,EAGV,MAAO,CACL/jC,OACAw0B,OACAgO,OACAI,OAAQJ,EAAOxiC,EAAO,EAE1B,CAKA2iC,yBAAyB9kC,EAAOwkC,GAC9B,MAAMj0B,EAAQi0B,EAAMj0B,MACd9P,EAAU1E,KAAK0E,QACfwkC,EAAWxkC,EAAQwkC,SACnBmB,EAAkBxnC,EAAe6B,EAAQ2lC,gBAAiBC,KAChE,IAAItB,EAAQ5iC,EACZ,GAAIqiC,EAAMH,QAAS,CACjB,MAAMmB,EAAaP,EAAWlpC,KAAKmpC,eAAellC,GAASwkC,EAAMgB,WAC3DniC,EAAiC,SAAzB5C,EAAQ4kC,aAphB5B,SAAmCrlC,EAAOwkC,EAAO/jC,EAAS+kC,GACxD,MAAMJ,EAASZ,EAAMY,OACfrI,EAAOqI,EAAOplC,GACpB,IAAI0jB,EAAO1jB,EAAQ,EAAIolC,EAAOplC,EAAQ,GAAK,KACvC4hB,EAAO5hB,EAAQolC,EAAOx3C,OAAS,EAAIw3C,EAAOplC,EAAQ,GAAK,KAC3D,MAAMsmC,EAAU7lC,EAAQ0jC,mBAEX,OAATzgB,IAGFA,EAAOqZ,GAAiB,OAATnb,EAAgB4iB,EAAMn/B,IAAMm/B,EAAMp/B,MAAQwc,EAAOmb,IAGrD,OAATnb,IAEFA,EAAOmb,EAAOA,EAAOrZ,GAGvB,MAAMte,EAAQ23B,GAAQA,EAAOvxC,KAAKE,IAAIg4B,EAAM9B,IAAS,EAAI0kB,EAGzD,MAAO,CACLC,MAHW/6C,KAAK2X,IAAIye,EAAO8B,GAAQ,EAAI4iB,EAGzBd,EACdzqC,MAAO0F,EAAQ2jC,cACfh/B,QAEJ,CA2fUohC,CAA0BxmC,EAAOwkC,EAAO/jC,EAAS+kC,GAjjB3D,SAAkCxlC,EAAOwkC,EAAO/jC,EAAS+kC,GACvD,MAAMiB,EAAYhmC,EAAQ4kC,aAC1B,IAAIljC,EAAMpH,EAaV,OAXIiD,EAAcyoC,IAChBtkC,EAAOqiC,EAAM94C,IAAM+U,EAAQ0jC,mBAC3BppC,EAAQ0F,EAAQ2jC,gBAKhBjiC,EAAOskC,EAAYjB,EACnBzqC,EAAQ,GAGH,CACLwrC,MAAOpkC,EAAOqjC,EACdzqC,QACAqK,MAAOo/B,EAAMY,OAAOplC,GAAUmC,EAAO,EAEzC,CA8hBUukC,CAAyB1mC,EAAOwkC,EAAO/jC,EAAS+kC,GAE9CmB,EAAa5qC,KAAKopC,eAAeppC,KAAKiE,MAAOjE,KAAK02B,YAAYjB,MAAOyT,EAAWjlC,OAAQ3S,GAC9F03C,EAAS1hC,EAAM+B,MAAS/B,EAAMkjC,MAAQI,EAAetjC,EAAMkjC,MAAQ,EACnEpkC,EAAO3W,KAAKE,IAAI06C,EAAiB/iC,EAAMkjC,MAAQljC,EAAMtI,YAGrDgqC,EAASx0B,EAAM5H,iBAAiB5M,KAAKm8B,UAAUl4B,GAAOuQ,EAAMhI,MAAOvI,GACnEmC,EAAO3W,KAAKE,IAAI06C,EAAiB5B,EAAM94C,IAAM84C,EAAMzpC,OAGrD,MAAO,CACL47B,KAAMoO,EAAS5iC,EAAO,EACtBwiC,KAAMI,EAAS5iC,EAAO,EACtB4iC,SACA5iC,OAEJ,CAEA+qB,OACE,MAAMnlB,EAAOhM,KAAK02B,YACZL,EAASrqB,EAAKqqB,OACdwU,EAAQ7+B,EAAKmN,KACbtV,EAAOgnC,EAAMh5C,OACnB,IAAIK,EAAI,EAER,KAAOA,EAAI2R,IAAQ3R,EACsB,OAAnC8N,KAAKm8B,UAAUjqC,GAAGmkC,EAAO7pB,OAAmBq+B,EAAM34C,GAAG0qC,QACvDiO,EAAM34C,GAAGi/B,KAAKnxB,KAAK4X,KAGzB,oBI1oBa,cAA+B+f,GAE5CC,UAAY,SAKZA,gBAAkB,CAChBa,oBAAoB,EACpBC,gBAAiB,QAEjBniB,WAAY,CACVzG,QAAS,CACPlQ,KAAM,SACNuW,WAAY,CAAC,IAAK,IAAK,cAAe,aAQ5CyhB,iBAAmB,CACjBnjB,OAAQ,CACNthB,EAAG,CACDyM,KAAM,UAER0F,EAAG,CACD1F,KAAM,YAKZ+4B,aACE34B,KAAKq4B,qBAAsB,EAC3BkL,MAAM5K,YACR,CAMAiD,mBAAmB5vB,EAAMmN,EAAM9P,EAAO+C,GACpC,MAAM+Y,EAASoe,MAAM3H,mBAAmB5vB,EAAMmN,EAAM9P,EAAO+C,GAC3D,IAAK,IAAIla,EAAI,EAAGA,EAAIizB,EAAOtzB,OAAQK,IACjCizB,EAAOjzB,GAAGwvC,QAAU1hC,KAAK49B,0BAA0B1rC,EAAImX,GAAOiS,OAEhE,OAAO6J,CACT,CAMAuW,eAAe1vB,EAAMmN,EAAM9P,EAAO+C,GAChC,MAAM+Y,EAASoe,MAAM7H,eAAe1vB,EAAMmN,EAAM9P,EAAO+C,GACvD,IAAK,IAAIla,EAAI,EAAGA,EAAIizB,EAAOtzB,OAAQK,IAAK,CACtC,MAAMmU,EAAO8S,EAAK9P,EAAQnX,GAC1BizB,EAAOjzB,GAAGwvC,QAAU7+B,EAAewD,EAAK,GAAIrG,KAAK49B,0BAA0B1rC,EAAImX,GAAOiS,OACxF,CACA,OAAO6J,CACT,CAMAwW,gBAAgB3vB,EAAMmN,EAAM9P,EAAO+C,GACjC,MAAM+Y,EAASoe,MAAM5H,gBAAgB3vB,EAAMmN,EAAM9P,EAAO+C,GACxD,IAAK,IAAIla,EAAI,EAAGA,EAAIizB,EAAOtzB,OAAQK,IAAK,CACtC,MAAMmU,EAAO8S,EAAK9P,EAAQnX,GAC1BizB,EAAOjzB,GAAGwvC,QAAU7+B,EAAewD,GAAQA,EAAKnV,IAAMmV,EAAKnV,EAAG8O,KAAK49B,0BAA0B1rC,EAAImX,GAAOiS,OAC1G,CACA,OAAO6J,CACT,CAKA+X,iBACE,MAAM/jB,EAAOnZ,KAAK02B,YAAYvd,KAE9B,IAAIzpB,EAAM,EACV,IAAK,IAAIwC,EAAIinB,EAAKtnB,OAAS,EAAGK,GAAK,IAAKA,EACtCxC,EAAMD,KAAKC,IAAIA,EAAKypB,EAAKjnB,GAAGkU,KAAKpG,KAAK49B,0BAA0B1rC,IAAM,GAExE,OAAOxC,EAAM,GAAKA,CACpB,CAKAytC,iBAAiBl5B,GACf,MAAM+H,EAAOhM,KAAK02B,YACZoF,EAAS97B,KAAKmR,MAAMgI,KAAK2iB,QAAU,IACnC,OAAChvB,EAAA,OAAQC,GAAUf,EACnBmZ,EAASnlB,KAAKm8B,UAAUl4B,GACxB9Q,EAAI2Z,EAAOuwB,iBAAiBlY,EAAOhyB,GACnCmS,EAAIyH,EAAOswB,iBAAiBlY,EAAO7f,GACnCpU,EAAIi0B,EAAOuc,QAEjB,MAAO,CACLtE,MAAOtB,EAAO73B,IAAU,GACxB/B,MAAO,IAAM/O,EAAI,KAAOmS,GAAKpU,EAAI,KAAOA,EAAI,IAAM,IAEtD,CAEAqiC,OAAOxf,GACL,MAAM9H,EAASjM,KAAK02B,YAAYvd,KAGhCnZ,KAAK+/B,eAAe9zB,EAAQ,EAAGA,EAAOpa,OAAQkiB,EAChD,CAEAgsB,eAAe9zB,EAAQ5C,EAAO+C,EAAO2H,GACnC,MAAMomB,EAAiB,UAATpmB,GACR,OAACzH,EAAA,OAAQ+pB,GAAUr2B,KAAK02B,aACxB,cAACkI,EAAa,eAAED,GAAkB3+B,KAAK8+B,kBAAkBz1B,EAAO0K,GAChE6iB,EAAQtqB,EAAOE,KACfqqB,EAAQR,EAAO7pB,KAErB,IAAK,IAAIta,EAAImX,EAAOnX,EAAImX,EAAQ+C,EAAOla,IAAK,CAC1C,MAAMoqB,EAAQrQ,EAAO/Z,GACfizB,GAAUgV,GAASn6B,KAAKm8B,UAAUjqC,GAClCikB,EAAa,CAAC,EACd8Q,EAAS9Q,EAAWygB,GAASuD,EAAQ7tB,EAAO09B,mBAAmB,IAAO19B,EAAOM,iBAAiBuY,EAAOyR,IACrG1P,EAAS/Q,EAAW0gB,GAASsD,EAAQ9D,EAAO2Q,eAAiB3Q,EAAOzpB,iBAAiBuY,EAAO0R,IAElG1gB,EAAWoP,KAAO3d,MAAMqf,IAAWrf,MAAMsf,GAErCyX,IACFxoB,EAAWzR,QAAUk6B,GAAiB5+B,KAAK49B,0BAA0B1rC,EAAGoqB,EAAMlG,OAAS,SAAWrC,GAE9FomB,IACFhkB,EAAWzR,QAAQ4W,OAAS,IAIhCtb,KAAKk/B,cAAc5iB,EAAOpqB,EAAGikB,EAAYpC,EAC3C,CACF,CAOA6pB,0BAA0B35B,EAAO8P,GAC/B,MAAMoR,EAASnlB,KAAKm8B,UAAUl4B,GAC9B,IAAI8M,EAASwyB,MAAM3F,0BAA0B35B,EAAO8P,GAGhDhD,EAAO2jB,UACT3jB,EAAS9S,OAAOmB,OAAO,CAAC,EAAG2R,EAAQ,CAAC2jB,SAAS,KAI/C,MAAMpZ,EAASvK,EAAOuK,OAMtB,MALa,WAATvH,IACFhD,EAAOuK,OAAS,GAElBvK,EAAOuK,QAAUzY,EAAesiB,GAAUA,EAAOuc,QAASpmB,GAEnDvK,CACT,yDCpKa,cAA4B4xB,GAEzC/K,UAAY,MAKZA,gBAAkB,CAEhBkL,OAAQ,EAGRznB,SAAU,EAGV0nB,cAAe,IAGfznB,OAAQ,gDClBG,cAA8Bqc,GAE3CC,UAAY,QAKZA,gBAAkB,CAChBa,mBAAoB,OACpBC,gBAAiB,QACjB7kB,UAAW,IACXa,UAAU,EACVxB,SAAU,CACR0K,KAAM,CACJ1B,KAAM,WAQZ0b,iBAAmB,CACjBnN,YAAa,EAEbhW,OAAQ,CACNvjB,EAAG,CACD0O,KAAM,kBAQZu9B,iBAAiBl5B,GACf,MAAMoyB,EAASr2B,KAAK02B,YAAYL,OAC1BlR,EAASnlB,KAAKm8B,UAAUl4B,GAE9B,MAAO,CACLm5B,MAAO/G,EAAO0F,YAAY93B,GAC1B/B,MAAO,GAAKm0B,EAAOgH,iBAAiBlY,EAAOkR,EAAO7pB,OAEtD,CAEAmvB,gBAAgB3vB,EAAMmN,EAAM9P,EAAO+C,GACjC,OAAO6Y,GAA4BsiB,KAAKvnC,KAAjCilB,CAAuCjZ,EAAMmN,EAAM9P,EAAO+C,EACnE,CAEAmnB,OAAOxf,GACL,MAAM/H,EAAOhM,KAAK02B,YACZ9Y,EAAO5R,EAAKitB,QACZhtB,EAASD,EAAKmN,MAAQ,GACtB2iB,EAAS9vB,EAAKM,OAAOyvB,YAK3B,GAFAne,EAAK3R,OAASA,EAED,WAAT8H,EAAmB,CACrB,MAAMrP,EAAU1E,KAAK29B,6BAA6B5pB,GAC7C/T,KAAK0E,QAAQgQ,WAChBhQ,EAAQyX,YAAc,GAGxB,MAAMhG,EAAa,CACjB8c,OAAO,EACP6X,UAAWhP,EAAOjqC,SAAWoa,EAAOpa,OACpC6S,WAGF1E,KAAKk/B,cAActhB,OAAMtsB,EAAW6kB,EAAYpC,GAIlD/T,KAAK+/B,eAAe9zB,EAAQ,EAAGA,EAAOpa,OAAQkiB,EAChD,CAEAgsB,eAAe9zB,EAAQ5C,EAAO+C,EAAO2H,GACnC,MAAMS,EAAQxU,KAAK02B,YAAYqD,OACzBI,EAAiB,UAATpmB,EAEd,IAAK,IAAI7hB,EAAImX,EAAOnX,EAAImX,EAAQ+C,EAAOla,IAAK,CAC1C,MAAMoqB,EAAQrQ,EAAO/Z,GACfwS,EAAU1E,KAAK49B,0BAA0B1rC,EAAGoqB,EAAMlG,OAAS,SAAWrC,GACtEg3B,EAAgBv2B,EAAMw2B,yBAAyB94C,EAAG8N,KAAKm8B,UAAUjqC,GAAGhB,GAEpEiC,EAAIgnC,EAAQ3lB,EAAMozB,QAAUmD,EAAc53C,EAC1CmS,EAAI60B,EAAQ3lB,EAAMqzB,QAAUkD,EAAczlC,EAE1C6Q,EAAa,CACjBhjB,IACAmS,IACAsD,MAAOmiC,EAAcniC,MACrB2c,KAAM3d,MAAMzU,IAAMyU,MAAMtC,GACxBZ,WAGF1E,KAAKk/B,cAAc5iB,EAAOpqB,EAAGikB,EAAYpC,EAC3C,CACF,qBCjGa,cAAgC4jB,GAE7CC,UAAY,UAKZA,gBAAkB,CAChBa,oBAAoB,EACpBC,gBAAiB,QACjBhkB,UAAU,EACVwH,MAAM,GAMR0b,iBAAmB,CAEjB9jB,YAAa,CACXC,KAAM,SAGRU,OAAQ,CACNthB,EAAG,CACDyM,KAAM,UAER0F,EAAG,CACD1F,KAAM,YAQZu9B,iBAAiBl5B,GACf,MAAM+H,EAAOhM,KAAK02B,YACZoF,EAAS97B,KAAKmR,MAAMgI,KAAK2iB,QAAU,IACnC,OAAChvB,EAAA,OAAQC,GAAUf,EACnBmZ,EAASnlB,KAAKm8B,UAAUl4B,GACxB9Q,EAAI2Z,EAAOuwB,iBAAiBlY,EAAOhyB,GACnCmS,EAAIyH,EAAOswB,iBAAiBlY,EAAO7f,GAEzC,MAAO,CACL83B,MAAOtB,EAAO73B,IAAU,GACxB/B,MAAO,IAAM/O,EAAI,KAAOmS,EAAI,IAEhC,CAEAiuB,OAAOxf,GACL,MAAM/H,EAAOhM,KAAK02B,aACXvd,KAAMlN,EAAS,IAAMD,EAEtBE,EAAqBlM,KAAKmR,MAAM0tB,oBACtC,IAAI,MAACx1B,EAAA,MAAO+C,GAASL,GAAiCC,EAAMC,EAAQC,GAUpE,GARAlM,KAAKm4B,WAAa9uB,EAClBrJ,KAAKo4B,WAAahsB,EAEdS,GAAoBb,KACtB3C,EAAQ,EACR+C,EAAQH,EAAOpa,QAGbmO,KAAK0E,QAAQgQ,SAAU,CAGpB1U,KAAKy4B,oBACRz4B,KAAK84B,cAEP,MAAOG,QAASrb,EAAA,SAAM4oB,GAAYx6B,EAGlC4R,EAAKmR,OAAS/uB,KAAKmR,MACnByM,EAAKsR,cAAgBlvB,KAAKiE,MAC1B2Z,EAAK6oB,aAAeD,EAASC,WAC7B7oB,EAAK3R,OAASA,EAEd,MAAMvH,EAAU1E,KAAK29B,6BAA6B5pB,GAClDrP,EAAQspB,QAAUhuB,KAAK0E,QAAQspB,QAC/BhuB,KAAKk/B,cAActhB,OAAMtsB,EAAW,CAClCo1C,UAAWx6B,EACXxH,WACCqP,EACL,MAAW/T,KAAKy4B,4BAEPzsB,EAAKitB,QACZj5B,KAAKy4B,oBAAqB,GAI5Bz4B,KAAK+/B,eAAe9zB,EAAQ5C,EAAO+C,EAAO2H,EAC5C,CAEA+kB,cACE,MAAM,SAACpkB,GAAY1U,KAAK0E,SAEnB1E,KAAKy4B,oBAAsB/jB,IAC9B1U,KAAKy4B,mBAAqBz4B,KAAKmR,MAAM85B,SAASC,WAAW,SAG3D3H,MAAMzK,aACR,CAEAiH,eAAe9zB,EAAQ5C,EAAO+C,EAAO2H,GACnC,MAAMomB,EAAiB,UAATpmB,GACR,OAACzH,EAAA,OAAQ+pB,EAAA,SAAQwC,EAAA,SAAU2N,GAAYxmC,KAAK02B,YAC5CqI,EAAY/+B,KAAK49B,0BAA0Bv0B,EAAO0K,GAClD6qB,EAAgB5+B,KAAK0+B,iBAAiBK,GACtCJ,EAAiB3+B,KAAK2+B,eAAe5qB,EAAM6qB,GAC3ChI,EAAQtqB,EAAOE,KACfqqB,EAAQR,EAAO7pB,MACf,SAAC+a,EAAA,QAAUyG,GAAWhuB,KAAK0E,QAC3BiiC,EAAeh/B,GAAS4f,GAAYA,EAAW9kB,OAAOkE,kBACtDigC,EAAe5mC,KAAKmR,MAAM0tB,qBAAuB1E,GAAkB,SAATpmB,EAChE,IAAI+yB,EAAaz9B,EAAQ,GAAKrJ,KAAKm8B,UAAU9yB,EAAQ,GAErD,IAAK,IAAInX,EAAImX,EAAOnX,EAAImX,EAAQ+C,IAASla,EAAG,CAC1C,MAAMoqB,EAAQrQ,EAAO/Z,GACfizB,EAASnlB,KAAKm8B,UAAUjqC,GACxBikB,EAAaywB,EAAetqB,EAAQ,GACpCyqB,EAAW9kC,EAAckjB,EAAO0R,IAChC5P,EAAS9Q,EAAWygB,GAAStqB,EAAOM,iBAAiBuY,EAAOyR,GAAQ1kC,GACpEg1B,EAAS/Q,EAAW0gB,GAASsD,GAAS4M,EAAW1Q,EAAO2Q,eAAiB3Q,EAAOzpB,iBAAiBisB,EAAW74B,KAAKw1B,WAAWa,EAAQlR,EAAQ0T,GAAY1T,EAAO0R,GAAQ3kC,GAE7KikB,EAAWoP,KAAO3d,MAAMqf,IAAWrf,MAAMsf,IAAW6f,EACpD5wB,EAAW+b,KAAOhgC,EAAI,GAAKzC,KAAM2X,IAAI+d,EAAOyR,GAASkQ,EAAWlQ,IAAW+P,EACvE3Y,IACF7X,EAAWgP,OAASA,EACpBhP,EAAW2nB,IAAM0I,EAASrtB,KAAKjnB,IAG7BysC,IACFxoB,EAAWzR,QAAUk6B,GAAiB5+B,KAAK49B,0BAA0B1rC,EAAGoqB,EAAMlG,OAAS,SAAWrC,IAG/F6yB,GACH5mC,KAAKk/B,cAAc5iB,EAAOpqB,EAAGikB,EAAYpC,GAG3C+yB,EAAa3hB,CACf,CAEAnlB,KAAKi/B,oBAAoBL,EAAe7qB,EAAMgrB,EAChD,CAKA7B,iBACE,MAAMlxB,EAAOhM,KAAK02B,YACZvd,EAAOnN,EAAKmN,MAAQ,GAE1B,IAAKnZ,KAAK0E,QAAQgQ,SAAU,CAC1B,IAAIhlB,EAAM,EACV,IAAK,IAAIwC,EAAIinB,EAAKtnB,OAAS,EAAGK,GAAK,IAAKA,EACtCxC,EAAMD,KAAKC,IAAIA,EAAKypB,EAAKjnB,GAAGkU,KAAKpG,KAAK49B,0BAA0B1rC,IAAM,GAExE,OAAOxC,EAAM,GAAKA,EAGpB,MAAMupC,EAAUjtB,EAAKitB,QACfnhB,EAASmhB,EAAQv0B,SAAWu0B,EAAQv0B,QAAQyX,aAAe,EAEjE,IAAKhD,EAAKtnB,OACR,OAAOimB,EAGT,MAAM4N,EAAavM,EAAK,GAAG/S,KAAKpG,KAAK49B,0BAA0B,IACzDqJ,EAAY9tB,EAAKA,EAAKtnB,OAAS,GAAGuU,KAAKpG,KAAK49B,0BAA0BzkB,EAAKtnB,OAAS,IAC1F,OAAOpC,KAAKC,IAAIooB,EAAQ4N,EAAYuhB,GAAa,CACnD,KCjHF,SAASkE,KACP,MAAM,IAAI/nB,MAAM,kFAClB,CAQA,MAAMgoB,GAYJxT,gBACEyT,GAEAptC,OAAOmB,OAAOgsC,GAAgBjpC,UAAWkpC,EAC3C,CAES3mC,QAET/E,YAAY+E,GACV1E,KAAK0E,QAAUA,GAAW,CAAC,CAC7B,CAGA4mC,OAAQ,CAERC,UACE,OAAOJ,IACT,CAEA/lB,QACE,OAAO+lB,IACT,CAEAt6B,SACE,OAAOs6B,IACT,CAEA7nB,MACE,OAAO6nB,IACT,CAEAK,OACE,OAAOL,IACT,CAEAM,UACE,OAAON,IACT,CAEAO,QACE,OAAOP,IACT,EAGF,IAAAQ,GACSP,GC9GT,SAASQ,GAAaC,EAASr/B,EAAMtK,EAAO8R,GAC1C,MAAM,WAACyiB,EAAU,KAAEtd,EAAA,QAAM9M,GAAWw/B,EAC9Bv/B,EAASmqB,EAAWC,YAAYpqB,OACtC,GAAIA,GAAUE,IAASF,EAAOE,MAAiB,MAATA,GAAgBH,GAAW8M,EAAKtnB,OAAQ,CAC5E,MAAMi6C,EAAex/B,EAAOy/B,eAAiBxhC,GAAgBH,GAC7D,IAAK4J,EACH,OAAO83B,EAAa3yB,EAAM3M,EAAMtK,GAC3B,GAAIu0B,EAAWyB,eAAgB,CAIpC,MAAMjM,EAAK9S,EAAK,GACV7R,EAA+B,oBAAhB2kB,EAAG+f,UAA2B/f,EAAG+f,SAASx/B,GAC/D,GAAIlF,EAAO,CACT,MAAM+B,EAAQyiC,EAAa3yB,EAAM3M,EAAMtK,EAAQoF,GACzCgC,EAAMwiC,EAAa3yB,EAAM3M,EAAMtK,EAAQoF,GAC7C,MAAO,CAAC6C,GAAId,EAAMc,GAAID,GAAIZ,EAAIY,MAKpC,MAAO,CAACC,GAAI,EAAGD,GAAIiP,EAAKtnB,OAAS,EACnC,CAUA,SAASo6C,GAAyB96B,EAAO3E,EAAM0/B,EAAUC,EAASn4B,GAChE,MAAMshB,EAAWnkB,EAAMi7B,+BACjBlqC,EAAQgqC,EAAS1/B,GACvB,IAAK,IAAIta,EAAI,EAAG2R,EAAOyxB,EAASzjC,OAAQK,EAAI2R,IAAQ3R,EAAG,CACrD,MAAM,MAAC+R,EAAA,KAAOkV,GAAQmc,EAASpjC,IACzB,GAACiY,EAAA,GAAID,GAAM0hC,GAAatW,EAASpjC,GAAIsa,EAAMtK,EAAO8R,GACxD,IAAK,IAAI7V,EAAIgM,EAAIhM,GAAK+L,IAAM/L,EAAG,CAC7B,MAAMyqB,EAAUzP,EAAKhb,GAChByqB,EAAQrD,MACX4mB,EAAQvjB,EAAS3kB,EAAO9F,EAE5B,CACF,CACF,CA2BA,SAASkuC,GAAkBl7B,EAAO+6B,EAAU1/B,EAAM8/B,EAAkBr4B,GAClE,MAAMhJ,EAAQ,GAEd,IAAKgJ,IAAqB9C,EAAMo7B,cAAcL,GAC5C,OAAOjhC,EAaT,OADAghC,GAAyB96B,EAAO3E,EAAM0/B,GATf,SAAStjB,EAAS5kB,EAAcC,IAChDgQ,GAAqBoI,GAAeuM,EAASzX,EAAMusB,UAAW,KAG/D9U,EAAQ4jB,QAAQN,EAAS/4C,EAAG+4C,EAAS5mC,EAAGgnC,IAC1CrhC,EAAMrF,KAAK,CAACgjB,UAAS5kB,eAAcC,SAEvC,IAEgE,GACzDgH,CACT,CAoCA,SAASwhC,GAAyBt7B,EAAO+6B,EAAU1/B,EAAMwH,EAAWs4B,EAAkBr4B,GACpF,IAAIhJ,EAAQ,GACZ,MAAMyhC,EA5ER,SAAkClgC,GAChC,MAAMmgC,GAA8B,IAAvBngC,EAAKhI,QAAQ,KACpBooC,GAA8B,IAAvBpgC,EAAKhI,QAAQ,KAE1B,OAAO,SAASwE,EAAKC,GACnB,MAAM4jC,EAASF,EAAOl9C,KAAK2X,IAAI4B,EAAI7V,EAAI8V,EAAI9V,GAAK,EAC1C25C,EAASF,EAAOn9C,KAAK2X,IAAI4B,EAAI1D,EAAI2D,EAAI3D,GAAK,EAChD,OAAO7V,KAAKkZ,KAAKlZ,KAAKoP,IAAIguC,EAAQ,GAAKp9C,KAAKoP,IAAIiuC,EAAQ,GAC1D,CACF,CAmEyBC,CAAyBvgC,GAChD,IAAIwgC,EAAcvqC,OAAOkE,kBAyBzB,OADAslC,GAAyB96B,EAAO3E,EAAM0/B,GAtBtC,SAAwBtjB,EAAS5kB,EAAcC,GAC7C,MAAMuoC,EAAU5jB,EAAQ4jB,QAAQN,EAAS/4C,EAAG+4C,EAAS5mC,EAAGgnC,GACxD,GAAIt4B,IAAcw4B,EAChB,OAGF,MAAMxD,EAASpgB,EAAQqkB,eAAeX,GAEtC,OADsBr4B,GAAoB9C,EAAMo7B,cAAcvD,MACzCwD,EACnB,OAGF,MAAM1jC,EAAW4jC,EAAeR,EAAUlD,GACtClgC,EAAWkkC,GACb/hC,EAAQ,CAAC,CAAC2d,UAAS5kB,eAAcC,UACjC+oC,EAAclkC,GACLA,IAAakkC,GAEtB/hC,EAAMrF,KAAK,CAACgjB,UAAS5kB,eAAcC,SAEvC,IAGOgH,CACT,CAYA,SAASiiC,GAAgB/7B,EAAO+6B,EAAU1/B,EAAMwH,EAAWs4B,EAAkBr4B,GAC3E,OAAKA,GAAqB9C,EAAMo7B,cAAcL,GAI9B,MAAT1/B,GAAiBwH,EAEpBy4B,GAAyBt7B,EAAO+6B,EAAU1/B,EAAMwH,EAAWs4B,EAAkBr4B,GA1EnF,SAA+B9C,EAAO+6B,EAAU1/B,EAAM8/B,GACpD,IAAIrhC,EAAQ,GAYZ,OADAghC,GAAyB96B,EAAO3E,EAAM0/B,GATtC,SAAwBtjB,EAAS5kB,EAAcC,GAC7C,MAAM,WAACugC,EAAA,SAAYC,GAAY7b,EAAQukB,SAAS,CAAC,aAAc,YAAab,IACtE,MAAC1jC,GAASP,GAAkBugB,EAAS,CAACz1B,EAAG+4C,EAAS/4C,EAAGmS,EAAG4mC,EAAS5mC,IAEnE8D,GAAcR,EAAO47B,EAAYC,IACnCx5B,EAAMrF,KAAK,CAACgjB,UAAS5kB,eAAcC,SAEvC,IAGOgH,CACT,CA2DMmiC,CAAsBj8B,EAAO+6B,EAAU1/B,EAAM8/B,GAJxC,EAMX,CAWA,SAASe,GAAal8B,EAAO+6B,EAAU1/B,EAAMwH,EAAWs4B,GACtD,MAAMrhC,EAAQ,GACRqiC,EAAuB,MAAT9gC,EAAe,WAAa,WAChD,IAAI+gC,GAAiB,EAWrB,OATAtB,GAAyB96B,EAAO3E,EAAM0/B,GAAU,CAACtjB,EAAS5kB,EAAcC,KAClE2kB,EAAQ0kB,GAAapB,EAAS1/B,GAAO8/B,KACvCrhC,EAAMrF,KAAK,CAACgjB,UAAS5kB,eAAcC,UACnCspC,EAAiBA,GAAkB3kB,EAAQ4jB,QAAQN,EAAS/4C,EAAG+4C,EAAS5mC,EAAGgnC,OAM3Et4B,IAAcu5B,EACT,GAEFtiC,CACT,CAMA,IAAAuiC,GAAe,CAEbvB,4BAGAwB,MAAO,CAYLxpC,MAAMkN,EAAOxgB,EAAG+T,EAAS4nC,GACvB,MAAMJ,EAAW7iB,GAAoB14B,EAAGwgB,GAElC3E,EAAO9H,EAAQ8H,MAAQ,IACvByH,EAAmBvP,EAAQuP,mBAAoB,EAC/ChJ,EAAQvG,EAAQsP,UAClBq4B,GAAkBl7B,EAAO+6B,EAAU1/B,EAAM8/B,EAAkBr4B,GAC3Di5B,GAAgB/7B,EAAO+6B,EAAU1/B,GAAM,EAAO8/B,EAAkBr4B,GAC9Df,EAAW,GAEjB,OAAKjI,EAAMpZ,QAIXsf,EAAMi7B,+BAA+BrhC,SAASiB,IAC5C,MAAM/H,EAAQgH,EAAM,GAAGhH,MACjB2kB,EAAU5c,EAAKmN,KAAKlV,GAGtB2kB,IAAYA,EAAQrD,MACtBrS,EAAStN,KAAK,CAACgjB,UAAS5kB,aAAcgI,EAAK/H,MAAOA,aAI/CiP,GAbE,EAcX,EAYA+lB,QAAQ9nB,EAAOxgB,EAAG+T,EAAS4nC,GACzB,MAAMJ,EAAW7iB,GAAoB14B,EAAGwgB,GAClC3E,EAAO9H,EAAQ8H,MAAQ,KACvByH,EAAmBvP,EAAQuP,mBAAoB,EACrD,IAAIhJ,EAAQvG,EAAQsP,UAChBq4B,GAAkBl7B,EAAO+6B,EAAU1/B,EAAM8/B,EAAkBr4B,GAC7Di5B,GAAgB/7B,EAAO+6B,EAAU1/B,GAAM,EAAO8/B,EAAkBr4B,GAElE,GAAIhJ,EAAMpZ,OAAS,EAAG,CACpB,MAAMmS,EAAeiH,EAAM,GAAGjH,aACxBmV,EAAOhI,EAAM6oB,eAAeh2B,GAAcmV,KAChDlO,EAAQ,GACR,IAAK,IAAI/Y,EAAI,EAAGA,EAAIinB,EAAKtnB,SAAUK,EACjC+Y,EAAMrF,KAAK,CAACgjB,QAASzP,EAAKjnB,GAAI8R,eAAcC,MAAO/R,IAIvD,OAAO+Y,CACT,EAYAqR,MAAK,CAACnL,EAAOxgB,EAAG+T,EAAS4nC,IAIhBD,GAAkBl7B,EAHRkY,GAAoB14B,EAAGwgB,GAC3BzM,EAAQ8H,MAAQ,KAEmB8/B,EADvB5nC,EAAQuP,mBAAoB,GAavDy5B,QAAQv8B,EAAOxgB,EAAG+T,EAAS4nC,GACzB,MAAMJ,EAAW7iB,GAAoB14B,EAAGwgB,GAClC3E,EAAO9H,EAAQ8H,MAAQ,KACvByH,EAAmBvP,EAAQuP,mBAAoB,EACrD,OAAOi5B,GAAgB/7B,EAAO+6B,EAAU1/B,EAAM9H,EAAQsP,UAAWs4B,EAAkBr4B,EACrF,EAWA9gB,EAAC,CAACge,EAAOxgB,EAAG+T,EAAS4nC,IAEZe,GAAal8B,EADHkY,GAAoB14B,EAAGwgB,GACH,IAAKzM,EAAQsP,UAAWs4B,GAY/DhnC,EAAC,CAAC6L,EAAOxgB,EAAG+T,EAAS4nC,IAEZe,GAAal8B,EADHkY,GAAoB14B,EAAGwgB,GACH,IAAKzM,EAAQsP,UAAWs4B,KCpWnE,MAAMqB,GAAmB,CAAC,OAAQ,MAAO,QAAS,UAElD,SAASC,GAAiB9lC,EAAOokC,GAC/B,OAAOpkC,EAAM+b,QAAOx0B,GAAKA,EAAE+5B,MAAQ8iB,GACrC,CAEA,SAAS2B,GAA4B/lC,EAAO0E,GAC1C,OAAO1E,EAAM+b,QAAOx0B,IAA0C,IAArCs+C,GAAiBnpC,QAAQnV,EAAE+5B,MAAe/5B,EAAEs6B,IAAInd,OAASA,GACpF,CAEA,SAASshC,GAAahmC,EAAOrE,GAC3B,OAAOqE,EAAMg5B,MAAK,CAACvwC,EAAGC,KACpB,MAAMsT,EAAKL,EAAUjT,EAAID,EACnBwT,EAAKN,EAAUlT,EAAIC,EACzB,OAAOsT,EAAGrD,SAAWsD,EAAGtD,OACtBqD,EAAGG,MAAQF,EAAGE,MACdH,EAAGrD,OAASsD,EAAGtD,MAAM,GAE3B,CAuCA,SAASstC,GAAcC,EAASC,GAC9B,MAAMjY,EAlBR,SAAqBgY,GACnB,MAAMhY,EAAS,CAAC,EAChB,IAAK,MAAMkY,KAAQF,EAAS,CAC1B,MAAM,MAACvY,EAAK,IAAErM,EAAA,YAAK+kB,GAAeD,EAClC,IAAKzY,IAAUkY,GAAiB57B,SAASqX,GACvC,SAEF,MAAMrG,EAASiT,EAAOP,KAAWO,EAAOP,GAAS,CAACrpB,MAAO,EAAGgiC,OAAQ,EAAG3tC,OAAQ,EAAG2F,KAAM,IACxF2c,EAAO3W,QACP2W,EAAOtiB,QAAU0tC,CACnB,CACA,OAAOnY,CACT,CAMiBqY,CAAYL,IACrB,aAACM,EAAA,cAAcC,GAAiBN,EACtC,IAAI/7C,EAAG2R,EAAM2qC,EACb,IAAKt8C,EAAI,EAAG2R,EAAOmqC,EAAQn8C,OAAQK,EAAI2R,IAAQ3R,EAAG,CAChDs8C,EAASR,EAAQ97C,GACjB,MAAM,SAACu8C,GAAYD,EAAO7kB,IACpB8L,EAAQO,EAAOwY,EAAO/Y,OACtBjD,EAASiD,GAAS+Y,EAAOL,YAAc1Y,EAAMh1B,OAC/C+tC,EAAOtM,YACTsM,EAAOv2B,MAAQua,EAASA,EAAS8b,EAAeG,GAAYR,EAAOS,eACnEF,EAAO5zB,OAAS2zB,IAEhBC,EAAOv2B,MAAQq2B,EACfE,EAAO5zB,OAAS4X,EAASA,EAAS+b,EAAgBE,GAAYR,EAAOU,gBAEzE,CACA,OAAO3Y,CACT,CAsBA,SAAS4Y,GAAeC,EAAYnR,EAAWntC,EAAGC,GAChD,OAAOf,KAAKC,IAAIm/C,EAAWt+C,GAAImtC,EAAUntC,IAAMd,KAAKC,IAAIm/C,EAAWr+C,GAAIktC,EAAUltC,GACnF,CAEA,SAASs+C,GAAiBD,EAAYE,GACpCF,EAAWj4B,IAAMnnB,KAAKC,IAAIm/C,EAAWj4B,IAAKm4B,EAAWn4B,KACrDi4B,EAAW93B,KAAOtnB,KAAKC,IAAIm/C,EAAW93B,KAAMg4B,EAAWh4B,MACvD83B,EAAW/3B,OAASrnB,KAAKC,IAAIm/C,EAAW/3B,OAAQi4B,EAAWj4B,QAC3D+3B,EAAWh4B,MAAQpnB,KAAKC,IAAIm/C,EAAWh4B,MAAOk4B,EAAWl4B,MAC3D,CAEA,SAASm4B,GAAWtR,EAAWuQ,EAAQO,EAAQxY,GAC7C,MAAM,IAAC5M,EAAA,IAAKO,GAAO6kB,EACbK,EAAanR,EAAUmR,WAG7B,IAAKtsC,EAAS6mB,GAAM,CACdolB,EAAOpoC,OAETs3B,EAAUtU,IAAQolB,EAAOpoC,MAE3B,MAAMqvB,EAAQO,EAAOwY,EAAO/Y,QAAU,CAACrvB,KAAM,EAAGgG,MAAO,GACvDqpB,EAAMrvB,KAAO3W,KAAKC,IAAI+lC,EAAMrvB,KAAMooC,EAAOtM,WAAavY,EAAI/O,OAAS+O,EAAI1R,OACvEu2B,EAAOpoC,KAAOqvB,EAAMrvB,KAAOqvB,EAAMrpB,MACjCsxB,EAAUtU,IAAQolB,EAAOpoC,KAGvBujB,EAAIslB,YACNH,GAAiBD,EAAYllB,EAAIslB,cAGnC,MAAMC,EAAWz/C,KAAKC,IAAI,EAAGu+C,EAAOkB,WAAaP,GAAeC,EAAYnR,EAAW,OAAQ,UACzF0R,EAAY3/C,KAAKC,IAAI,EAAGu+C,EAAOoB,YAAcT,GAAeC,EAAYnR,EAAW,MAAO,WAC1F4R,EAAeJ,IAAaxR,EAAU1rC,EACtCu9C,EAAgBH,IAAc1R,EAAUluC,EAK9C,OAJAkuC,EAAU1rC,EAAIk9C,EACdxR,EAAUluC,EAAI4/C,EAGPZ,EAAOtM,WACV,CAACsN,KAAMF,EAAcG,MAAOF,GAC5B,CAACC,KAAMD,EAAeE,MAAOH,EACnC,CAgBA,SAASI,GAAWxN,EAAYxE,GAC9B,MAAMmR,EAAanR,EAAUmR,WAE7B,SAASc,EAAmB5mB,GAC1B,MAAMvM,EAAS,CAACzF,KAAM,EAAGH,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAInD,OAHAiS,EAAUhe,SAASqe,IACjB5M,EAAO4M,GAAO35B,KAAKC,IAAIguC,EAAUtU,GAAMylB,EAAWzlB,GAAI,IAEjD5M,CACT,CAEA,OACImzB,EADGzN,EACgB,CAAC,OAAQ,SACT,CAAC,MAAO,UACjC,CAEA,SAAS0N,GAASC,EAAOnS,EAAWuQ,EAAQjY,GAC1C,MAAM8Z,EAAa,GACnB,IAAI59C,EAAG2R,EAAM2qC,EAAQ7kB,EAAKomB,EAAOziC,EAEjC,IAAKpb,EAAI,EAAG2R,EAAOgsC,EAAMh+C,OAAQk+C,EAAQ,EAAG79C,EAAI2R,IAAQ3R,EAAG,CACzDs8C,EAASqB,EAAM39C,GACfy3B,EAAM6kB,EAAO7kB,IAEbA,EAAI4J,OACFib,EAAOv2B,OAASylB,EAAU1rC,EAC1Bw8C,EAAO5zB,QAAU8iB,EAAUluC,EAC3BkgD,GAAWlB,EAAOtM,WAAYxE,IAEhC,MAAM,KAAC8R,EAAA,MAAMC,GAAST,GAAWtR,EAAWuQ,EAAQO,EAAQxY,GAI5D+Z,GAASP,GAAQM,EAAWj+C,OAG5Byb,EAAUA,GAAWmiC,EAEhB9lB,EAAI8kB,UACPqB,EAAWlqC,KAAK4oC,EAEpB,CAEA,OAAOuB,GAASH,GAASE,EAAYpS,EAAWuQ,EAAQjY,IAAW1oB,CACrE,CAEA,SAAS0iC,GAAWrmB,EAAK5S,EAAMH,EAAKqB,EAAO2C,GACzC+O,EAAI/S,IAAMA,EACV+S,EAAI5S,KAAOA,EACX4S,EAAI9S,MAAQE,EAAOkB,EACnB0R,EAAI7S,OAASF,EAAMgE,EACnB+O,EAAI1R,MAAQA,EACZ0R,EAAI/O,OAASA,CACf,CAEA,SAASq1B,GAAWJ,EAAOnS,EAAWuQ,EAAQjY,GAC5C,MAAMka,EAAcjC,EAAOt3B,QAC3B,IAAI,EAACxjB,EAAA,EAAGmS,GAAKo4B,EAEb,IAAK,MAAM8Q,KAAUqB,EAAO,CAC1B,MAAMlmB,EAAM6kB,EAAO7kB,IACb8L,EAAQO,EAAOwY,EAAO/Y,QAAU,CAACrpB,MAAO,EAAGgiC,OAAQ,EAAG3tC,OAAQ,GAC9DA,EAAS+tC,EAAQL,YAAc1Y,EAAMh1B,QAAW,EACtD,GAAI+tC,EAAOtM,WAAY,CACrB,MAAMjqB,EAAQylB,EAAU1rC,EAAIyO,EACtBma,EAAS6a,EAAMrvB,MAAQujB,EAAI/O,OAC7B3U,GAAQwvB,EAAMpsB,SAChB/D,EAAImwB,EAAMpsB,OAERsgB,EAAI8kB,SACNuB,GAAWrmB,EAAKumB,EAAYn5B,KAAMzR,EAAG2oC,EAAOkB,WAAae,EAAYr5B,MAAQq5B,EAAYn5B,KAAM6D,GAE/Fo1B,GAAWrmB,EAAK+T,EAAU3mB,KAAO0e,EAAM2Y,OAAQ9oC,EAAG2S,EAAO2C,GAE3D6a,EAAMpsB,MAAQ/D,EACdmwB,EAAM2Y,QAAUn2B,EAChB3S,EAAIqkB,EAAI7S,WACH,CACL,MAAM8D,EAAS8iB,EAAUluC,EAAIiR,EACvBwX,EAAQwd,EAAMrvB,MAAQujB,EAAI1R,MAC5BhS,GAAQwvB,EAAMpsB,SAChBlW,EAAIsiC,EAAMpsB,OAERsgB,EAAI8kB,SACNuB,GAAWrmB,EAAKx2B,EAAG+8C,EAAYt5B,IAAKqB,EAAOg2B,EAAOoB,YAAca,EAAYp5B,OAASo5B,EAAYt5B,KAEjGo5B,GAAWrmB,EAAKx2B,EAAGuqC,EAAU9mB,IAAM6e,EAAM2Y,OAAQn2B,EAAO2C,GAE1D6a,EAAMpsB,MAAQlW,EACdsiC,EAAM2Y,QAAUxzB,EAChBznB,EAAIw2B,EAAI9S,MAEZ,CAEA6mB,EAAUvqC,EAAIA,EACduqC,EAAUp4B,EAAIA,CAChB,CAwBA,IAAA0oC,GAAe,CAQbmC,OAAOh/B,EAAO9K,GACP8K,EAAM0+B,QACT1+B,EAAM0+B,MAAQ,IAIhBxpC,EAAKooC,SAAWpoC,EAAKooC,WAAY,EACjCpoC,EAAK6lC,SAAW7lC,EAAK6lC,UAAY,MACjC7lC,EAAK5F,OAAS4F,EAAK5F,QAAU,EAE7B4F,EAAK+pC,QAAU/pC,EAAK+pC,SAAW,WAC7B,MAAO,CAAC,CACNC,EAAG,EACHlf,KAAKuM,GACHr3B,EAAK8qB,KAAKuM,EACZ,GAEJ,EAEAvsB,EAAM0+B,MAAMjqC,KAAKS,EACnB,EAOAiqC,UAAUn/B,EAAOo/B,GACf,MAAMtsC,EAAQkN,EAAM0+B,MAAQ1+B,EAAM0+B,MAAMrrC,QAAQ+rC,IAAe,GAChD,IAAXtsC,GACFkN,EAAM0+B,MAAM/kC,OAAO7G,EAAO,EAE9B,EAQAkwB,UAAUhjB,EAAO9K,EAAM3B,GACrB2B,EAAKooC,SAAW/pC,EAAQ+pC,SACxBpoC,EAAK6lC,SAAWxnC,EAAQwnC,SACxB7lC,EAAK5F,OAASiE,EAAQjE,MACxB,EAUA8yB,OAAOpiB,EAAO8G,EAAO2C,EAAQ41B,GAC3B,IAAKr/B,EACH,OAGF,MAAMwF,EAAUwJ,GAAUhP,EAAMzM,QAAQ8pC,OAAO73B,SACzC+3B,EAAiBj/C,KAAKC,IAAIuoB,EAAQtB,EAAQsB,MAAO,GACjD02B,EAAkBl/C,KAAKC,IAAIkrB,EAASjE,EAAQiE,OAAQ,GACpDi1B,EA5QV,SAA0BA,GACxB,MAAMY,EA1DR,SAAmBZ,GACjB,MAAMY,EAAc,GACpB,IAAIv+C,EAAG2R,EAAM8lB,EAAKP,EAAKqM,EAAO0Y,EAE9B,IAAKj8C,EAAI,EAAG2R,GAAQgsC,GAAS,IAAIh+C,OAAQK,EAAI2R,IAAQ3R,EACnDy3B,EAAMkmB,EAAM39C,KACVg6C,SAAU9iB,EAAK1kB,SAAU+wB,QAAO0Y,cAAc,IAAMxkB,GACtD8mB,EAAY7qC,KAAK,CACf3B,MAAO/R,EACPy3B,MACAP,MACA8Y,WAAYvY,EAAI6e,eAChB/nC,OAAQkpB,EAAIlpB,OACZg1B,MAAOA,GAAUrM,EAAMqM,EACvB0Y,gBAGJ,OAAOsC,CACT,CAwCsBC,CAAUb,GACxBpB,EAAWX,GAAa2C,EAAY5sB,QAAOqqB,GAAQA,EAAKvkB,IAAI8kB,YAAW,GACvE13B,EAAO+2B,GAAaF,GAAiB6C,EAAa,SAAS,GAC3D55B,EAAQi3B,GAAaF,GAAiB6C,EAAa,UACnD75B,EAAMk3B,GAAaF,GAAiB6C,EAAa,QAAQ,GACzD35B,EAASg3B,GAAaF,GAAiB6C,EAAa,WACpDE,EAAmB9C,GAA4B4C,EAAa,KAC5DG,EAAiB/C,GAA4B4C,EAAa,KAEhE,MAAO,CACLhC,WACAoC,WAAY95B,EAAK8pB,OAAOjqB,GACxBk6B,eAAgBj6B,EAAMgqB,OAAO+P,GAAgB/P,OAAO/pB,GAAQ+pB,OAAO8P,GACnEjT,UAAWkQ,GAAiB6C,EAAa,aACzCM,SAAUh6B,EAAK8pB,OAAOhqB,GAAOgqB,OAAO+P,GACpC1O,WAAYtrB,EAAIiqB,OAAO/pB,GAAQ+pB,OAAO8P,GAE1C,CA0PkBK,CAAiB7/B,EAAM0+B,OAC/BoB,EAAgBpB,EAAMkB,SACtBG,EAAkBrB,EAAM3N,WAI9B3+B,EAAK4N,EAAM0+B,OAAOlmB,IACgB,oBAArBA,EAAIwnB,cACbxnB,EAAIwnB,kBA+BR,MAAMC,EAA0BH,EAAcnf,QAAO,CAAC0T,EAAO0I,IAC3DA,EAAKvkB,IAAIjlB,UAAwC,IAA7BwpC,EAAKvkB,IAAIjlB,QAAQsS,QAAoBwuB,EAAQA,EAAQ,GAAG,IAAM,EAE9EyI,EAAShwC,OAAOqgC,OAAO,CAC3B6Q,WAAYl3B,EACZo3B,YAAaz0B,EACbjE,UACA+3B,iBACAC,kBACAL,aAAcI,EAAiB,EAAI0C,EACnC7C,cAAeI,EAAkB,IAE7BE,EAAa5wC,OAAOmB,OAAO,CAAC,EAAGuX,GACrCm4B,GAAiBD,EAAY1uB,GAAUqwB,IACvC,MAAM9S,EAAYz/B,OAAOmB,OAAO,CAC9ByvC,aACA78C,EAAG08C,EACHl/C,EAAGm/C,EACHx7C,EAAGwjB,EAAQI,KACXzR,EAAGqR,EAAQC,KACVD,GAEGqf,EAAS+X,GAAckD,EAAcpQ,OAAOqQ,GAAkBjD,GAGpE2B,GAASC,EAAMpB,SAAU/Q,EAAWuQ,EAAQjY,GAG5C4Z,GAASqB,EAAevT,EAAWuQ,EAAQjY,GAGvC4Z,GAASsB,EAAiBxT,EAAWuQ,EAAQjY,IAE/C4Z,GAASqB,EAAevT,EAAWuQ,EAAQjY,GApRjD,SAA0B0H,GACxB,MAAMmR,EAAanR,EAAUmR,WAE7B,SAASwC,EAAUjoB,GACjB,MAAMkoB,EAAS7hD,KAAKC,IAAIm/C,EAAWzlB,GAAOsU,EAAUtU,GAAM,GAE1D,OADAsU,EAAUtU,IAAQkoB,EACXA,CACT,CACA5T,EAAUp4B,GAAK+rC,EAAU,OACzB3T,EAAUvqC,GAAKk+C,EAAU,QACzBA,EAAU,SACVA,EAAU,SACZ,CA2QIE,CAAiB7T,GAGjBuS,GAAWJ,EAAMgB,WAAYnT,EAAWuQ,EAAQjY,GAGhD0H,EAAUvqC,GAAKuqC,EAAU1rC,EACzB0rC,EAAUp4B,GAAKo4B,EAAUluC,EAEzBygD,GAAWJ,EAAMiB,eAAgBpT,EAAWuQ,EAAQjY,GAEpD7kB,EAAMusB,UAAY,CAChB3mB,KAAM2mB,EAAU3mB,KAChBH,IAAK8mB,EAAU9mB,IACfC,MAAO6mB,EAAU3mB,KAAO2mB,EAAU1rC,EAClC8kB,OAAQ4mB,EAAU9mB,IAAM8mB,EAAUluC,EAClCorB,OAAQ8iB,EAAUluC,EAClByoB,MAAOylB,EAAU1rC,GAInBuR,EAAKssC,EAAMnS,WAAY8Q,IACrB,MAAM7kB,EAAM6kB,EAAO7kB,IACnB1rB,OAAOmB,OAAOuqB,EAAKxY,EAAMusB,WACzB/T,EAAI4J,OAAOmK,EAAU1rC,EAAG0rC,EAAUluC,EAAG,CAACunB,KAAM,EAAGH,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAAG,GAEhF,GC7ba,MAAM06B,GAOnBC,eAAej3B,EAAQiQ,GAAc,CAQrCinB,eAAe3+B,GACb,OAAO,CACT,CASA+Y,iBAAiB3a,EAAOvR,EAAM8K,GAAW,CAQzCqhB,oBAAoB5a,EAAOvR,EAAM8K,GAAW,CAK5CuI,sBACE,OAAO,CACT,CASAqX,eAAe1B,EAAS3Q,EAAO2C,EAAQ6P,GAGrC,OAFAxS,EAAQxoB,KAAKC,IAAI,EAAGuoB,GAAS2Q,EAAQ3Q,OACrC2C,EAASA,GAAUgO,EAAQhO,OACpB,CACL3C,QACA2C,OAAQnrB,KAAKC,IAAI,EAAG+6B,EAAch7B,KAAKgY,MAAMwQ,EAAQwS,GAAe7P,GAExE,CAMA+2B,WAAWn3B,GACT,OAAO,CACT,CAMAo3B,aAAa3d,GAEb,ECrEa,MAAM4d,WAAsBL,GACzCC,eAAeprC,GAIb,OAAOA,GAAQA,EAAKoU,YAAcpU,EAAKoU,WAAW,OAAS,IAC7D,CACAm3B,aAAa3d,GACXA,EAAOvvB,QAAQgO,WAAY,CAC7B,ECRF,MAOMo/B,GAAc,CAClBC,WAAY,YACZC,UAAW,YACXC,SAAU,UACVC,aAAc,aACdC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,aAAc,WACdC,WAAY,YAGRC,GAAgBtwC,GAAmB,OAAVA,GAA4B,KAAVA,EA8DjD,MAAMuwC,KAAuB9mB,IAA+B,CAACE,SAAS,GAQtE,SAAS6mB,GAAevhC,EAAOvR,EAAM8K,GAC/ByG,GAASA,EAAMqJ,QACjBrJ,EAAMqJ,OAAOuR,oBAAoBnsB,EAAM8K,EAAU+nC,GAErD,CAcA,SAASE,GAAiBC,EAAUp4B,GAClC,IAAK,MAAMpI,KAAQwgC,EACjB,GAAIxgC,IAASoI,GAAUpI,EAAKygC,SAASr4B,GACnC,OAAO,CAGb,CAEA,SAASs4B,GAAqB3hC,EAAOvR,EAAM8K,GACzC,MAAM8P,EAASrJ,EAAMqJ,OACfu4B,EAAW,IAAIC,kBAAiBC,IACpC,IAAIC,GAAU,EACd,IAAK,MAAM7R,KAAS4R,EAClBC,EAAUA,GAAWP,GAAiBtR,EAAM8R,WAAY34B,GACxD04B,EAAUA,IAAYP,GAAiBtR,EAAM+R,aAAc54B,GAEzD04B,GACFxoC,OAIJ,OADAqoC,EAASM,QAAQnrB,SAAU,CAACorB,WAAW,EAAMC,SAAS,IAC/CR,CACT,CAEA,SAASS,GAAqBriC,EAAOvR,EAAM8K,GACzC,MAAM8P,EAASrJ,EAAMqJ,OACfu4B,EAAW,IAAIC,kBAAiBC,IACpC,IAAIC,GAAU,EACd,IAAK,MAAM7R,KAAS4R,EAClBC,EAAUA,GAAWP,GAAiBtR,EAAM+R,aAAc54B,GAC1D04B,EAAUA,IAAYP,GAAiBtR,EAAM8R,WAAY34B,GAEvD04B,GACFxoC,OAIJ,OADAqoC,EAASM,QAAQnrB,SAAU,CAACorB,WAAW,EAAMC,SAAS,IAC/CR,CACT,CAEA,MAAMU,GAAqB,IAAIxjC,IAC/B,IAAIyjC,GAAsB,EAE1B,SAASC,KACP,MAAMC,EAAMvoC,OAAOyH,iBACf8gC,IAAQF,KAGZA,GAAsBE,EACtBH,GAAmB1oC,SAAQ,CAACsL,EAAQlF,KAC9BA,EAAMkJ,0BAA4Bu5B,GACpCv9B,OAGN,CAgBA,SAASw9B,GAAqB1iC,EAAOvR,EAAM8K,GACzC,MAAM8P,EAASrJ,EAAMqJ,OACfqQ,EAAYrQ,GAAU2N,GAAe3N,GAC3C,IAAKqQ,EACH,OAEF,MAAMxU,EAAS9K,IAAU,CAAC0M,EAAO2C,KAC/B,MAAM5oB,EAAI64B,EAAUI,YACpBvgB,EAASuN,EAAO2C,GACZ5oB,EAAI64B,EAAUI,aAQhBvgB,MAEDW,QAGG0nC,EAAW,IAAIe,gBAAeb,IAClC,MAAM5R,EAAQ4R,EAAQ,GAChBh7B,EAAQopB,EAAM0S,YAAY97B,MAC1B2C,EAASymB,EAAM0S,YAAYn5B,OAInB,IAAV3C,GAA0B,IAAX2C,GAGnBvE,EAAO4B,EAAO2C,EAAA,IAKhB,OAHAm4B,EAASM,QAAQxoB,GAhDnB,SAAuC1Z,EAAOkF,GACvCo9B,GAAmBrtC,MACtBiF,OAAOygB,iBAAiB,SAAU6nB,IAEpCF,GAAmBvoC,IAAIiG,EAAOkF,EAChC,CA4CE29B,CAA8B7iC,EAAOkF,GAE9B08B,CACT,CAEA,SAASkB,GAAgB9iC,EAAOvR,EAAMmzC,GAChCA,GACFA,EAASmB,aAEE,WAATt0C,GAnDN,SAAyCuR,GACvCsiC,GAAmBlwB,OAAOpS,GACrBsiC,GAAmBrtC,MACtBiF,OAAO0gB,oBAAoB,SAAU4nB,GAEzC,CA+CIQ,CAAgChjC,EAEpC,CAEA,SAASijC,GAAqBjjC,EAAOvR,EAAM8K,GACzC,MAAM8P,EAASrJ,EAAMqJ,OACfiI,EAAQlX,IAAW+d,IAIL,OAAdnY,EAAMuC,KACRhJ,EA1IN,SAAyB4e,EAAOnY,GAC9B,MAAMvR,EAAOkyC,GAAYxoB,EAAM1pB,OAAS0pB,EAAM1pB,MACxC,EAACzM,EAAC,EAAEmS,GAAK+jB,GAAoBC,EAAOnY,GAC1C,MAAO,CACLvR,OACAuR,QACAkjC,OAAQ/qB,EACRn2B,OAAS7B,IAAN6B,EAAkBA,EAAI,KACzBmS,OAAShU,IAANgU,EAAkBA,EAAI,KAE7B,CAgIegvC,CAAgBhrB,EAAOnY,MAEjCA,GAIH,OA5JF,SAAqBiB,EAAMxS,EAAM8K,GAC3B0H,GACFA,EAAK0Z,iBAAiBlsB,EAAM8K,EAAU+nC,GAE1C,CAsJE8B,CAAY/5B,EAAQ5a,EAAM6iB,GAEnBA,CACT,CAMe,MAAM+xB,WAAoBhD,GAOvCC,eAAej3B,EAAQiQ,GAIrB,MAAM1X,EAAUyH,GAAUA,EAAOC,YAAcD,EAAOC,WAAW,MASjE,OAAI1H,GAAWA,EAAQyH,SAAWA,GA/OtC,SAAoBA,EAAQiQ,GAC1B,MAAMnX,EAAQkH,EAAOlH,MAIfmhC,EAAej6B,EAAOk6B,aAAa,UACnCC,EAAcn6B,EAAOk6B,aAAa,SAsBxC,GAnBAl6B,EAAO,SAAe,CACpBmW,QAAS,CACP/V,OAAQ65B,EACRx8B,MAAO08B,EACPrhC,MAAO,CACL0D,QAAS1D,EAAM0D,QACf4D,OAAQtH,EAAMsH,OACd3C,MAAO3E,EAAM2E,SAQnB3E,EAAM0D,QAAU1D,EAAM0D,SAAW,QAEjC1D,EAAMkW,UAAYlW,EAAMkW,WAAa,aAEjCgpB,GAAcmC,GAAc,CAC9B,MAAMC,EAAe5oB,GAAaxR,EAAQ,cACrBlpB,IAAjBsjD,IACFp6B,EAAOvC,MAAQ28B,GAInB,GAAIpC,GAAciC,GAChB,GAA4B,KAAxBj6B,EAAOlH,MAAMsH,OAIfJ,EAAOI,OAASJ,EAAOvC,OAASwS,GAAe,OAC1C,CACL,MAAMoqB,EAAgB7oB,GAAaxR,EAAQ,eACrBlpB,IAAlBujD,IACFr6B,EAAOI,OAASi6B,GAMxB,CAgMMC,CAAWt6B,EAAQiQ,GACZ1X,GAGF,IACT,CAKA2+B,eAAe3+B,GACb,MAAMyH,EAASzH,EAAQyH,OACvB,IAAKA,EAAO,SACV,OAAO,EAGT,MAAMmW,EAAUnW,EAAO,SAAamW,QACpC,CAAC,SAAU,SAAS5lB,SAASiV,IAC3B,MAAM9d,EAAQyuB,EAAQ3Q,GAClB/d,EAAcC,GAChBsY,EAAOu6B,gBAAgB/0B,GAEvBxF,EAAOw6B,aAAah1B,EAAM9d,MAI9B,MAAMoR,EAAQqd,EAAQrd,OAAS,CAAC,EAahC,OAZArV,OAAOD,KAAKsV,GAAOvI,SAASxG,IAC1BiW,EAAOlH,MAAM/O,GAAO+O,EAAM/O,EAAI,IAQhCiW,EAAOvC,MAAQuC,EAAOvC,aAEfuC,EAAmB,UACnB,CACT,CAQAsR,iBAAiB3a,EAAOvR,EAAM8K,GAE5B1K,KAAK+rB,oBAAoB5a,EAAOvR,GAEhC,MAAMq1C,EAAU9jC,EAAM+jC,WAAa/jC,EAAM+jC,SAAW,CAAC,GAM/C/I,EALW,CACfgJ,OAAQrC,GACRsC,OAAQ5B,GACRn9B,OAAQw9B,IAEej0C,IAASw0C,GAClCa,EAAQr1C,GAAQusC,EAAQh7B,EAAOvR,EAAM8K,EACvC,CAOAqhB,oBAAoB5a,EAAOvR,GACzB,MAAMq1C,EAAU9jC,EAAM+jC,WAAa/jC,EAAM+jC,SAAW,CAAC,GAC/CzyB,EAAQwyB,EAAQr1C,GAEtB,IAAK6iB,EACH,QAGe,CACf0yB,OAAQlB,GACRmB,OAAQnB,GACR59B,OAAQ49B,IAEer0C,IAAS8yC,IAC1BvhC,EAAOvR,EAAM6iB,GACrBwyB,EAAQr1C,QAAQtO,CAClB,CAEA2hB,sBACE,OAAO5H,OAAOyH,gBAChB,CAQAwX,eAAe9P,EAAQvC,EAAO2C,EAAQ6P,GACpC,OAAOH,GAAe9P,EAAQvC,EAAO2C,EAAQ6P,EAC/C,CAKAknB,WAAWn3B,GACT,MAAMqQ,EAAYrQ,GAAU2N,GAAe3N,GAC3C,SAAUqQ,IAAaA,EAAUwqB,YACnC,EC9Xa,MAAMC,GAEnB1d,gBAAkB,CAAC,EACnBA,0BAAuBtmC,EAEvB6B,EACAmS,EACA8Q,QAAS,EACT1R,QACAiwB,YAEA4gB,gBAAgBjJ,GACd,MAAM,EAACn5C,EAAA,EAAGmS,GAAKtF,KAAKmtC,SAAS,CAAC,IAAK,KAAMb,GACzC,MAAO,CAACn5C,IAAGmS,IACb,CAEAkwC,WACE,OAAO7tC,GAAS3H,KAAK7M,IAAMwU,GAAS3H,KAAKsF,EAC3C,CASA6nC,SAASttB,EAAiB41B,GACxB,MAAMllB,EAAQvwB,KAAK20B,YACnB,IAAK8gB,IAAUllB,EAEb,OAAOvwB,KAET,MAAMH,EAA+B,CAAC,EAItC,OAHAggB,EAAM9U,SAASiV,IACbngB,EAAImgB,GAAQuQ,EAAMvQ,IAASuQ,EAAMvQ,GAAM5J,SAAWma,EAAMvQ,GAAMqT,IAAMrzB,KAAKggB,EAAe,IAEnFngB,CACT,EC3BK,SAAS4Y,GAASjE,EAAOtD,GAC9B,MAAMwkC,EAAWlhC,EAAM9P,QAAQwM,MACzBykC,EA8BR,SAA2BnhC,GACzB,MAAMyC,EAASzC,EAAM9P,QAAQuS,OACvBS,EAAalD,EAAMohC,YACnBC,EAAWrhC,EAAMysB,QAAUvpB,GAAcT,EAAS,EAAI,GACtD6+B,EAAWthC,EAAMuhC,WAAar+B,EACpC,OAAOjoB,KAAKgY,MAAMhY,KAAKE,IAAIkmD,EAAUC,GACvC,CApC6BE,CAAkBxhC,GACvCyhC,EAAaxmD,KAAKE,IAAI+lD,EAASQ,eAAiBP,EAAoBA,GACpEQ,EAAeT,EAAS78B,MAAMu9B,QAgEtC,SAAyBllC,GACvB,MAAMiY,EAAS,GACf,IAAIj3B,EAAG2R,EACP,IAAK3R,EAAI,EAAG2R,EAAOqN,EAAMrf,OAAQK,EAAI2R,EAAM3R,IACrCgf,EAAMhf,GAAG2mB,OACXsQ,EAAOvjB,KAAK1T,GAGhB,OAAOi3B,CACT,CAzEgDktB,CAAgBnlC,GAAS,GACjEolC,EAAkBH,EAAatkD,OAC/B0kD,EAAQJ,EAAa,GACrB9rC,EAAO8rC,EAAaG,EAAkB,GACtCE,EAAW,GAGjB,GAAIF,EAAkBL,EAEpB,OAwEJ,SAAoB/kC,EAAOslC,EAAUL,EAAcnT,GACjD,IAEI9wC,EAFAka,EAAQ,EACRyZ,EAAOswB,EAAa,GAIxB,IADAnT,EAAUvzC,KAAKgnD,KAAKzT,GACf9wC,EAAI,EAAGA,EAAIgf,EAAMrf,OAAQK,IACxBA,IAAM2zB,IACR2wB,EAAS5wC,KAAKsL,EAAMhf,IACpBka,IACAyZ,EAAOswB,EAAa/pC,EAAQ42B,GAGlC,CAtFI0T,CAAWxlC,EAAOslC,EAAUL,EAAcG,EAAkBL,GACrDO,EAGT,MAAMxT,EA6BR,SAA0BmT,EAAcjlC,EAAO+kC,GAC7C,MAAMU,EA6FR,SAAwB/yB,GACtB,MAAM9jB,EAAM8jB,EAAI/xB,OAChB,IAAIK,EAAGs5C,EAEP,GAAI1rC,EAAM,EACR,OAAO,EAGT,IAAK0rC,EAAO5nB,EAAI,GAAI1xB,EAAI,EAAGA,EAAI4N,IAAO5N,EACpC,GAAI0xB,EAAI1xB,GAAK0xB,EAAI1xB,EAAI,KAAOs5C,EAC1B,OAAO,EAGX,OAAOA,CACT,CA3G2BoL,CAAeT,GAClCnT,EAAU9xB,EAAMrf,OAASokD,EAI/B,IAAKU,EACH,OAAOlnD,KAAKC,IAAIszC,EAAS,GAG3B,MAAM6T,EtC/BD,SAAoB30C,GACzB,MAAMinB,EAAmB,GACnBxgB,EAAOlZ,KAAKkZ,KAAKzG,GACvB,IAAIhQ,EAEJ,IAAKA,EAAI,EAAGA,EAAIyW,EAAMzW,IAChBgQ,EAAQhQ,IAAM,IAChBi3B,EAAOvjB,KAAK1T,GACZi3B,EAAOvjB,KAAK1D,EAAQhQ,IAQxB,OALIyW,KAAiB,EAAPA,IACZwgB,EAAOvjB,KAAK+C,GAGdwgB,EAAO2X,MAAK,CAACvwC,EAAGC,IAAMD,EAAIC,IAAG+gC,MACtBpI,CACT,CsCckB2tB,CAAWH,GAC3B,IAAK,IAAIzkD,EAAI,EAAG2R,EAAOgzC,EAAQhlD,OAAS,EAAGK,EAAI2R,EAAM3R,IAAK,CACxD,MAAMsgC,EAASqkB,EAAQ3kD,GACvB,GAAIsgC,EAASwQ,EACX,OAAOxQ,CAEX,CACA,OAAO/iC,KAAKC,IAAIszC,EAAS,EAC3B,CA/CkB+T,CAAiBZ,EAAcjlC,EAAO+kC,GAEtD,GAAIK,EAAkB,EAAG,CACvB,IAAIpkD,EAAG2R,EACP,MAAMmzC,EAAkBV,EAAkB,EAAI7mD,KAAKL,OAAOib,EAAOksC,IAAUD,EAAkB,IAAM,KAEnG,IADA/wB,GAAKrU,EAAOslC,EAAUxT,EAAS/gC,EAAc+0C,GAAmB,EAAIT,EAAQS,EAAiBT,GACxFrkD,EAAI,EAAG2R,EAAOyyC,EAAkB,EAAGpkD,EAAI2R,EAAM3R,IAChDqzB,GAAKrU,EAAOslC,EAAUxT,EAASmT,EAAajkD,GAAIikD,EAAajkD,EAAI,IAGnE,OADAqzB,GAAKrU,EAAOslC,EAAUxT,EAAS34B,EAAMpI,EAAc+0C,GAAmB9lC,EAAMrf,OAASwY,EAAO2sC,GACrFR,EAGT,OADAjxB,GAAKrU,EAAOslC,EAAUxT,GACfwT,CACT,CA6EA,SAASjxB,GAAKrU,EAAOslC,EAAUxT,EAASiU,EAAYC,GAClD,MAAM7tC,EAAQxG,EAAeo0C,EAAY,GACnC3tC,EAAM7Z,KAAKE,IAAIkT,EAAeq0C,EAAUhmC,EAAMrf,QAASqf,EAAMrf,QACnE,IACIA,EAAQK,EAAG2zB,EADXzZ,EAAQ,EAWZ,IARA42B,EAAUvzC,KAAKgnD,KAAKzT,GAChBkU,IACFrlD,EAASqlD,EAAWD,EACpBjU,EAAUnxC,EAASpC,KAAKgY,MAAM5V,EAASmxC,IAGzCnd,EAAOxc,EAEAwc,EAAO,GACZzZ,IACAyZ,EAAOp2B,KAAKL,MAAMia,EAAQ+C,EAAQ42B,GAGpC,IAAK9wC,EAAIzC,KAAKC,IAAI2Z,EAAO,GAAInX,EAAIoX,EAAKpX,IAChCA,IAAM2zB,IACR2wB,EAAS5wC,KAAKsL,EAAMhf,IACpBka,IACAyZ,EAAOp2B,KAAKL,MAAMia,EAAQ+C,EAAQ42B,GAGxC,CC7IA,MACMmU,GAAiBA,CAAC3iC,EAAOwtB,EAAM/qB,IAAoB,QAAT+qB,GAA2B,SAATA,EAAkBxtB,EAAMwtB,GAAQ/qB,EAASzC,EAAMwtB,GAAQ/qB,EACnHmgC,GAAgBA,CAACC,EAAanB,IAAkBzmD,KAAKE,IAAIumD,GAAiBmB,EAAaA,GAY7F,SAASC,GAAO1zB,EAAK2zB,GACnB,MAAMpuB,EAAS,GACTquB,EAAY5zB,EAAI/xB,OAAS0lD,EACzBz3C,EAAM8jB,EAAI/xB,OAChB,IAAIK,EAAI,EAER,KAAOA,EAAI4N,EAAK5N,GAAKslD,EACnBruB,EAAOvjB,KAAKge,EAAIn0B,KAAKgY,MAAMvV,KAE7B,OAAOi3B,CACT,CAOA,SAASsuB,GAAoBjjC,EAAOvQ,EAAOyzC,GACzC,MAAM7lD,EAAS2iB,EAAMtD,MAAMrf,OACrB8lD,EAAaloD,KAAKE,IAAIsU,EAAOpS,EAAS,GACtCwX,EAAQmL,EAAM+0B,YACdjgC,EAAMkL,EAAMg1B,UACZriC,EAAU,KAChB,IACI8P,EADA2gC,EAAYpjC,EAAM2sB,gBAAgBwW,GAGtC,KAAID,IAEAzgC,EADa,IAAXplB,EACOpC,KAAKC,IAAIkoD,EAAYvuC,EAAOC,EAAMsuC,GACxB,IAAV3zC,GACCuQ,EAAM2sB,gBAAgB,GAAKyW,GAAa,GAExCA,EAAYpjC,EAAM2sB,gBAAgBwW,EAAa,IAAM,EAEjEC,GAAaD,EAAa1zC,EAAQgT,GAAUA,EAGxC2gC,EAAYvuC,EAAQlC,GAAWywC,EAAYtuC,EAAMnC,IAIvD,OAAOywC,CACT,CAuBA,SAASC,GAAkBnzC,GACzB,OAAOA,EAAQ+S,UAAY/S,EAAQgT,WAAa,CAClD,CAKA,SAASogC,GAAepzC,EAAS2b,GAC/B,IAAK3b,EAAQsS,QACX,OAAO,EAGT,MAAM5D,EAAOgN,GAAO1b,EAAQ0O,KAAMiN,GAC5B1J,EAAUwJ,GAAUzb,EAAQiS,SAGlC,OAFcpkB,EAAQmS,EAAQyT,MAAQzT,EAAQyT,KAAKtmB,OAAS,GAE5CuhB,EAAKG,WAAcoD,EAAQiE,MAC7C,CAiBA,SAASm9B,GAAWlsC,EAAOqgC,EAAUzoC,GAEnC,IAAI5D,EAAM+L,GAAmBC,GAI7B,OAHIpI,GAAyB,UAAbyoC,IAA2BzoC,GAAwB,UAAbyoC,KACpDrsC,EArHkBgM,IAAoB,SAAVA,EAAmB,QAAoB,UAAVA,EAAoB,OAASA,EAqHhFmsC,CAAan4C,IAEdA,CACT,CAuCe,MAAMo4C,WAAc3C,GAGjC31C,YAAYizB,GACV2Q,QAGAvjC,KAAKgC,GAAK4wB,EAAI5wB,GAEdhC,KAAKJ,KAAOgzB,EAAIhzB,KAEhBI,KAAK0E,aAAUpT,EAEf0O,KAAK0T,IAAMkf,EAAIlf,IAEf1T,KAAKmR,MAAQyhB,EAAIzhB,MAIjBnR,KAAK4W,SAAMtlB,EAEX0O,KAAK8W,YAASxlB,EAEd0O,KAAK+W,UAAOzlB,EAEZ0O,KAAK6W,WAAQvlB,EAEb0O,KAAKiY,WAAQ3mB,EAEb0O,KAAK4a,YAAStpB,EACd0O,KAAKk4C,SAAW,CACdnhC,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GAGV9W,KAAKgf,cAAW1tB,EAEhB0O,KAAK2qB,eAAYr5B,EAEjB0O,KAAKm4C,gBAAa7mD,EAElB0O,KAAKo4C,mBAAgB9mD,EAErB0O,KAAKq4C,iBAAc/mD,EAEnB0O,KAAKs4C,kBAAehnD,EAIpB0O,KAAKwM,UAAOlb,EAEZ0O,KAAKu4C,mBAAgBjnD,EACrB0O,KAAKrQ,SAAM2B,EACX0O,KAAKtQ,SAAM4B,EACX0O,KAAKw4C,YAASlnD,EAEd0O,KAAKkR,MAAQ,GAEblR,KAAKy4C,eAAiB,KAEtBz4C,KAAK04C,YAAc,KAEnB14C,KAAK24C,YAAc,KACnB34C,KAAKihC,QAAU,EACfjhC,KAAK+1C,WAAa,EAClB/1C,KAAK44C,kBAAoB,CAAC,EAE1B54C,KAAKupC,iBAAcj4C,EAEnB0O,KAAKwpC,eAAYl4C,EACjB0O,KAAK+rC,gBAAiB,EACtB/rC,KAAK64C,cAAWvnD,EAChB0O,KAAK84C,cAAWxnD,EAChB0O,KAAK+4C,mBAAgBznD,EACrB0O,KAAKg5C,mBAAgB1nD,EACrB0O,KAAKi5C,aAAe,EACpBj5C,KAAKk5C,aAAe,EACpBl5C,KAAK0gC,OAAS,CAAC,EACf1gC,KAAKm5C,mBAAoB,EACzBn5C,KAAKu4B,cAAWjnC,CAClB,CAMAg6C,KAAK5mC,GACH1E,KAAK0E,QAAUA,EAAQse,WAAWhjB,KAAKya,cAEvCza,KAAKwM,KAAO9H,EAAQ8H,KAGpBxM,KAAK84C,SAAW94C,KAAKolB,MAAM1gB,EAAQ/U,KACnCqQ,KAAK64C,SAAW74C,KAAKolB,MAAM1gB,EAAQhV,KACnCsQ,KAAKg5C,cAAgBh5C,KAAKolB,MAAM1gB,EAAQ00C,cACxCp5C,KAAK+4C,cAAgB/4C,KAAKolB,MAAM1gB,EAAQ20C,aAC1C,CAQAj0B,MAAM0Y,EAAK75B,GACT,OAAO65B,CACT,CAOAnxB,gBACE,IAAI,SAACmsC,EAAQ,SAAED,EAAQ,cAAEG,EAAA,cAAeD,GAAiB/4C,KAKzD,OAJA84C,EAAWn2C,EAAgBm2C,EAAUr2C,OAAOkE,mBAC5CkyC,EAAWl2C,EAAgBk2C,EAAUp2C,OAAOo6B,mBAC5Cmc,EAAgBr2C,EAAgBq2C,EAAev2C,OAAOkE,mBACtDoyC,EAAgBp2C,EAAgBo2C,EAAet2C,OAAOo6B,mBAC/C,CACLltC,IAAKgT,EAAgBm2C,EAAUE,GAC/BtpD,IAAKiT,EAAgBk2C,EAAUE,GAC/BtsC,WAAYjK,EAASs2C,GACrBpsC,WAAYlK,EAASq2C,GAEzB,CAQArc,UAAUC,GAER,IACIn1B,GADA,IAAC3X,EAAA,IAAKD,EAAA,WAAK+c,EAAA,WAAYC,GAAc1M,KAAK2M,gBAG9C,GAAIF,GAAcC,EAChB,MAAO,CAAC/c,MAAKD,OAGf,MAAM4pD,EAAQt5C,KAAKu2B,0BACnB,IAAK,IAAIrkC,EAAI,EAAG2R,EAAOy1C,EAAMznD,OAAQK,EAAI2R,IAAQ3R,EAC/CoV,EAAQgyC,EAAMpnD,GAAGukC,WAAW+F,UAAUx8B,KAAMy8B,GACvChwB,IACH9c,EAAMF,KAAKE,IAAIA,EAAK2X,EAAM3X,MAEvB+c,IACHhd,EAAMD,KAAKC,IAAIA,EAAK4X,EAAM5X,MAQ9B,OAHAC,EAAM+c,GAAc/c,EAAMD,EAAMA,EAAMC,EACtCD,EAAM+c,GAAc9c,EAAMD,EAAMC,EAAMD,EAE/B,CACLC,IAAKgT,EAAgBhT,EAAKgT,EAAgBjT,EAAKC,IAC/CD,IAAKiT,EAAgBjT,EAAKiT,EAAgBhT,EAAKD,IAEnD,CAOAu/C,aACE,MAAO,CACLl4B,KAAM/W,KAAKq4C,aAAe,EAC1BzhC,IAAK5W,KAAKm4C,YAAc,EACxBthC,MAAO7W,KAAKs4C,cAAgB,EAC5BxhC,OAAQ9W,KAAKo4C,eAAiB,EAElC,CAOAmB,WACE,OAAOv5C,KAAKkR,KACd,CAKA6qB,YACE,MAAM5iB,EAAOnZ,KAAKmR,MAAMgI,KACxB,OAAOnZ,KAAK0E,QAAQo3B,SAAW97B,KAAKwoC,eAAiBrvB,EAAKqgC,QAAUrgC,EAAKsgC,UAAYtgC,EAAK2iB,QAAU,EACtG,CAKA4d,gBAAgD,IAAlChc,EAAY9rC,UAAAC,OAAA,QAAAP,IAAAM,UAAA,GAAAA,UAAA,GAAAoO,KAAKmR,MAAMusB,UAEnC,OADc19B,KAAK04C,cAAgB14C,KAAK04C,YAAc14C,KAAK25C,mBAAmBjc,GAEhF,CAGAyT,eACEnxC,KAAK0gC,OAAS,CAAC,EACf1gC,KAAKm5C,mBAAoB,CAC3B,CAMAS,eACE12C,EAAKlD,KAAK0E,QAAQk1C,aAAc,CAAC55C,MACnC,CAUAuzB,OAAOvU,EAAU2L,EAAWD,GAC1B,MAAM,YAACxT,EAAW,MAAEG,EAAOnG,MAAOwkC,GAAY11C,KAAK0E,QAC7Cm1C,EAAanE,EAASmE,WAG5B75C,KAAK45C,eAGL55C,KAAKgf,SAAWA,EAChBhf,KAAK2qB,UAAYA,EACjB3qB,KAAKk4C,SAAWxtB,EAAUzsB,OAAOmB,OAAO,CACtC2X,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GACP4T,GAEH1qB,KAAKkR,MAAQ,KACblR,KAAK24C,YAAc,KACnB34C,KAAKy4C,eAAiB,KACtBz4C,KAAK04C,YAAc,KAGnB14C,KAAK85C,sBACL95C,KAAK+5C,gBACL/5C,KAAKg6C,qBAELh6C,KAAK+1C,WAAa/1C,KAAKwoC,eACnBxoC,KAAKiY,MAAQyS,EAAQ3T,KAAO2T,EAAQ7T,MACpC7W,KAAK4a,OAAS8P,EAAQ9T,IAAM8T,EAAQ5T,OAGnC9W,KAAKm5C,oBACRn5C,KAAKi6C,mBACLj6C,KAAKk6C,sBACLl6C,KAAKm6C,kBACLn6C,KAAKw4C,O3BpPJ,SAAmB4B,EAAuC/iC,EAAwBH,GACvF,MAAM,IAACvnB,EAAA,IAAKD,GAAO0qD,EACb9I,EAASxuC,EAAYuU,GAAQ3nB,EAAMC,GAAO,GAC1C0qD,EAAWA,CAACn4C,EAAeohB,IAAgBpM,GAAyB,IAAVhV,EAAc,EAAIA,EAAQohB,EAC1F,MAAO,CACL3zB,IAAK0qD,EAAS1qD,GAAMF,KAAK2X,IAAIkqC,IAC7B5hD,IAAK2qD,EAAS3qD,EAAK4hD,GAEvB,C2B4OoBgJ,CAAUt6C,KAAMqX,EAAOH,GACrClX,KAAKm5C,mBAAoB,GAG3Bn5C,KAAKu6C,mBAELv6C,KAAKkR,MAAQlR,KAAKw6C,cAAgB,GAGlCx6C,KAAKy6C,kBAIL,MAAMC,EAAkBb,EAAa75C,KAAKkR,MAAMrf,OAChDmO,KAAK26C,sBAAsBD,EAAkBpD,GAAOt3C,KAAKkR,MAAO2oC,GAAc75C,KAAKkR,OAMnFlR,KAAKm0B,YAGLn0B,KAAK46C,+BACL56C,KAAK66C,yBACL76C,KAAK86C,8BAGDpF,EAAS1+B,UAAY0+B,EAASj9B,UAAgC,SAApBi9B,EAASxxC,UACrDlE,KAAKkR,MAAQuH,GAASzY,KAAMA,KAAKkR,OACjClR,KAAK24C,YAAc,KACnB34C,KAAK+6C,iBAGHL,GAEF16C,KAAK26C,sBAAsB36C,KAAKkR,OAGlClR,KAAKg7C,YACLh7C,KAAKi7C,MACLj7C,KAAKk7C,WAILl7C,KAAKm7C,aACP,CAKAhnB,YACE,IACI4V,EAAYE,EADZmR,EAAgBp7C,KAAK0E,QAAQjB,QAG7BzD,KAAKwoC,gBACPuB,EAAa/pC,KAAK+W,KAClBkzB,EAAWjqC,KAAK6W,QAEhBkzB,EAAa/pC,KAAK4W,IAClBqzB,EAAWjqC,KAAK8W,OAEhBskC,GAAiBA,GAEnBp7C,KAAKupC,YAAcQ,EACnB/pC,KAAKwpC,UAAYS,EACjBjqC,KAAK+rC,eAAiBqP,EACtBp7C,KAAKihC,QAAUgJ,EAAWF,EAC1B/pC,KAAKq7C,eAAiBr7C,KAAK0E,QAAQ42C,aACrC,CAEAH,cACEj4C,EAAKlD,KAAK0E,QAAQy2C,YAAa,CAACn7C,MAClC,CAIA85C,sBACE52C,EAAKlD,KAAK0E,QAAQo1C,oBAAqB,CAAC95C,MAC1C,CACA+5C,gBAEM/5C,KAAKwoC,gBAEPxoC,KAAKiY,MAAQjY,KAAKgf,SAClBhf,KAAK+W,KAAO,EACZ/W,KAAK6W,MAAQ7W,KAAKiY,QAElBjY,KAAK4a,OAAS5a,KAAK2qB,UAGnB3qB,KAAK4W,IAAM,EACX5W,KAAK8W,OAAS9W,KAAK4a,QAIrB5a,KAAKq4C,YAAc,EACnBr4C,KAAKm4C,WAAa,EAClBn4C,KAAKs4C,aAAe,EACpBt4C,KAAKo4C,cAAgB,CACvB,CACA4B,qBACE92C,EAAKlD,KAAK0E,QAAQs1C,mBAAoB,CAACh6C,MACzC,CAEAu7C,WAAWxmC,GACT/U,KAAKmR,MAAMqqC,cAAczmC,EAAM/U,KAAKya,cACpCvX,EAAKlD,KAAK0E,QAAQqQ,GAAO,CAAC/U,MAC5B,CAGAi6C,mBACEj6C,KAAKu7C,WAAW,mBAClB,CACArB,sBAAuB,CACvBC,kBACEn6C,KAAKu7C,WAAW,kBAClB,CAGAhB,mBACEv6C,KAAKu7C,WAAW,mBAClB,CAIAf,aACE,MAAO,EACT,CACAC,kBACEz6C,KAAKu7C,WAAW,kBAClB,CAEAE,8BACEv4C,EAAKlD,KAAK0E,QAAQ+2C,4BAA6B,CAACz7C,MAClD,CAKA07C,mBAAmBxqC,GACjB,MAAMwkC,EAAW11C,KAAK0E,QAAQwM,MAC9B,IAAIhf,EAAG2R,EAAMytB,EACb,IAAKp/B,EAAI,EAAG2R,EAAOqN,EAAMrf,OAAQK,EAAI2R,EAAM3R,IACzCo/B,EAAOpgB,EAAMhf,GACbo/B,EAAK8L,MAAQl6B,EAAKwyC,EAASxyC,SAAU,CAACouB,EAAKpvB,MAAOhQ,EAAGgf,GAAQlR,KAEjE,CACA27C,6BACEz4C,EAAKlD,KAAK0E,QAAQi3C,2BAA4B,CAAC37C,MACjD,CAIA46C,+BACE13C,EAAKlD,KAAK0E,QAAQk2C,6BAA8B,CAAC56C,MACnD,CACA66C,yBACE,MAAMn2C,EAAU1E,KAAK0E,QACfgxC,EAAWhxC,EAAQwM,MACnB0qC,EAAWxE,GAAcp3C,KAAKkR,MAAMrf,OAAQ6S,EAAQwM,MAAMglC,eAC1D99B,EAAcs9B,EAASt9B,aAAe,EACtCC,EAAcq9B,EAASr9B,YAC7B,IACIV,EAAWgT,EAAWkxB,EADtBtD,EAAgBngC,EAGpB,IAAKpY,KAAK87C,eAAiBpG,EAAS1+B,SAAWoB,GAAeC,GAAeujC,GAAY,IAAM57C,KAAKwoC,eAElG,YADAxoC,KAAKu4C,cAAgBngC,GAIvB,MAAM2jC,EAAa/7C,KAAKg8C,iBAClBC,EAAgBF,EAAWG,OAAOjkC,MAClCkkC,EAAiBJ,EAAWK,QAAQxhC,OAIpCoE,EAAWpV,GAAY5J,KAAKmR,MAAM8G,MAAQgkC,EAAe,EAAGj8C,KAAKgf,UACvErH,EAAYjT,EAAQuS,OAASjX,KAAKgf,SAAW48B,EAAW58B,GAAY48B,EAAW,GAG3EK,EAAgB,EAAItkC,IACtBA,EAAYqH,GAAY48B,GAAYl3C,EAAQuS,OAAS,GAAM,IAC3D0T,EAAY3qB,KAAK2qB,UAAYktB,GAAkBnzC,EAAQ4S,MACvDo+B,EAAS/+B,QAAUmhC,GAAepzC,EAAQwT,MAAOlY,KAAKmR,MAAMzM,QAAQ0O,MACpEyoC,EAAmBpsD,KAAKkZ,KAAKszC,EAAgBA,EAAgBE,EAAiBA,GAC9E5D,EAAgBrwC,GAAUzY,KAAKE,IAC7BF,KAAK4sD,KAAKzyC,IAAamyC,EAAWK,QAAQxhC,OAAS,GAAKjD,GAAY,EAAG,IACvEloB,KAAK4sD,KAAKzyC,GAAY+gB,EAAYkxB,GAAmB,EAAG,IAAMpsD,KAAK4sD,KAAKzyC,GAAYuyC,EAAiBN,GAAmB,EAAG,MAE7HtD,EAAgB9oD,KAAKC,IAAI0oB,EAAa3oB,KAAKE,IAAI0oB,EAAakgC,KAG9Dv4C,KAAKu4C,cAAgBA,CACvB,CACAuC,8BACE53C,EAAKlD,KAAK0E,QAAQo2C,4BAA6B,CAAC96C,MAClD,CACA+6C,gBAAiB,CAIjBC,YACE93C,EAAKlD,KAAK0E,QAAQs2C,UAAW,CAACh7C,MAChC,CACAi7C,MAEE,MAAMxT,EAAU,CACdxvB,MAAO,EACP2C,OAAQ,IAGJ,MAACzJ,EAAOzM,SAAUwM,MAAOwkC,EAAUx9B,MAAOokC,EAAWhlC,KAAMilC,IAAav8C,KACxEgX,EAAUhX,KAAK87C,aACftT,EAAexoC,KAAKwoC,eAE1B,GAAIxxB,EAAS,CACX,MAAMwlC,EAAc1E,GAAewE,EAAWnrC,EAAMzM,QAAQ0O,MAU5D,GATIo1B,GACFf,EAAQxvB,MAAQjY,KAAKgf,SACrByoB,EAAQ7sB,OAASi9B,GAAkB0E,GAAYC,IAE/C/U,EAAQ7sB,OAAS5a,KAAK2qB,UACtB8c,EAAQxvB,MAAQ4/B,GAAkB0E,GAAYC,GAI5C9G,EAAS1+B,SAAWhX,KAAKkR,MAAMrf,OAAQ,CACzC,MAAM,MAAC0kD,EAAA,KAAOlsC,EAAA,OAAM6xC,EAAA,QAAQE,GAAWp8C,KAAKg8C,iBACtCS,EAAiC,EAAnB/G,EAAS/+B,QACvB+lC,EAAe10C,GAAUhI,KAAKu4C,eAC9B7pC,EAAMjf,KAAKif,IAAIguC,GACfjvC,EAAMhe,KAAKge,IAAIivC,GAErB,GAAIlU,EAAc,CAEhB,MAAMmU,EAAcjH,EAASp9B,OAAS,EAAI7K,EAAMyuC,EAAOjkC,MAAQvJ,EAAM0tC,EAAQxhC,OAC7E6sB,EAAQ7sB,OAASnrB,KAAKE,IAAIqQ,KAAK2qB,UAAW8c,EAAQ7sB,OAAS+hC,EAAcF,OACpE,CAGL,MAAMG,EAAalH,EAASp9B,OAAS,EAAI5J,EAAMwtC,EAAOjkC,MAAQxK,EAAM2uC,EAAQxhC,OAE5E6sB,EAAQxvB,MAAQxoB,KAAKE,IAAIqQ,KAAKgf,SAAUyoB,EAAQxvB,MAAQ2kC,EAAaH,GAEvEz8C,KAAK68C,kBAAkBtG,EAAOlsC,EAAMoD,EAAKiB,IAI7C1O,KAAK88C,iBAEDtU,GACFxoC,KAAKiY,MAAQjY,KAAKihC,QAAU9vB,EAAM8G,MAAQjY,KAAKk4C,SAASnhC,KAAO/W,KAAKk4C,SAASrhC,MAC7E7W,KAAK4a,OAAS6sB,EAAQ7sB,SAEtB5a,KAAKiY,MAAQwvB,EAAQxvB,MACrBjY,KAAK4a,OAAS5a,KAAKihC,QAAU9vB,EAAMyJ,OAAS5a,KAAKk4C,SAASthC,IAAM5W,KAAKk4C,SAASphC,OAElF,CAEA+lC,kBAAkBtG,EAAOlsC,EAAMoD,EAAKiB,GAClC,MAAOwC,OAAO,MAACrF,EAAA,QAAO8K,GAAQ,SAAEu1B,GAAYlsC,KAAK0E,QAC3Cq4C,EAAmC,IAAvB/8C,KAAKu4C,cACjByE,EAAgC,QAAb9Q,GAAoC,MAAdlsC,KAAKwM,KAEpD,GAAIxM,KAAKwoC,eAAgB,CACvB,MAAMyU,EAAaj9C,KAAKmhC,gBAAgB,GAAKnhC,KAAK+W,KAC5CmmC,EAAcl9C,KAAK6W,MAAQ7W,KAAKmhC,gBAAgBnhC,KAAKkR,MAAMrf,OAAS,GAC1E,IAAIwmD,EAAc,EACdC,EAAe,EAIfyE,EACEC,GACF3E,EAAc3pC,EAAM6nC,EAAMt+B,MAC1BqgC,EAAe7qC,EAAMpD,EAAKuQ,SAE1By9B,EAAc5qC,EAAM8oC,EAAM37B,OAC1B09B,EAAe5pC,EAAMrE,EAAK4N,OAET,UAAVpM,EACTysC,EAAejuC,EAAK4N,MACD,QAAVpM,EACTwsC,EAAc9B,EAAMt+B,MACD,UAAVpM,IACTwsC,EAAc9B,EAAMt+B,MAAQ,EAC5BqgC,EAAejuC,EAAK4N,MAAQ,GAI9BjY,KAAKq4C,YAAc5oD,KAAKC,KAAK2oD,EAAc4E,EAAatmC,GAAW3W,KAAKiY,OAASjY,KAAKiY,MAAQglC,GAAa,GAC3Gj9C,KAAKs4C,aAAe7oD,KAAKC,KAAK4oD,EAAe4E,EAAcvmC,GAAW3W,KAAKiY,OAASjY,KAAKiY,MAAQilC,GAAc,OAC1G,CACL,IAAI/E,EAAa9tC,EAAKuQ,OAAS,EAC3Bw9B,EAAgB7B,EAAM37B,OAAS,EAErB,UAAV/O,GACFssC,EAAa,EACbC,EAAgB7B,EAAM37B,QACH,QAAV/O,IACTssC,EAAa9tC,EAAKuQ,OAClBw9B,EAAgB,GAGlBp4C,KAAKm4C,WAAaA,EAAaxhC,EAC/B3W,KAAKo4C,cAAgBA,EAAgBzhC,EAEzC,CAMAmmC,iBACM98C,KAAKk4C,WACPl4C,KAAKk4C,SAASnhC,KAAOtnB,KAAKC,IAAIsQ,KAAKq4C,YAAar4C,KAAKk4C,SAASnhC,MAC9D/W,KAAKk4C,SAASthC,IAAMnnB,KAAKC,IAAIsQ,KAAKm4C,WAAYn4C,KAAKk4C,SAASthC,KAC5D5W,KAAKk4C,SAASrhC,MAAQpnB,KAAKC,IAAIsQ,KAAKs4C,aAAct4C,KAAKk4C,SAASrhC,OAChE7W,KAAKk4C,SAASphC,OAASrnB,KAAKC,IAAIsQ,KAAKo4C,cAAep4C,KAAKk4C,SAASphC,QAEtE,CAEAokC,WACEh4C,EAAKlD,KAAK0E,QAAQw2C,SAAU,CAACl7C,MAC/B,CAMAwoC,eACE,MAAM,KAACh8B,EAAA,SAAM0/B,GAAYlsC,KAAK0E,QAC9B,MAAoB,QAAbwnC,GAAmC,WAAbA,GAAkC,MAAT1/B,CACxD,CAIA2wC,aACE,OAAOn9C,KAAK0E,QAAQ+pC,QACtB,CAMAkM,sBAAsBzpC,GAMpB,IAAIhf,EAAG2R,EACP,IANA7D,KAAKy7C,8BAELz7C,KAAK07C,mBAAmBxqC,GAInBhf,EAAI,EAAG2R,EAAOqN,EAAMrf,OAAQK,EAAI2R,EAAM3R,IACrC+P,EAAciP,EAAMhf,GAAGkrC,SACzBlsB,EAAMpG,OAAO5Y,EAAG,GAChB2R,IACA3R,KAIJ8N,KAAK27C,4BACP,CAMAK,iBACE,IAAID,EAAa/7C,KAAK24C,YAEtB,IAAKoD,EAAY,CACf,MAAMlC,EAAa75C,KAAK0E,QAAQwM,MAAM2oC,WACtC,IAAI3oC,EAAQlR,KAAKkR,MACb2oC,EAAa3oC,EAAMrf,SACrBqf,EAAQomC,GAAOpmC,EAAO2oC,IAGxB75C,KAAK24C,YAAcoD,EAAa/7C,KAAKo9C,mBAAmBlsC,EAAOA,EAAMrf,OAAQmO,KAAK0E,QAAQwM,MAAMglC,eAGlG,OAAO6F,CACT,CAQAqB,mBAAmBlsC,EAAOrf,EAAQqkD,GAChC,MAAM,IAACxiC,EAAKklC,kBAAmByE,GAAUr9C,KACnCs9C,EAAS,GACTC,EAAU,GACV/F,EAAY/nD,KAAKgY,MAAM5V,EAASulD,GAAcvlD,EAAQqkD,IAC5D,IAEIhkD,EAAGiM,EAAG2b,EAAMsjB,EAAOogB,EAAUC,EAAY9jC,EAAOpG,EAAY0E,EAAO2C,EAAQ8iC,EAF3EC,EAAkB,EAClBC,EAAmB,EAGvB,IAAK1rD,EAAI,EAAGA,EAAIL,EAAQK,GAAKslD,EAAW,CAQtC,GAPApa,EAAQlsB,EAAMhf,GAAGkrC,MACjBogB,EAAWx9C,KAAK69C,wBAAwB3rD,GACxCwhB,EAAIN,KAAOqqC,EAAaD,EAASlkC,OACjCK,EAAQ0jC,EAAOI,GAAcJ,EAAOI,IAAe,CAACtkC,KAAM,CAAC,EAAGC,GAAI,IAClE7F,EAAaiqC,EAASjqC,WACtB0E,EAAQ2C,EAAS,EAEZ3Y,EAAcm7B,IAAW7qC,EAAQ6qC,IAG/B,GAAI7qC,EAAQ6qC,GAEjB,IAAKj/B,EAAI,EAAG2b,EAAOsjB,EAAMvrC,OAAQsM,EAAI2b,IAAQ3b,EAC3Cu/C,EAAqCtgB,EAAMj/B,GAEtC8D,EAAcy7C,IAAiBnrD,EAAQmrD,KAC1CzlC,EAAQiB,GAAaxF,EAAKiG,EAAMR,KAAMQ,EAAMP,GAAInB,EAAOylC,GACvD9iC,GAAUrH,QATd0E,EAAQiB,GAAaxF,EAAKiG,EAAMR,KAAMQ,EAAMP,GAAInB,EAAOmlB,GACvDxiB,EAASrH,EAYX+pC,EAAO13C,KAAKqS,GACZslC,EAAQ33C,KAAKgV,GACb+iC,EAAkBluD,KAAKC,IAAIuoB,EAAO0lC,GAClCC,EAAmBnuD,KAAKC,IAAIkrB,EAAQgjC,EACtC,EAhxBJ,SAAwBP,EAAQxrD,GAC9B0R,EAAK85C,GAAS1jC,IACZ,MAAMP,EAAKO,EAAMP,GACXc,EAAQd,EAAGvnB,OAAS,EAC1B,IAAIK,EACJ,GAAIgoB,EAAQroB,EAAQ,CAClB,IAAKK,EAAI,EAAGA,EAAIgoB,IAAShoB,SAChBynB,EAAMR,KAAKC,EAAGlnB,IAEvBknB,EAAGtO,OAAO,EAAGoP,MAGnB,CAqwBIN,CAAeyjC,EAAQxrD,GAEvB,MAAMqqD,EAASoB,EAAO94C,QAAQm5C,GACxBvB,EAAUmB,EAAQ/4C,QAAQo5C,GAE1BE,EAAWC,IAAA,CAAU9lC,MAAOqlC,EAAOS,IAAQ,EAAGnjC,OAAQ2iC,EAAQQ,IAAQ,IAE5E,MAAO,CACLxH,MAAOuH,EAAQ,GACfzzC,KAAMyzC,EAAQjsD,EAAS,GACvBqqD,OAAQ4B,EAAQ5B,GAChBE,QAAS0B,EAAQ1B,GACjBkB,SACAC,UAEJ,CAOAlgB,iBAAiBn7B,GACf,OAAOA,CACT,CASA0K,iBAAiB1K,EAAO+B,GACtB,OAAOs4B,GACT,CAQA2N,iBAAiB9vB,GAAQ,CAQzB+mB,gBAAgBl9B,GACd,MAAMiN,EAAQlR,KAAKkR,MACnB,OAAIjN,EAAQ,GAAKA,EAAQiN,EAAMrf,OAAS,EAC/B,KAEFmO,KAAK4M,iBAAiBsE,EAAMjN,GAAO/B,MAC5C,CAQA8nC,mBAAmBgU,GACbh+C,KAAK+rC,iBACPiS,EAAU,EAAIA,GAGhB,MAAM5jC,EAAQpa,KAAKupC,YAAcyU,EAAUh+C,KAAKihC,QAChD,OvCnuBKr3B,GuCmuBc5J,KAAKq7C,eAAiBlhC,GAAYna,KAAKmR,MAAOiJ,EAAO,GAAKA,GvCnuBpD,MAAO,MuCouBlC,CAMA6jC,mBAAmB7jC,GACjB,MAAM4jC,GAAW5jC,EAAQpa,KAAKupC,aAAevpC,KAAKihC,QAClD,OAAOjhC,KAAK+rC,eAAiB,EAAIiS,EAAUA,CAC7C,CAOAhX,eACE,OAAOhnC,KAAK4M,iBAAiB5M,KAAKk+C,eACpC,CAKAA,eACE,MAAM,IAACvuD,EAAG,IAAED,GAAOsQ,KAEnB,OAAOrQ,EAAM,GAAKD,EAAM,EAAIA,EAC1BC,EAAM,GAAKD,EAAM,EAAIC,EACrB,CACJ,CAKA8qB,WAAWxW,GACT,MAAMiN,EAAQlR,KAAKkR,OAAS,GAE5B,GAAIjN,GAAS,GAAKA,EAAQiN,EAAMrf,OAAQ,CACtC,MAAMy/B,EAAOpgB,EAAMjN,GACnB,OAAOqtB,EAAKiH,WACbjH,EAAKiH,SAt1BV,SAA2B9T,EAAQxgB,EAAOqtB,GACxC,OAAOzQ,GAAc4D,EAAQ,CAC3B6M,OACArtB,QACArE,KAAM,QAEV,CAg1BqBu+C,CAAkBn+C,KAAKya,aAAcxW,EAAOqtB,IAE7D,OAAOtxB,KAAKu4B,WACZv4B,KAAKu4B,SA/1BA1X,GA+1B8B7gB,KAAKmR,MAAMsJ,aA/1BnB,CAC3BjG,MA81B4DxU,KA71B5DJ,KAAM,UA81BR,CAMAg2C,YACE,MAAMwI,EAAcp+C,KAAK0E,QAAQwM,MAG3BmtC,EAAMr2C,GAAUhI,KAAKu4C,eACrB7pC,EAAMjf,KAAK2X,IAAI3X,KAAKif,IAAI2vC,IACxB5wC,EAAMhe,KAAK2X,IAAI3X,KAAKge,IAAI4wC,IAExBtC,EAAa/7C,KAAKg8C,iBAClBrlC,EAAUynC,EAAY1lC,iBAAmB,EACzC1mB,EAAI+pD,EAAaA,EAAWG,OAAOjkC,MAAQtB,EAAU,EACrDnnB,EAAIusD,EAAaA,EAAWK,QAAQxhC,OAASjE,EAAU,EAG7D,OAAO3W,KAAKwoC,eACRh5C,EAAIkf,EAAM1c,EAAIyb,EAAMzb,EAAI0c,EAAMlf,EAAIie,EAClCje,EAAIie,EAAMzb,EAAI0c,EAAMlf,EAAIkf,EAAM1c,EAAIyb,CACxC,CAMAquC,aACE,MAAM9kC,EAAUhX,KAAK0E,QAAQsS,QAE7B,MAAgB,SAAZA,IACOA,EAGJhX,KAAKu2B,0BAA0B1kC,OAAS,CACjD,CAKAysD,sBAAsB5gB,GACpB,MAAMlxB,EAAOxM,KAAKwM,KACZ2E,EAAQnR,KAAKmR,MACbzM,EAAU1E,KAAK0E,SACf,KAAC4S,EAAI,SAAE40B,EAAA,OAAUp0B,GAAUpT,EAC3BuS,EAASK,EAAKL,OACduxB,EAAexoC,KAAKwoC,eAEpB6O,EADQr3C,KAAKkR,MACOrf,QAAUolB,EAAS,EAAI,GAC3CsnC,EAAK1G,GAAkBvgC,GACvBrM,EAAQ,GAERuzC,EAAa1mC,EAAOkL,WAAWhjB,KAAKya,cACpCgkC,EAAYD,EAAWxnC,QAAUwnC,EAAWvmC,MAAQ,EACpDymC,EAAgBD,EAAY,EAC5BE,EAAmB,SAASvkC,GAChC,OAAOD,GAAYhJ,EAAOiJ,EAAOqkC,EACnC,EACA,IAAIG,EAAa1sD,EAAG0lD,EAAWiH,EAC3BC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EAEpC,GAAiB,QAAbnT,EACF0S,EAAcD,EAAiB3+C,KAAK8W,QACpCioC,EAAM/+C,KAAK8W,OAASynC,EACpBU,EAAML,EAAcF,EACpBS,EAAKR,EAAiBjhB,EAAU9mB,KAAO8nC,EACvCW,EAAK3hB,EAAU5mB,YACV,GAAiB,WAAbo1B,EACT0S,EAAcD,EAAiB3+C,KAAK4W,KACpCuoC,EAAKzhB,EAAU9mB,IACfyoC,EAAKV,EAAiBjhB,EAAU5mB,QAAU4nC,EAC1CK,EAAMH,EAAcF,EACpBO,EAAMj/C,KAAK4W,IAAM2nC,OACZ,GAAiB,SAAbrS,EACT0S,EAAcD,EAAiB3+C,KAAK6W,OACpCioC,EAAM9+C,KAAK6W,MAAQ0nC,EACnBS,EAAMJ,EAAcF,EACpBQ,EAAKP,EAAiBjhB,EAAU3mB,MAAQ2nC,EACxCU,EAAK1hB,EAAU7mB,WACV,GAAiB,UAAbq1B,EACT0S,EAAcD,EAAiB3+C,KAAK+W,MACpCmoC,EAAKxhB,EAAU3mB,KACfqoC,EAAKT,EAAiBjhB,EAAU7mB,OAAS6nC,EACzCI,EAAMF,EAAcF,EACpBM,EAAMh/C,KAAK+W,KAAOwnC,OACb,GAAa,MAAT/xC,EAAc,CACvB,GAAiB,WAAb0/B,EACF0S,EAAcD,GAAkBjhB,EAAU9mB,IAAM8mB,EAAU5mB,QAAU,EAAI,SACnE,GAAIvU,EAAS2pC,GAAW,CAC7B,MAAMoT,EAAiBrhD,OAAOD,KAAKkuC,GAAU,GACvChqC,EAAQgqC,EAASoT,GACvBV,EAAcD,EAAiB3+C,KAAKmR,MAAMsD,OAAO6qC,GAAgB1yC,iBAAiB1K,IAGpFi9C,EAAKzhB,EAAU9mB,IACfyoC,EAAK3hB,EAAU5mB,OACfioC,EAAMH,EAAcF,EACpBO,EAAMF,EAAMR,OACP,GAAa,MAAT/xC,EAAc,CACvB,GAAiB,WAAb0/B,EACF0S,EAAcD,GAAkBjhB,EAAU3mB,KAAO2mB,EAAU7mB,OAAS,QAC/D,GAAItU,EAAS2pC,GAAW,CAC7B,MAAMoT,EAAiBrhD,OAAOD,KAAKkuC,GAAU,GACvChqC,EAAQgqC,EAASoT,GACvBV,EAAcD,EAAiB3+C,KAAKmR,MAAMsD,OAAO6qC,GAAgB1yC,iBAAiB1K,IAGpF48C,EAAMF,EAAcF,EACpBM,EAAMF,EAAMP,EACZW,EAAKxhB,EAAU3mB,KACfqoC,EAAK1hB,EAAU7mB,MAGjB,MAAM0oC,EAAQ18C,EAAe6B,EAAQwM,MAAMglC,cAAemB,GACpDmI,EAAO/vD,KAAKC,IAAI,EAAGD,KAAKgnD,KAAKY,EAAckI,IACjD,IAAKrtD,EAAI,EAAGA,EAAImlD,EAAanlD,GAAKstD,EAAM,CACtC,MAAMzsC,EAAU/S,KAAKya,WAAWvoB,GAC1ButD,EAAcnoC,EAAK0L,WAAWjQ,GAC9B2sC,EAAoB5nC,EAAOkL,WAAWjQ,GAEtCwE,EAAYkoC,EAAYloC,UACxBooC,EAAYF,EAAYj/C,MACxBqvB,EAAa6vB,EAAkB3nC,MAAQ,GACvC+X,EAAmB4vB,EAAkB1nC,WAErCL,EAAY8nC,EAAY9nC,UACxBE,EAAY4nC,EAAY5nC,UACxB+nC,EAAiBH,EAAYG,gBAAkB,GAC/CC,EAAuBJ,EAAYI,qBAEzCjI,EAAYH,GAAoBz3C,KAAM9N,EAAG+kB,QAGvB3lB,IAAdsmD,IAIJiH,EAAmB1kC,GAAYhJ,EAAOymC,EAAWrgC,GAE7CixB,EACFsW,EAAME,EAAME,EAAKE,EAAKP,EAEtBE,EAAME,EAAME,EAAKE,EAAKR,EAGxB5zC,EAAMrF,KAAK,CACTk5C,MACAC,MACAC,MACAC,MACAC,KACAC,KACAC,KACAC,KACApnC,MAAOV,EACP/W,MAAOm/C,EACP9vB,aACAC,mBACAnY,YACAE,YACA+nC,iBACAC,yBAEJ,CAKA,OAHA7/C,KAAKi5C,aAAe5B,EACpBr3C,KAAKk5C,aAAe0F,EAEb3zC,CACT,CAKA0uC,mBAAmBjc,GACjB,MAAMlxB,EAAOxM,KAAKwM,KACZ9H,EAAU1E,KAAK0E,SACf,SAACwnC,EAAUh7B,MAAOktC,GAAe15C,EACjC8jC,EAAexoC,KAAKwoC,eACpBt3B,EAAQlR,KAAKkR,OACb,MAACrF,EAAA,WAAOiN,EAAA,QAAYnC,EAAO,OAAE2B,GAAU8lC,EACvCG,EAAK1G,GAAkBnzC,EAAQ4S,MAC/BwoC,EAAiBvB,EAAK5nC,EACtBopC,EAAkBznC,GAAU3B,EAAUmpC,EACtCzkC,GAAYrT,GAAUhI,KAAKu4C,eAC3BttC,EAAQ,GACd,IAAI/Y,EAAG2R,EAAMytB,EAAM8L,EAAOjqC,EAAGmS,EAAGmY,EAAWrD,EAAOhH,EAAMG,EAAYysC,EAAWC,EAC3EviC,EAAe,SAEnB,GAAiB,QAAbwuB,EACF5mC,EAAItF,KAAK8W,OAASipC,EAClBtiC,EAAYzd,KAAKkgD,+BACZ,GAAiB,WAAbhU,EACT5mC,EAAItF,KAAK4W,IAAMmpC,EACftiC,EAAYzd,KAAKkgD,+BACZ,GAAiB,SAAbhU,EAAqB,CAC9B,MAAMrsC,EAAMG,KAAKmgD,wBAAwB5B,GACzC9gC,EAAY5d,EAAI4d,UAChBtqB,EAAI0M,EAAI1M,OACH,GAAiB,UAAb+4C,EAAsB,CAC/B,MAAMrsC,EAAMG,KAAKmgD,wBAAwB5B,GACzC9gC,EAAY5d,EAAI4d,UAChBtqB,EAAI0M,EAAI1M,OACH,GAAa,MAATqZ,EAAc,CACvB,GAAiB,WAAb0/B,EACF5mC,GAAMo4B,EAAU9mB,IAAM8mB,EAAU5mB,QAAU,EAAKgpC,OAC1C,GAAIv9C,EAAS2pC,GAAW,CAC7B,MAAMoT,EAAiBrhD,OAAOD,KAAKkuC,GAAU,GACvChqC,EAAQgqC,EAASoT,GACvBh6C,EAAItF,KAAKmR,MAAMsD,OAAO6qC,GAAgB1yC,iBAAiB1K,GAAS49C,EAElEriC,EAAYzd,KAAKkgD,+BACZ,GAAa,MAAT1zC,EAAc,CACvB,GAAiB,WAAb0/B,EACF/4C,GAAMuqC,EAAU3mB,KAAO2mB,EAAU7mB,OAAS,EAAKipC,OAC1C,GAAIv9C,EAAS2pC,GAAW,CAC7B,MAAMoT,EAAiBrhD,OAAOD,KAAKkuC,GAAU,GACvChqC,EAAQgqC,EAASoT,GACvBnsD,EAAI6M,KAAKmR,MAAMsD,OAAO6qC,GAAgB1yC,iBAAiB1K,GAEzDub,EAAYzd,KAAKmgD,wBAAwB5B,GAAI9gC,UAGlC,MAATjR,IACY,UAAVX,EACF6R,EAAe,MACI,QAAV7R,IACT6R,EAAe,WAInB,MAAMq+B,EAAa/7C,KAAKg8C,iBACxB,IAAK9pD,EAAI,EAAG2R,EAAOqN,EAAMrf,OAAQK,EAAI2R,IAAQ3R,EAAG,CAC9Co/B,EAAOpgB,EAAMhf,GACbkrC,EAAQ9L,EAAK8L,MAEb,MAAMqiB,EAAcrB,EAAYp7B,WAAWhjB,KAAKya,WAAWvoB,IAC3DkoB,EAAQpa,KAAKmhC,gBAAgBjvC,GAAKksD,EAAYzlC,YAC9CvF,EAAOpT,KAAK69C,wBAAwB3rD,GACpCqhB,EAAaH,EAAKG,WAClBysC,EAAYztD,EAAQ6qC,GAASA,EAAMvrC,OAAS,EAC5C,MAAMuuD,EAAYJ,EAAY,EACxBx/C,EAAQi/C,EAAYj/C,MACpBqe,EAAc4gC,EAAYjnC,gBAC1BoG,EAAc6gC,EAAYlnC,gBAChC,IA4CIuG,EA5CAuhC,EAAgB5iC,EA8CpB,GA5CI+qB,GACFr1C,EAAIinB,EAEc,UAAdqD,IAEA4iC,EADEnuD,IAAM2R,EAAO,EACE7D,KAAK0E,QAAQjB,QAAoB,OAAV,QACzB,IAANvR,EACQ8N,KAAK0E,QAAQjB,QAAmB,QAAT,OAExB,UAMhBw8C,EAFa,QAAb/T,EACiB,SAAfpzB,GAAsC,IAAbuC,GACb2kC,EAAYzsC,EAAaA,EAAa,EAC5B,WAAfuF,GACKijC,EAAWK,QAAQxhC,OAAS,EAAIwlC,EAAY7sC,EAAaA,GAEzDwoC,EAAWK,QAAQxhC,OAASrH,EAAa,EAItC,SAAfuF,GAAsC,IAAbuC,EACd9H,EAAa,EACF,WAAfuF,EACIijC,EAAWK,QAAQxhC,OAAS,EAAIwlC,EAAY7sC,EAE5CwoC,EAAWK,QAAQxhC,OAASolC,EAAYzsC,EAGrD+E,IACF2nC,IAAe,GAEA,IAAb5kC,GAAmBokC,EAAY1mC,oBACjC5lB,GAAKogB,EAAc,EAAK9jB,KAAKge,IAAI4N,MAGnC/V,EAAI8U,EACJ6lC,GAAc,EAAID,GAAazsC,EAAa,GAK1CksC,EAAY1mC,kBAAmB,CACjC,MAAMunC,EAAengC,GAAUs/B,EAAYxmC,iBACrC2B,EAASmhC,EAAWwB,QAAQrrD,GAC5B+lB,EAAQ8jC,EAAWuB,OAAOprD,GAEhC,IAAI0kB,EAAMqpC,EAAaK,EAAa1pC,IAChCG,EAAO,EAAIupC,EAAavpC,KAE5B,OAAQ2G,GACR,IAAK,SACH9G,GAAOgE,EAAS,EAChB,MACF,IAAK,SACHhE,GAAOgE,EAMT,OAAQ6C,GACR,IAAK,SACH1G,GAAQkB,EAAQ,EAChB,MACF,IAAK,QACHlB,GAAQkB,EACR,MACF,IAAK,QACC/lB,IAAM2R,EAAO,EACfkT,GAAQkB,EACC/lB,EAAI,IACb6kB,GAAQkB,EAAQ,GAOpB6G,EAAW,CACT/H,OACAH,MACAqB,MAAOA,EAAQqoC,EAAaroC,MAC5B2C,OAAQA,EAAS0lC,EAAa1lC,OAE9Bpa,MAAOi/C,EAAYzmC,eAIvB/N,EAAMrF,KAAK,CACTw3B,QACAhqB,OACA6sC,aACAv7C,QAAS,CACP2W,WACA7a,QACAqe,cACAD,cACAnB,UAAW4iC,EACX3iC,eACAH,YAAa,CAACpqB,EAAGmS,GACjBwZ,aAGN,CAEA,OAAO7T,CACT,CAEAi1C,0BACE,MAAM,SAAChU,EAAA,MAAUh7B,GAASlR,KAAK0E,QAG/B,IAFkBsD,GAAUhI,KAAKu4C,eAG/B,MAAoB,QAAbrM,EAAqB,OAAS,QAGvC,IAAIrgC,EAAQ,SAUZ,MARoB,UAAhBqF,EAAMrF,MACRA,EAAQ,OACiB,QAAhBqF,EAAMrF,MACfA,EAAQ,QACiB,UAAhBqF,EAAMrF,QACfA,EAAQ,SAGHA,CACT,CAEAs0C,wBAAwB5B,GACtB,MAAM,SAACrS,EAAUh7B,OAAO,WAAC4H,EAAA,OAAYR,EAAA,QAAQ3B,IAAY3W,KAAK0E,QAExDo7C,EAAiBvB,EAAK5nC,EACtBulC,EAFal8C,KAAKg8C,iBAEEE,OAAOjkC,MAEjC,IAAIwF,EACAtqB,EA0DJ,MAxDiB,SAAb+4C,EACE5zB,GACFnlB,EAAI6M,KAAK6W,MAAQF,EAEE,SAAfmC,EACF2E,EAAY,OACY,WAAf3E,GACT2E,EAAY,SACZtqB,GAAM+oD,EAAS,IAEfz+B,EAAY,QACZtqB,GAAK+oD,KAGP/oD,EAAI6M,KAAK6W,MAAQipC,EAEE,SAAfhnC,EACF2E,EAAY,QACY,WAAf3E,GACT2E,EAAY,SACZtqB,GAAM+oD,EAAS,IAEfz+B,EAAY,OACZtqB,EAAI6M,KAAK+W,OAGS,UAAbm1B,EACL5zB,GACFnlB,EAAI6M,KAAK+W,KAAOJ,EAEG,SAAfmC,EACF2E,EAAY,QACY,WAAf3E,GACT2E,EAAY,SACZtqB,GAAM+oD,EAAS,IAEfz+B,EAAY,OACZtqB,GAAK+oD,KAGP/oD,EAAI6M,KAAK+W,KAAO+oC,EAEG,SAAfhnC,EACF2E,EAAY,OACY,WAAf3E,GACT2E,EAAY,SACZtqB,GAAK+oD,EAAS,IAEdz+B,EAAY,QACZtqB,EAAI6M,KAAK6W,QAIb4G,EAAY,QAGP,CAACA,YAAWtqB,IACrB,CAKAotD,oBACE,GAAIvgD,KAAK0E,QAAQwM,MAAMoH,OACrB,OAGF,MAAMnH,EAAQnR,KAAKmR,MACb+6B,EAAWlsC,KAAK0E,QAAQwnC,SAE9B,MAAiB,SAAbA,GAAoC,UAAbA,EAClB,CAACt1B,IAAK,EAAGG,KAAM/W,KAAK+W,KAAMD,OAAQ3F,EAAMyJ,OAAQ/D,MAAO7W,KAAK6W,OAClD,QAAbq1B,GAAmC,WAAbA,EACnB,CAACt1B,IAAK5W,KAAK4W,IAAKG,KAAM,EAAGD,OAAQ9W,KAAK8W,OAAQD,MAAO1F,EAAM8G,YADlE,CAGJ,CAKAuoC,iBACE,MAAM,IAAC9sC,EAAKhP,SAAS,gBAACiO,GAAgB,KAAEoE,EAAI,IAAEH,EAAA,MAAKqB,EAAA,OAAO2C,GAAU5a,KAChE2S,IACFe,EAAImG,OACJnG,EAAI8J,UAAY7K,EAChBe,EAAI+K,SAAS1H,EAAMH,EAAKqB,EAAO2C,GAC/BlH,EAAIuG,UAER,CAEAmwB,qBAAqBloC,GACnB,MAAMoV,EAAOtX,KAAK0E,QAAQ4S,KAC1B,IAAKtX,KAAK87C,eAAiBxkC,EAAKN,QAC9B,OAAO,EAET,MACM/S,EADQjE,KAAKkR,MACCuvC,WAAUz/C,GAAKA,EAAEkB,QAAUA,IAC/C,GAAI+B,GAAS,EAAG,CAEd,OADaqT,EAAK0L,WAAWhjB,KAAKya,WAAWxW,IACjCsT,UAEd,OAAO,CACT,CAKAmpC,SAAShjB,GACP,MAAMpmB,EAAOtX,KAAK0E,QAAQ4S,KACpB5D,EAAM1T,KAAK0T,IACXzI,EAAQjL,KAAKy4C,iBAAmBz4C,KAAKy4C,eAAiBz4C,KAAKs+C,sBAAsB5gB,IACvF,IAAIxrC,EAAG2R,EAEP,MAAM88C,EAAWA,CAAC5tD,EAAIC,EAAIsgB,KACnBA,EAAM2E,OAAU3E,EAAM9S,QAG3BkT,EAAImG,OACJnG,EAAI6D,UAAYjE,EAAM2E,MACtBvE,EAAI2K,YAAc/K,EAAM9S,MACxBkT,EAAIktC,YAAYttC,EAAMuc,YAAc,IACpCnc,EAAImtC,eAAiBvtC,EAAMwc,iBAE3Bpc,EAAIgI,YACJhI,EAAIoI,OAAO/oB,EAAGI,EAAGJ,EAAGuS,GACpBoO,EAAIqI,OAAO/oB,EAAGG,EAAGH,EAAGsS,GACpBoO,EAAI0I,SACJ1I,EAAIuG,UAAS,EAGf,GAAI3C,EAAKN,QACP,IAAK9kB,EAAI,EAAG2R,EAAOoH,EAAMpZ,OAAQK,EAAI2R,IAAQ3R,EAAG,CAC9C,MAAMmU,EAAO4E,EAAM/Y,GAEfolB,EAAKE,iBACPmpC,EACE,CAACxtD,EAAGkT,EAAK64C,GAAI55C,EAAGe,EAAK84C,IACrB,CAAChsD,EAAGkT,EAAK+4C,GAAI95C,EAAGe,EAAKg5C,IACrBh5C,GAIAiR,EAAKG,WACPkpC,EACE,CAACxtD,EAAGkT,EAAKy4C,IAAKx5C,EAAGe,EAAK04C,KACtB,CAAC5rD,EAAGkT,EAAK24C,IAAK15C,EAAGe,EAAK44C,KACtB,CACEz+C,MAAO6F,EAAKwR,UACZI,MAAO5R,EAAKsR,UACZkY,WAAYxpB,EAAKu5C,eACjB9vB,iBAAkBzpB,EAAKw5C,sBAI/B,CAEJ,CAKAiB,aACE,MAAM,MAAC3vC,EAAA,IAAOuC,EAAKhP,SAAS,OAACoT,EAAM,KAAER,IAAStX,KACxCw+C,EAAa1mC,EAAOkL,WAAWhjB,KAAKya,cACpCgkC,EAAY3mC,EAAOd,QAAUwnC,EAAWvmC,MAAQ,EACtD,IAAKwmC,EACH,OAEF,MAAMsC,EAAgBzpC,EAAK0L,WAAWhjB,KAAKya,WAAW,IAAIlD,UACpDqnC,EAAc5+C,KAAKk5C,aACzB,IAAIgG,EAAIE,EAAID,EAAIE,EAEZr/C,KAAKwoC,gBACP0W,EAAK/kC,GAAYhJ,EAAOnR,KAAK+W,KAAM0nC,GAAaA,EAAY,EAC5DW,EAAKjlC,GAAYhJ,EAAOnR,KAAK6W,MAAOkqC,GAAiBA,EAAgB,EACrE5B,EAAKE,EAAKT,IAEVO,EAAKhlC,GAAYhJ,EAAOnR,KAAK4W,IAAK6nC,GAAaA,EAAY,EAC3DY,EAAKllC,GAAYhJ,EAAOnR,KAAK8W,OAAQiqC,GAAiBA,EAAgB,EACtE7B,EAAKE,EAAKR,GAEZlrC,EAAImG,OACJnG,EAAI6D,UAAYinC,EAAWvmC,MAC3BvE,EAAI2K,YAAcmgC,EAAWh+C,MAE7BkT,EAAIgI,YACJhI,EAAIoI,OAAOojC,EAAIC,GACfzrC,EAAIqI,OAAOqjC,EAAIC,GACf3rC,EAAI0I,SAEJ1I,EAAIuG,SACN,CAKA+mC,WAAWtjB,GAGT,IAFoB19B,KAAK0E,QAAQwM,MAEhB8F,QACf,OAGF,MAAMtD,EAAM1T,KAAK0T,IAEX6I,EAAOvc,KAAKugD,oBACdhkC,GACFE,GAAS/I,EAAK6I,GAGhB,MAAMtR,EAAQjL,KAAK05C,cAAchc,GACjC,IAAK,MAAMr3B,KAAQ4E,EAAO,CACxB,MAAMg2C,EAAoB56C,EAAK3B,QACzB84C,EAAWn3C,EAAK+M,KAGtBsL,GAAWhL,EAFGrN,EAAK+2B,MAEI,EADb/2B,EAAK45C,WACczC,EAAUyD,EACzC,CAEI1kC,GACFG,GAAWhJ,EAEf,CAKAwtC,YACE,MAAM,IAACxtC,EAAKhP,SAAS,SAACwnC,EAAQ,MAAEh0B,EAAK,QAAEzU,IAAYzD,KAEnD,IAAKkY,EAAMlB,QACT,OAGF,MAAM5D,EAAOgN,GAAOlI,EAAM9E,MACpBuD,EAAUwJ,GAAUjI,EAAMvB,SAC1B9K,EAAQqM,EAAMrM,MACpB,IAAIoL,EAAS7D,EAAKG,WAAa,EAEd,WAAb24B,GAAsC,WAAbA,GAAyB3pC,EAAS2pC,IAC7Dj1B,GAAUN,EAAQG,OACdvkB,EAAQ2lB,EAAMC,QAChBlB,GAAU7D,EAAKG,YAAc2E,EAAMC,KAAKtmB,OAAS,KAGnDolB,GAAUN,EAAQC,IAGpB,MAAM,OAACuqC,EAAA,OAAQC,EAAA,SAAQpiC,EAAQ,SAAE3D,GAv8CrC,SAAmB7G,EAAOyC,EAAQi1B,EAAUrgC,GAC1C,MAAM,IAAC+K,EAAG,KAAEG,EAAI,OAAED,EAAM,MAAED,EAAK,MAAE1F,GAASqD,GACpC,UAACkpB,EAAA,OAAWjpB,GAAUtD,EAC5B,IACI6N,EAAUmiC,EAAQC,EADlB/lC,EAAW,EAEf,MAAMT,EAAS9D,EAASF,EAClBqB,EAAQpB,EAAQE,EAEtB,GAAIvC,EAAMg0B,eAAgB,CAGxB,GAFA2Y,EAASr1C,GAAeD,EAAOkL,EAAMF,GAEjCtU,EAAS2pC,GAAW,CACtB,MAAMoT,EAAiBrhD,OAAOD,KAAKkuC,GAAU,GACvChqC,EAAQgqC,EAASoT,GACvB8B,EAAS3sC,EAAO6qC,GAAgB1yC,iBAAiB1K,GAAS0Y,EAAS3D,OAEnEmqC,EADsB,WAAblV,GACCxO,EAAU5mB,OAAS4mB,EAAU9mB,KAAO,EAAIgE,EAAS3D,EAElDkgC,GAAe3iC,EAAO03B,EAAUj1B,GAE3C+H,EAAWnI,EAAQE,MACd,CACL,GAAIxU,EAAS2pC,GAAW,CACtB,MAAMoT,EAAiBrhD,OAAOD,KAAKkuC,GAAU,GACvChqC,EAAQgqC,EAASoT,GACvB6B,EAAS1sC,EAAO6qC,GAAgB1yC,iBAAiB1K,GAAS+V,EAAQhB,OAElEkqC,EADsB,WAAbjV,GACCxO,EAAU3mB,KAAO2mB,EAAU7mB,OAAS,EAAIoB,EAAQhB,EAEjDkgC,GAAe3iC,EAAO03B,EAAUj1B,GAE3CmqC,EAASt1C,GAAeD,EAAOiL,EAAQF,GACvCyE,EAAwB,SAAb6wB,GAAuBrlC,GAAUA,GAE9C,MAAO,CAACs6C,SAAQC,SAAQpiC,WAAU3D,WACpC,CAo6CiDgmC,CAAUrhD,KAAMiX,EAAQi1B,EAAUrgC,GAE/E6S,GAAWhL,EAAKwE,EAAMC,KAAM,EAAG,EAAG/E,EAAM,CACtC5S,MAAO0X,EAAM1X,MACbwe,WACA3D,WACAoC,UAAWs6B,GAAWlsC,EAAOqgC,EAAUzoC,GACvCia,aAAc,SACdH,YAAa,CAAC4jC,EAAQC,IAE1B,CAEAjwB,KAAKuM,GACE19B,KAAK87C,eAIV97C,KAAKwgD,iBACLxgD,KAAK0gD,SAAShjB,GACd19B,KAAK8gD,aACL9gD,KAAKkhD,YACLlhD,KAAKghD,WAAWtjB,GAClB,CAMA0S,UACE,MAAM9yB,EAAOtd,KAAK0E,QACZ48C,EAAKhkC,EAAKpM,OAASoM,EAAKpM,MAAMm/B,GAAK,EACnCkR,EAAK1+C,EAAeya,EAAKhG,MAAQgG,EAAKhG,KAAK+4B,GAAI,GAC/CmR,EAAK3+C,EAAeya,EAAKxF,QAAUwF,EAAKxF,OAAOu4B,EAAG,GAExD,OAAKrwC,KAAK87C,cAAgB97C,KAAKmxB,OAAS8mB,GAAM91C,UAAUgvB,KAUjD,CAAC,CACNkf,EAAGkR,EACHpwB,KAAOuM,IACL19B,KAAKwgD,iBACLxgD,KAAK0gD,SAAShjB,GACd19B,KAAKkhD,WAAW,GAEjB,CACD7Q,EAAGmR,EACHrwB,KAAMA,KACJnxB,KAAK8gD,YAAY,GAElB,CACDzQ,EAAGiR,EACHnwB,KAAOuM,IACL19B,KAAKghD,WAAWtjB,EAAA,IAvBX,CAAC,CACN2S,EAAGiR,EACHnwB,KAAOuM,IACL19B,KAAKmxB,KAAKuM,EAAA,GAuBlB,CAOAnH,wBAAwB32B,GACtB,MAAM05C,EAAQt5C,KAAKmR,MAAMi7B,+BACnBqV,EAASzhD,KAAKwM,KAAO,SACrB2c,EAAS,GACf,IAAIj3B,EAAG2R,EAEP,IAAK3R,EAAI,EAAG2R,EAAOy1C,EAAMznD,OAAQK,EAAI2R,IAAQ3R,EAAG,CAC9C,MAAM8Z,EAAOstC,EAAMpnD,GACf8Z,EAAKy1C,KAAYzhD,KAAKgC,IAAQpC,GAAQoM,EAAKpM,OAASA,GACtDupB,EAAOvjB,KAAKoG,EAEhB,CACA,OAAOmd,CACT,CAOA00B,wBAAwB55C,GAEtB,OAAOmc,GADMpgB,KAAK0E,QAAQwM,MAAM8R,WAAWhjB,KAAKya,WAAWxW,IACxCmP,KACrB,CAKAsuC,aACE,MAAMC,EAAW3hD,KAAK69C,wBAAwB,GAAGtqC,WACjD,OAAQvT,KAAKwoC,eAAiBxoC,KAAKiY,MAAQjY,KAAK4a,QAAU+mC,CAC5D,ECtqDa,MAAMC,GACnBjiD,YAAYC,EAAM0S,EAAOuC,GACvB7U,KAAKJ,KAAOA,EACZI,KAAKsS,MAAQA,EACbtS,KAAK6U,SAAWA,EAChB7U,KAAKiL,MAAQhN,OAAOmG,OAAO,KAC7B,CAEAy9C,UAAUjiD,GACR,OAAO3B,OAAOkE,UAAU2/C,cAAcz/C,KAAKrC,KAAKJ,KAAKuC,UAAWvC,EAAKuC,UACvE,CAMA4/C,SAAS17C,GACP,MAAMlH,EAAQlB,OAAOkkB,eAAe9b,GACpC,IAAI27C,GAyFR,SAA2B7iD,GACzB,MAAO,OAAQA,GAAS,aAAcA,CACxC,EAzFQ8iD,CAAkB9iD,KAEpB6iD,EAAchiD,KAAK+hD,SAAS5iD,IAG9B,MAAM8L,EAAQjL,KAAKiL,MACbjJ,EAAKqE,EAAKrE,GACVsQ,EAAQtS,KAAKsS,MAAQ,IAAMtQ,EAEjC,IAAKA,EACH,MAAM,IAAIohB,MAAM,2BAA6B/c,GAG/C,OAAIrE,KAAMiJ,IAKVA,EAAMjJ,GAAMqE,EAsChB,SAA0BA,EAAMiM,EAAO0vC,GAErC,MAAME,EAAer9C,EAAM5G,OAAOmG,OAAO,MAAO,CAC9C49C,EAActsC,GAASjF,IAAIuxC,GAAe,CAAC,EAC3CtsC,GAASjF,IAAI6B,GACbjM,EAAKqP,WAGPA,GAASxK,IAAIoH,EAAO4vC,GAEhB77C,EAAK87C,eASX,SAAuB7vC,EAAO8vC,GAC5BnkD,OAAOD,KAAKokD,GAAQr3C,SAAQhD,IAC1B,MAAMs6C,EAAgBt6C,EAASrC,MAAM,KAC/B48C,EAAaD,EAAc9wB,MAC3BgxB,EAAc,CAACjwC,GAAOuuB,OAAOwhB,GAAeh/B,KAAK,KACjD5d,EAAQ28C,EAAOr6C,GAAUrC,MAAM,KAC/BuP,EAAaxP,EAAM8rB,MACnBvc,EAAcvP,EAAM4d,KAAK,KAC/B3N,GAASZ,MAAMytC,EAAaD,EAAYttC,EAAaC,EAAA,GAEzD,CAlBIutC,CAAclwC,EAAOjM,EAAK87C,eAGxB97C,EAAK6L,aACPwD,GAASd,SAAStC,EAAOjM,EAAK6L,YAElC,CAtDIuwC,CAAiBp8C,EAAMiM,EAAO0vC,GAC1BhiD,KAAK6U,UACPa,GAASb,SAASxO,EAAKrE,GAAIqE,EAAK4L,YANzBK,CAUX,CAMA7B,IAAIzO,GACF,OAAOhC,KAAKiL,MAAMjJ,EACpB,CAKA0gD,WAAWr8C,GACT,MAAM4E,EAAQjL,KAAKiL,MACbjJ,EAAKqE,EAAKrE,GACVsQ,EAAQtS,KAAKsS,MAEftQ,KAAMiJ,UACDA,EAAMjJ,GAGXsQ,GAAStQ,KAAM0T,GAASpD,YACnBoD,GAASpD,GAAOtQ,GACnBhC,KAAK6U,iBACA5C,GAAUjQ,GAGvB,ECtEK,MAAM2gD,GACXhjD,cACEK,KAAK4iD,YAAc,IAAIhB,GAAcjqB,GAAmB,YAAY,GACpE33B,KAAKkT,SAAW,IAAI0uC,GAActM,GAAS,YAC3Ct1C,KAAKsU,QAAU,IAAIstC,GAAc3jD,OAAQ,WACzC+B,KAAKyU,OAAS,IAAImtC,GAAc3J,GAAO,UAGvCj4C,KAAK6iD,iBAAmB,CAAC7iD,KAAK4iD,YAAa5iD,KAAKyU,OAAQzU,KAAKkT,SAC/D,CAKAoQ,MAAa,QAAAuX,EAAAjpC,UAAAC,OAANuR,EAAI,IAAA9Q,MAAAuoC,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ13B,EAAI03B,GAAAlpC,UAAAkpC,GACT96B,KAAK8iD,MAAM,WAAY1/C,EACzB,CAEAgvB,SAAgB,QAAA1mB,EAAA9Z,UAAAC,OAANuR,EAAI,IAAA9Q,MAAAoZ,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJvI,EAAIuI,GAAA/Z,UAAA+Z,GACZ3L,KAAK8iD,MAAM,aAAc1/C,EAC3B,CAKA2/C,iBAAwB,QAAAC,EAAApxD,UAAAC,OAANuR,EAAI,IAAA9Q,MAAA0wD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ7/C,EAAI6/C,GAAArxD,UAAAqxD,GACpBjjD,KAAK8iD,MAAM,WAAY1/C,EAAMpD,KAAK4iD,YACpC,CAKA9pB,cAAqB,QAAAoqB,EAAAtxD,UAAAC,OAANuR,EAAI,IAAA9Q,MAAA4wD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ//C,EAAI+/C,GAAAvxD,UAAAuxD,GACjBnjD,KAAK8iD,MAAM,WAAY1/C,EAAMpD,KAAKkT,SACpC,CAKAkwC,aAAoB,QAAAC,EAAAzxD,UAAAC,OAANuR,EAAI,IAAA9Q,MAAA+wD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJlgD,EAAIkgD,GAAA1xD,UAAA0xD,GAChBtjD,KAAK8iD,MAAM,WAAY1/C,EAAMpD,KAAKsU,QACpC,CAKAivC,YAAmB,QAAAC,EAAA5xD,UAAAC,OAANuR,EAAI,IAAA9Q,MAAAkxD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJrgD,EAAIqgD,GAAA7xD,UAAA6xD,GACfzjD,KAAK8iD,MAAM,WAAY1/C,EAAMpD,KAAKyU,OACpC,CAMAivC,cAAc1hD,GACZ,OAAOhC,KAAK2jD,KAAK3hD,EAAIhC,KAAK4iD,YAAa,aACzC,CAMA1X,WAAWlpC,GACT,OAAOhC,KAAK2jD,KAAK3hD,EAAIhC,KAAKkT,SAAU,UACtC,CAMA0wC,UAAU5hD,GACR,OAAOhC,KAAK2jD,KAAK3hD,EAAIhC,KAAKsU,QAAS,SACrC,CAMAuvC,SAAS7hD,GACP,OAAOhC,KAAK2jD,KAAK3hD,EAAIhC,KAAKyU,OAAQ,QACpC,CAKAqvC,oBAA2B,QAAAC,EAAAnyD,UAAAC,OAANuR,EAAI,IAAA9Q,MAAAyxD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ5gD,EAAI4gD,GAAApyD,UAAAoyD,GACvBhkD,KAAK8iD,MAAM,aAAc1/C,EAAMpD,KAAK4iD,YACtC,CAKAqB,iBAAwB,QAAAC,EAAAtyD,UAAAC,OAANuR,EAAI,IAAA9Q,MAAA4xD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ/gD,EAAI+gD,GAAAvyD,UAAAuyD,GACpBnkD,KAAK8iD,MAAM,aAAc1/C,EAAMpD,KAAKkT,SACtC,CAKAkxC,gBAAuB,QAAAC,EAAAzyD,UAAAC,OAANuR,EAAI,IAAA9Q,MAAA+xD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJlhD,EAAIkhD,GAAA1yD,UAAA0yD,GACnBtkD,KAAK8iD,MAAM,aAAc1/C,EAAMpD,KAAKsU,QACtC,CAKAiwC,eAAsB,QAAAC,EAAA5yD,UAAAC,OAANuR,EAAI,IAAA9Q,MAAAkyD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJrhD,EAAIqhD,GAAA7yD,UAAA6yD,GAClBzkD,KAAK8iD,MAAM,aAAc1/C,EAAMpD,KAAKyU,OACtC,CAKAquC,MAAM/uB,EAAQ3wB,EAAMshD,GAClB,IAAIthD,GAAM2H,SAAQ45C,IAChB,MAAMC,EAAMF,GAAiB1kD,KAAK6kD,oBAAoBF,GAClDD,GAAiBE,EAAI/C,UAAU8C,IAASC,IAAQ5kD,KAAKsU,SAAWqwC,EAAI3iD,GACtEhC,KAAK8kD,MAAM/wB,EAAQ6wB,EAAKD,GAMxBphD,EAAKohD,GAAKt+C,IAOR,MAAM0+C,EAAUL,GAAiB1kD,KAAK6kD,oBAAoBx+C,GAC1DrG,KAAK8kD,MAAM/wB,EAAQgxB,EAAS1+C,EAAA,MAIpC,CAKAy+C,MAAM/wB,EAAQkX,EAAU+Z,GACtB,MAAMC,EAAcl/C,GAAYguB,GAChC7wB,EAAK8hD,EAAU,SAAWC,GAAc,GAAID,GAC5C/Z,EAASlX,GAAQixB,GACjB9hD,EAAK8hD,EAAU,QAAUC,GAAc,GAAID,EAC7C,CAKAH,oBAAoBjlD,GAClB,IAAK,IAAI1N,EAAI,EAAGA,EAAI8N,KAAK6iD,iBAAiBhxD,OAAQK,IAAK,CACrD,MAAM0yD,EAAM5kD,KAAK6iD,iBAAiB3wD,GAClC,GAAI0yD,EAAI/C,UAAUjiD,GAChB,OAAOglD,CAEX,CAEA,OAAO5kD,KAAKsU,OACd,CAKAqvC,KAAK3hD,EAAI0iD,EAAe9kD,GACtB,MAAMyG,EAAOq+C,EAAcj0C,IAAIzO,GAC/B,QAAa1Q,IAAT+U,EACF,MAAM,IAAI+c,MAAM,IAAMphB,EAAK,yBAA2BpC,EAAO,KAE/D,OAAOyG,CACT,EAKF,IAAA4kC,GAA+B,IAAI0X,GCtKpB,MAAMuC,GACnBvlD,cACEK,KAAKmlD,MAAQ,EACf,CAYAC,OAAOj0C,EAAOk0C,EAAMjiD,EAAMygB,GACX,eAATwhC,IACFrlD,KAAKmlD,MAAQnlD,KAAKslD,mBAAmBn0C,GAAO,GAC5CnR,KAAKswB,QAAQtwB,KAAKmlD,MAAOh0C,EAAO,YAGlC,MAAMe,EAAc2R,EAAS7jB,KAAKwS,aAAarB,GAAO0S,OAAOA,GAAU7jB,KAAKwS,aAAarB,GACnFgY,EAASnpB,KAAKswB,QAAQpe,EAAaf,EAAOk0C,EAAMjiD,GAMtD,MAJa,iBAATiiD,IACFrlD,KAAKswB,QAAQpe,EAAaf,EAAO,QACjCnR,KAAKswB,QAAQtwB,KAAKmlD,MAAOh0C,EAAO,cAE3BgY,CACT,CAKAmH,QAAQpe,EAAaf,EAAOk0C,EAAMjiD,GAChCA,EAAOA,GAAQ,CAAC,EAChB,IAAK,MAAMmiD,KAAcrzC,EAAa,CACpC,MAAMszC,EAASD,EAAWC,OAG1B,IAA6C,IAAzCtiD,EAFWsiD,EAAOH,GACP,CAACl0C,EAAO/N,EAAMmiD,EAAW7gD,SACP8gD,IAAqBpiD,EAAKqiD,WACzD,OAAO,CAEX,CAEA,OAAO,CACT,CAEAC,aAMOzjD,EAAcjC,KAAK0gC,UACtB1gC,KAAK2lD,UAAY3lD,KAAK0gC,OACtB1gC,KAAK0gC,YAASpvC,EAElB,CAMAkhB,aAAarB,GACX,GAAInR,KAAK0gC,OACP,OAAO1gC,KAAK0gC,OAGd,MAAMxuB,EAAclS,KAAK0gC,OAAS1gC,KAAKslD,mBAAmBn0C,GAI1D,OAFAnR,KAAK4lD,oBAAoBz0C,GAElBe,CACT,CAEAozC,mBAAmBn0C,EAAO4jB,GACxB,MAAMd,EAAS9iB,GAASA,EAAM8iB,OACxBvvB,EAAU7B,EAAeoxB,EAAOvvB,SAAWuvB,EAAOvvB,QAAQ4P,QAAS,CAAC,GACpEA,EAqBV,SAAoB2f,GAClB,MAAM4xB,EAAW,CAAC,EACZvxC,EAAU,GACVtW,EAAOC,OAAOD,KAAKitC,GAAS32B,QAAQrJ,OAC1C,IAAK,IAAI/Y,EAAI,EAAGA,EAAI8L,EAAKnM,OAAQK,IAC/BoiB,EAAQ1O,KAAKqlC,GAAS2Y,UAAU5lD,EAAK9L,KAGvC,MAAMsjB,EAAQye,EAAO3f,SAAW,GAChC,IAAK,IAAIpiB,EAAI,EAAGA,EAAIsjB,EAAM3jB,OAAQK,IAAK,CACrC,MAAMszD,EAAShwC,EAAMtjB,IAEY,IAA7BoiB,EAAQ9P,QAAQghD,KAClBlxC,EAAQ1O,KAAK4/C,GACbK,EAASL,EAAOxjD,KAAM,EAE1B,CAEA,MAAO,CAACsS,UAASuxC,WACnB,CAxCoBC,CAAW7xB,GAE3B,OAAmB,IAAZvvB,GAAsBqwB,EAkDjC,SAA2B5jB,EAAK40C,EAAuBrhD,EAASqwB,GAAK,IAAnC,QAACzgB,EAAO,SAAEuxC,GAASE,EACnD,MAAM58B,EAAS,GACTpW,EAAU5B,EAAMsJ,aAEtB,IAAK,MAAM+qC,KAAUlxC,EAAS,CAC5B,MAAMtS,EAAKwjD,EAAOxjD,GACZsb,EAAO0oC,GAAQthD,EAAQ1C,GAAK+yB,GACrB,OAATzX,GAGJ6L,EAAOvjB,KAAK,CACV4/C,SACA9gD,QAASuhD,GAAW90C,EAAM8iB,OAAQ,CAACuxB,SAAQhwC,MAAOqwC,EAAS7jD,IAAMsb,EAAMvK,IAE3E,CAEA,OAAOoW,CACT,CAnE4C+8B,CAAkB/0C,EAAOmD,EAAS5P,EAASqwB,GAAhD,EACrC,CAMA6wB,oBAAoBz0C,GAClB,MAAMg1C,EAAsBnmD,KAAK2lD,WAAa,GACxCzzC,EAAclS,KAAK0gC,OACnB8K,EAAOA,CAACj7C,EAAGC,IAAMD,EAAEszB,QAAO1wB,IAAM3C,EAAE41D,MAAK9gD,GAAKnS,EAAEqyD,OAAOxjD,KAAOsD,EAAEkgD,OAAOxjD,OAC3EhC,KAAKswB,QAAQkb,EAAK2a,EAAqBj0C,GAAcf,EAAO,QAC5DnR,KAAKswB,QAAQkb,EAAKt5B,EAAai0C,GAAsBh1C,EAAO,QAC9D,EA2BF,SAAS60C,GAAQthD,EAASqwB,GACxB,OAAKA,IAAmB,IAAZrwB,GAGI,IAAZA,EACK,CAAC,EAEHA,EALE,IAMX,CAqBA,SAASuhD,GAAWhyB,EAAMoyB,EAAmB/oC,EAAMvK,GAAS,IAAhC,OAACyyC,EAAM,MAAEhwC,GAAM6wC,EACzC,MAAMroD,EAAOi2B,EAAOqyB,gBAAgBd,GAC9BxkC,EAASiT,EAAOsH,gBAAgBje,EAAMtf,GAK5C,OAJIwX,GAASgwC,EAAO9vC,UAElBsL,EAAOpb,KAAK4/C,EAAO9vC,UAEdue,EAAOuH,eAAexa,EAAQjO,EAAS,CAAC,IAAK,CAElDmR,YAAY,EACZC,WAAW,EACXH,SAAS,GAEb,CClLO,SAASuiC,GAAa3mD,EAAM8E,GACjC,MAAM8hD,EAAkB9wC,GAAS7C,SAASjT,IAAS,CAAC,EAEpD,QADwB8E,EAAQmO,UAAY,CAAC,GAAGjT,IAAS,CAAC,GACpCiU,WAAanP,EAAQmP,WAAa2yC,EAAgB3yC,WAAa,GACvF,CAgBA,SAAS4yC,GAAczkD,GACrB,GAAW,MAAPA,GAAqB,MAAPA,GAAqB,MAAPA,EAC9B,OAAOA,CAEX,CAEA,SAAS0kD,GAAiBxa,GACxB,MAAiB,QAAbA,GAAmC,WAAbA,EACjB,IAEQ,SAAbA,GAAoC,UAAbA,EAClB,SADT,CAGF,CAEO,SAASya,GAAc3kD,GAC5B,GAAIykD,GAAczkD,GAChB,OAAOA,EACR,QAAA4kD,EAAAh1D,UAAAC,OAHkCg1D,EAAY,IAAAv0D,MAAAs0D,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAZD,EAAYC,EAAA,GAAAl1D,UAAAk1D,GAI/C,IAAK,MAAMxpC,KAAQupC,EAAc,CAC/B,MAAMr6C,EAAO8Q,EAAK9Q,MACbk6C,GAAiBppC,EAAK4uB,WACtBlqC,EAAGnQ,OAAS,GAAK40D,GAAczkD,EAAG,GAAGtD,eAC1C,GAAI8N,EACF,OAAOA,CAEX,CACA,MAAM,IAAI4W,MAAO,6BAA4BphB,uDAC/C,CAEA,SAAS+kD,GAAmB/kD,EAAIwK,EAAMysB,GACpC,GAAIA,EAAQzsB,EAAO,YAAcxK,EAC/B,MAAO,CAACwK,OAEZ,CAYA,SAASw6C,GAAiB/yB,EAAQvvB,GAChC,MAAMuiD,EAAgBh1C,GAAUgiB,EAAOr0B,OAAS,CAAC6U,OAAQ,CAAC,GACpDyyC,EAAexiD,EAAQ+P,QAAU,CAAC,EAClC0yC,EAAiBZ,GAAatyB,EAAOr0B,KAAM8E,GAC3C+P,EAASxW,OAAOmG,OAAO,MAqC7B,OAlCAnG,OAAOD,KAAKkpD,GAAcn8C,SAAQ/I,IAChC,MAAMolD,EAAYF,EAAallD,GAC/B,IAAKO,EAAS6kD,GACZ,OAAO9mC,QAAQ+mC,MAAO,0CAAyCrlD,KAEjE,GAAIolD,EAAUxkC,OACZ,OAAOtC,QAAQC,KAAM,kDAAiDve,KAExE,MAAMwK,EAAOm6C,GAAc3kD,EAAIolD,EAzBnC,SAAkCplD,EAAIiyB,GACpC,GAAIA,EAAO9a,MAAQ8a,EAAO9a,KAAKtG,SAAU,CACvC,MAAMy0C,EAAUrzB,EAAO9a,KAAKtG,SAASgR,QAAQnzB,GAAMA,EAAE2oC,UAAYr3B,GAAMtR,EAAE6oC,UAAYv3B,IACrF,GAAIslD,EAAQz1D,OACV,OAAOk1D,GAAmB/kD,EAAI,IAAKslD,EAAQ,KAAOP,GAAmB/kD,EAAI,IAAKslD,EAAQ,IAG1F,MAAO,CAAC,CACV,CAiB8CC,CAAyBvlD,EAAIiyB,GAASve,GAASjB,OAAO2yC,EAAUxnD,OACpG4nD,EAlEV,SAAmCh7C,EAAMqH,GACvC,OAAOrH,IAASqH,EAAY,UAAY,SAC1C,CAgEsB4zC,CAA0Bj7C,EAAM26C,GAC5CO,EAAsBT,EAAcxyC,QAAU,CAAC,EACrDA,EAAOzS,GAAMiD,EAAQhH,OAAOmG,OAAO,MAAO,CAAC,CAACoI,QAAO46C,EAAWM,EAAoBl7C,GAAOk7C,EAAoBF,IAAY,IAI3HvzB,EAAO9a,KAAKtG,SAAS9H,SAAQkuB,IAC3B,MAAMr5B,EAAOq5B,EAAQr5B,MAAQq0B,EAAOr0B,KAC9BiU,EAAYolB,EAAQplB,WAAa0yC,GAAa3mD,EAAM8E,GAEpDgjD,GADkBz1C,GAAUrS,IAAS,CAAC,GACA6U,QAAU,CAAC,EACvDxW,OAAOD,KAAK0pD,GAAqB38C,SAAQ48C,IACvC,MAAMn7C,EAxFZ,SAAmCxK,EAAI6R,GACrC,IAAIrH,EAAOxK,EAMX,MALW,YAAPA,EACFwK,EAAOqH,EACS,YAAP7R,IACTwK,EAAqB,MAAdqH,EAAoB,IAAM,KAE5BrH,CACT,CAgFmBo7C,CAA0BD,EAAW9zC,GAC5C7R,EAAKi3B,EAAQzsB,EAAO,WAAaA,EACvCiI,EAAOzS,GAAMyS,EAAOzS,IAAO/D,OAAOmG,OAAO,MACzCa,EAAQwP,EAAOzS,GAAK,CAAC,CAACwK,QAAO06C,EAAallD,GAAK0lD,EAAoBC,IAAY,GAC/E,IAIJ1pD,OAAOD,KAAKyW,GAAQ1J,SAAQxG,IAC1B,MAAMiQ,EAAQC,EAAOlQ,GACrBU,EAAQuP,EAAO,CAACkB,GAASjB,OAAOD,EAAM5U,MAAO8V,GAASlB,OAAO,IAGxDC,CACT,CAEA,SAASozC,GAAY5zB,GACnB,MAAMvvB,EAAUuvB,EAAOvvB,UAAYuvB,EAAOvvB,QAAU,CAAC,GAErDA,EAAQ4P,QAAUzR,EAAe6B,EAAQ4P,QAAS,CAAC,GACnD5P,EAAQ+P,OAASuyC,GAAiB/yB,EAAQvvB,EAC5C,CAEA,SAASojD,GAAS3uC,GAIhB,OAHAA,EAAOA,GAAQ,CAAC,GACXtG,SAAWsG,EAAKtG,UAAY,GACjCsG,EAAK2iB,OAAS3iB,EAAK2iB,QAAU,GACtB3iB,CACT,CAWA,MAAM4uC,GAAW,IAAI93C,IACf+3C,GAAa,IAAI78C,IAEvB,SAAS88C,GAAW53C,EAAU63C,GAC5B,IAAIlqD,EAAO+pD,GAASt3C,IAAIJ,GAMxB,OALKrS,IACHA,EAAOkqD,IACPH,GAAS78C,IAAImF,EAAUrS,GACvBgqD,GAAW1kC,IAAItlB,IAEVA,CACT,CAEA,MAAMmqD,GAAaA,CAACj9C,EAAK9K,EAAKmE,KAC5B,MAAM+Y,EAAO/X,GAAiBnF,EAAKmE,QACtBjT,IAATgsB,GACFpS,EAAIoY,IAAIhG,IAIG,MAAM8qC,GACnBzoD,YAAYs0B,GACVj0B,KAAKqoD,QA/BT,SAAoBp0B,GAMlB,OALAA,EAASA,GAAU,CAAC,GACb9a,KAAO2uC,GAAS7zB,EAAO9a,MAE9B0uC,GAAY5zB,GAELA,CACT,CAwBmBq0B,CAAWr0B,GAC1Bj0B,KAAKuoD,YAAc,IAAIt4C,IACvBjQ,KAAKwoD,eAAiB,IAAIv4C,GAC5B,CAEI+C,eACF,OAAOhT,KAAKqoD,QAAQr1C,QACtB,CAEIpT,WACF,OAAOI,KAAKqoD,QAAQzoD,IACtB,CAEIA,SAAKA,GACPI,KAAKqoD,QAAQzoD,KAAOA,CACtB,CAEIuZ,WACF,OAAOnZ,KAAKqoD,QAAQlvC,IACtB,CAEIA,SAAKA,GACPnZ,KAAKqoD,QAAQlvC,KAAO2uC,GAAS3uC,EAC/B,CAEIzU,cACF,OAAO1E,KAAKqoD,QAAQ3jD,OACtB,CAEIA,YAAQA,GACV1E,KAAKqoD,QAAQ3jD,QAAUA,CACzB,CAEI4P,cACF,OAAOtU,KAAKqoD,QAAQ/zC,OACtB,CAEAif,SACE,MAAMU,EAASj0B,KAAKqoD,QACpBroD,KAAKyoD,aACLZ,GAAY5zB,EACd,CAEAw0B,aACEzoD,KAAKuoD,YAAYG,QACjB1oD,KAAKwoD,eAAeE,OACtB,CAQAptB,iBAAiBqtB,GACf,OAAOV,GAAWU,GAChB,IAAM,CAAC,CACJ,YAAWA,IACZ,MAEN,CASAlqB,0BAA0BkqB,EAAanqB,GACrC,OAAOypB,GAAY,GAAEU,gBAA0BnqB,KAC7C,IAAM,CACJ,CACG,YAAWmqB,iBAA2BnqB,IACtC,eAAcA,KAGjB,CACG,YAAWmqB,IACZ,MAGR,CAUAvqB,wBAAwBuqB,EAAazqB,GACnC,OAAO+pB,GAAY,GAAEU,KAAezqB,KAClC,IAAM,CAAC,CACJ,YAAWyqB,cAAwBzqB,IACnC,YAAWyqB,IACX,YAAWzqB,IACZ,MAEN,CAOAooB,gBAAgBd,GACd,MAAMxjD,EAAKwjD,EAAOxjD,GAElB,OAAOimD,GAAY,GADNjoD,KAAKJ,eACkBoC,KAClC,IAAM,CAAC,CACJ,WAAUA,OACRwjD,EAAOoD,wBAA0B,MAE1C,CAKAC,cAAcC,EAAWC,GACvB,MAAMR,EAAcvoD,KAAKuoD,YACzB,IAAI5uC,EAAQ4uC,EAAY93C,IAAIq4C,GAK5B,OAJKnvC,IAASovC,IACZpvC,EAAQ,IAAI1J,IACZs4C,EAAYr9C,IAAI49C,EAAWnvC,IAEtBA,CACT,CAQA4hB,gBAAgButB,EAAWE,EAAUD,GACnC,MAAM,QAACrkD,EAAO,KAAE9E,GAAQI,KAClB2Z,EAAQ3Z,KAAK6oD,cAAcC,EAAWC,GACtCtxB,EAAS9d,EAAMlJ,IAAIu4C,GACzB,GAAIvxB,EACF,OAAOA,EAGT,MAAMzW,EAAS,IAAI7V,IAEnB69C,EAASj+C,SAAQ/M,IACX8qD,IACF9nC,EAAOsC,IAAIwlC,GACX9qD,EAAK+M,SAAQxG,GAAO4jD,GAAWnnC,EAAQ8nC,EAAWvkD,MAEpDvG,EAAK+M,SAAQxG,GAAO4jD,GAAWnnC,EAAQtc,EAASH,KAChDvG,EAAK+M,SAAQxG,GAAO4jD,GAAWnnC,EAAQ/O,GAAUrS,IAAS,CAAC,EAAG2E,KAC9DvG,EAAK+M,SAAQxG,GAAO4jD,GAAWnnC,EAAQtL,GAAUnR,KACjDvG,EAAK+M,SAAQxG,GAAO4jD,GAAWnnC,EAAQ9O,GAAa3N,IAAA,IAGtD,MAAMuD,EAAQxV,MAAMwM,KAAKkiB,GAOzB,OANqB,IAAjBlZ,EAAMjW,QACRiW,EAAMlC,KAAK3H,OAAOmG,OAAO,OAEvB4jD,GAAW1hD,IAAI0iD,IACjBrvC,EAAMzO,IAAI89C,EAAUlhD,GAEfA,CACT,CAMAmhD,oBACE,MAAM,QAACvkD,EAAO,KAAE9E,GAAQI,KAExB,MAAO,CACL0E,EACAuN,GAAUrS,IAAS,CAAC,EACpB8V,GAAS7C,SAASjT,IAAS,CAAC,EAC5B,CAACA,QACD8V,GACAxD,GAEJ,CASAmsB,oBAAoBrd,EAAQnjB,EAAOkV,GAA0B,IAAjBkO,EAAWrvB,UAAAC,OAAA,QAAAP,IAAAM,UAAC,GAADA,UAAC,GAAD,CAAC,IACtD,MAAMu3B,EAAS,CAACuL,SAAS,IACnB,SAAClvB,EAAQ,YAAE0jD,GAAeC,GAAYnpD,KAAKwoD,eAAgBxnC,EAAQC,GACzE,IAAIvc,EAAUc,EACd,GAkDJ,SAAqBid,EAAO5kB,GAC1B,MAAM,aAACqlB,EAAY,YAAES,GAAenR,GAAaiQ,GAEjD,IAAK,MAAMzC,KAAQniB,EAAO,CACxB,MAAMqmB,EAAahB,EAAalD,GAC1BmE,EAAYR,EAAY3D,GACxB9d,GAASiiB,GAAaD,IAAezB,EAAMzC,GACjD,GAAKkE,IAAehe,GAAWhE,IAAUknD,GAAYlnD,KAC/CiiB,GAAa5xB,EAAQ2P,GACzB,OAAO,CAEX,CACA,OAAO,CACT,CA/DQmnD,CAAY7jD,EAAU3H,GAAQ,CAChCsrB,EAAOuL,SAAU,EAIjBhwB,EAAU8d,GAAehd,EAHzBuN,EAAU7M,GAAW6M,GAAWA,IAAYA,EAExB/S,KAAKw7B,eAAexa,EAAQjO,EAASm2C,IAI3D,IAAK,MAAMlpC,KAAQniB,EACjBsrB,EAAOnJ,GAAQtb,EAAQsb,GAEzB,OAAOmJ,CACT,CAQAqS,eAAexa,EAAQjO,GAA8C,IAArCkO,EAAWrvB,UAAAC,OAAA,QAAAP,IAAAM,UAAC,GAADA,UAAC,GAAD,CAAC,IAAK+wB,EAAkB/wB,UAAAC,OAAA,EAAAD,UAAA,QAAAN,EACjE,MAAM,SAACkU,GAAY2jD,GAAYnpD,KAAKwoD,eAAgBxnC,EAAQC,GAC5D,OAAO1e,EAASwQ,GACZyP,GAAehd,EAAUuN,OAASzhB,EAAWqxB,GAC7Cnd,CACN,EAGF,SAAS2jD,GAAYG,EAAetoC,EAAQC,GAC1C,IAAItH,EAAQ2vC,EAAc74C,IAAIuQ,GACzBrH,IACHA,EAAQ,IAAI1J,IACZq5C,EAAcp+C,IAAI8V,EAAQrH,IAE5B,MAAMtJ,EAAW4Q,EAASoC,OAC1B,IAAIoU,EAAS9d,EAAMlJ,IAAIJ,GACvB,IAAKonB,EAAQ,CAEXA,EAAS,CACPjyB,SAFeub,GAAgBC,EAAQC,GAGvCioC,YAAajoC,EAAS4C,QAAOhjB,IAAMA,EAAEnC,cAAcqT,SAAS,YAE9D4H,EAAMzO,IAAImF,EAAUonB,GAEtB,OAAOA,CACT,CAEA,MAAM2xB,GAAclnD,GAASK,EAASL,IACjCjE,OAAOq2B,oBAAoBpyB,GAAOkkD,MAAM7hD,GAAQ2B,GAAWhE,EAAMqC,MC9XtE,MAAMglD,GAAkB,CAAC,MAAO,SAAU,OAAQ,QAAS,aAC3D,SAASC,GAAqBtd,EAAU1/B,GACtC,MAAoB,QAAb0/B,GAAmC,WAAbA,IAAiE,IAAvCqd,GAAgB/kD,QAAQ0nC,IAA6B,MAAT1/B,CACrG,CAEA,SAASi9C,GAAcC,EAAIC,GACzB,OAAO,SAASp5D,EAAGC,GACjB,OAAOD,EAAEm5D,KAAQl5D,EAAEk5D,GACfn5D,EAAEo5D,GAAMn5D,EAAEm5D,GACVp5D,EAAEm5D,GAAMl5D,EAAEk5D,EAChB,CACF,CAEA,SAASE,GAAqB72C,GAC5B,MAAM5B,EAAQ4B,EAAQ5B,MAChBijB,EAAmBjjB,EAAMzM,QAAQgO,UAEvCvB,EAAMqqC,cAAc,eACpBt4C,EAAakxB,GAAoBA,EAAiBy1B,WAAY,CAAC92C,GAAU5B,EAC3E,CAEA,SAAS24C,GAAoB/2C,GAC3B,MAAM5B,EAAQ4B,EAAQ5B,MAChBijB,EAAmBjjB,EAAMzM,QAAQgO,UACvCxP,EAAakxB,GAAoBA,EAAiB21B,WAAY,CAACh3C,GAAU5B,EAC3E,CAMA,SAAS64C,GAAU3jD,GAYjB,OAXI4hB,MAAqC,kBAAT5hB,EAC9BA,EAAO6hB,SAAS+hC,eAAe5jD,GACtBA,GAAQA,EAAKxU,SAEtBwU,EAAOA,EAAK,IAGVA,GAAQA,EAAKmU,SAEfnU,EAAOA,EAAKmU,QAEPnU,CACT,CAEA,MAAM6jD,GAAY,CAAC,EACbC,GAAY5lD,IAChB,MAAMiW,EAASwvC,GAAUzlD,GACzB,OAAOtG,OAAO8S,OAAOm5C,IAAWrmC,QAAQpzB,GAAMA,EAAE+pB,SAAWA,IAAQ+W,KAAK,EAG1E,SAAS64B,GAAgBhqD,EAAKiJ,EAAOy2B,GACnC,MAAM9hC,EAAOC,OAAOD,KAAKoC,GACzB,IAAK,MAAMmE,KAAOvG,EAAM,CACtB,MAAMqsD,GAAU9lD,EAChB,GAAI8lD,GAAUhhD,EAAO,CACnB,MAAMnH,EAAQ9B,EAAImE,UACXnE,EAAImE,IACPu7B,EAAO,GAAKuqB,EAAShhD,KACvBjJ,EAAIiqD,EAASvqB,GAAQ59B,GAG3B,CACF,CAmBA,SAASooD,GAAe91C,EAAOkpB,EAAW6sB,GACxC,OAAO/1C,EAAM9P,QAAQ0S,KAAO5C,EAAM+1C,GAAS7sB,EAAU6sB,EACvD,CAeA,MAAMr7D,GAEJ0oC,gBAAkBliB,GAClBkiB,iBAAmBsyB,GACnBtyB,iBAAmB3lB,GACnB2lB,gBAAkBqT,GAClBrT,uBACAA,gBAAkBuyB,GAElBvyB,kBACEqT,GAAS3nB,OAAO1xB,WAChB44D,IACF,CAEA5yB,oBACEqT,GAAS7Y,UAAUxgC,WACnB44D,IACF,CAGA7qD,YAAY0G,EAAMokD,GAChB,MAAMx2B,EAASj0B,KAAKi0B,OAAS,IAAIm0B,GAAOqC,GAClCC,EAAgBV,GAAU3jD,GAC1BskD,EAAgBR,GAASO,GAC/B,GAAIC,EACF,MAAM,IAAIvnC,MACR,4CAA+CunC,EAAc3oD,GAA7D,kDACgD2oD,EAAcnwC,OAAOxY,GAAK,oBAI9E,MAAM0C,EAAUuvB,EAAOuH,eAAevH,EAAOg1B,oBAAqBjpD,KAAKya,cAEvEza,KAAKgT,SAAW,IAAKihB,EAAOjhB,UCpJzB,SAAyBwH,GAC9B,OAAKyN,MAAiD,qBAApB2iC,iBAAmCpwC,aAAkBowC,gBAC9E/Y,GAEF2C,EACT,CD+I4CqW,CAAgBH,IACxD1qD,KAAKgT,SAAS4+B,aAAa3d,GAE3B,MAAMlhB,EAAU/S,KAAKgT,SAASy+B,eAAeiZ,EAAehmD,EAAQ+lB,aAC9DjQ,EAASzH,GAAWA,EAAQyH,OAC5BI,EAASJ,GAAUA,EAAOI,OAC1B3C,EAAQuC,GAAUA,EAAOvC,MAE/BjY,KAAKgC,GAAKD,IACV/B,KAAK0T,IAAMX,EACX/S,KAAKwa,OAASA,EACdxa,KAAKiY,MAAQA,EACbjY,KAAK4a,OAASA,EACd5a,KAAK8qD,SAAWpmD,EAIhB1E,KAAK+qD,aAAe/qD,KAAKyqB,YACzBzqB,KAAKowC,QAAU,GACfpwC,KAAKgrD,UAAY,GACjBhrD,KAAK22B,aAAUrlC,EACf0O,KAAK6vC,MAAQ,GACb7vC,KAAKqa,6BAA0B/oB,EAC/B0O,KAAK09B,eAAYpsC,EACjB0O,KAAKoxB,QAAU,GACfpxB,KAAKirD,gBAAa35D,EAClB0O,KAAKkrD,WAAa,CAAC,EAEnBlrD,KAAKmrD,0BAAuB75D,EAC5B0O,KAAKorD,gBAAkB,GACvBprD,KAAKyU,OAAS,CAAC,EACfzU,KAAKqrD,SAAW,IAAInG,GACpBllD,KAAKk1C,SAAW,CAAC,EACjBl1C,KAAKsrD,eAAiB,CAAC,EACvBtrD,KAAKurD,UAAW,EAChBvrD,KAAK6+B,yBAAsBvtC,EAC3B0O,KAAKu4B,cAAWjnC,EAChB0O,KAAKwrD,U1C9IF,SAA4CroD,EAA8B4S,GAC/E,IAAI01C,EACJ,OAAO,WAAyB,QAAAzI,EAAApxD,UAAAC,OAAbuR,EAAW,IAAA9Q,MAAA0wD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAX7/C,EAAW6/C,GAAArxD,UAAAqxD,GAO5B,OANIltC,GACF21C,aAAaD,GACbA,EAAUE,WAAWxoD,EAAI4S,EAAO3S,IAEhCD,EAAGG,MAAMtD,KAAMoD,GAEV2S,CACT,CACF,C0CmIqB61C,EAAS73C,GAAQ/T,KAAKuzB,OAAOxf,IAAOrP,EAAQmnD,aAAe,GAC5E7rD,KAAKkgC,aAAe,GAGpBgqB,GAAUlqD,KAAKgC,IAAMhC,KAEhB+S,GAAYyH,GASjB6X,GAAST,OAAO5xB,KAAM,WAAY4pD,IAClCv3B,GAAST,OAAO5xB,KAAM,WAAY8pD,IAElC9pD,KAAK8rD,cACD9rD,KAAKurD,UACPvrD,KAAKuzB,UATLjT,QAAQ+mC,MAAM,oEAWlB,CAEI58B,kBACF,MAAO/lB,SAAS,YAAC+lB,EAAW,oBAAEvW,GAAoB,MAAE+D,EAAA,OAAO2C,EAAM,aAAEmwC,GAAgB/qD,KACnF,OAAKiC,EAAcwoB,GAKfvW,GAAuB62C,EAElBA,EAIFnwC,EAAS3C,EAAQ2C,EAAS,KATxB6P,CAUX,CAEItR,WACF,OAAOnZ,KAAKi0B,OAAO9a,IACrB,CAEIA,SAAKA,GACPnZ,KAAKi0B,OAAO9a,KAAOA,CACrB,CAEIzU,cACF,OAAO1E,KAAK8qD,QACd,CAEIpmD,YAAQA,GACV1E,KAAKi0B,OAAOvvB,QAAUA,CACxB,CAEIumC,eACF,OAAOA,EACT,CAKA6gB,cAeE,OAbA9rD,KAAKw7C,cAAc,cAEfx7C,KAAK0E,QAAQ6P,WACfvU,KAAKqW,SAEL+U,GAAYprB,KAAMA,KAAK0E,QAAQoO,kBAGjC9S,KAAK+rD,aAGL/rD,KAAKw7C,cAAc,aAEZx7C,IACT,CAEA0oD,QAEE,OADAnuC,GAAYva,KAAKwa,OAAQxa,KAAK0T,KACvB1T,IACT,CAEAkyB,OAEE,OADAG,GAASH,KAAKlyB,MACPA,IACT,CAOAqW,OAAO4B,EAAO2C,GACPyX,GAASnB,QAAQlxB,MAGpBA,KAAKgsD,kBAAoB,CAAC/zC,QAAO2C,UAFjC5a,KAAKisD,QAAQh0C,EAAO2C,EAIxB,CAEAqxC,QAAQh0C,EAAO2C,GACb,MAAMlW,EAAU1E,KAAK0E,QACf8V,EAASxa,KAAKwa,OACdiQ,EAAc/lB,EAAQwP,qBAAuBlU,KAAKyqB,YAClDyhC,EAAUlsD,KAAKgT,SAASsX,eAAe9P,EAAQvC,EAAO2C,EAAQ6P,GAC9D0hC,EAAWznD,EAAQoO,kBAAoB9S,KAAKgT,SAASC,sBACrDc,EAAO/T,KAAKiY,MAAQ,SAAW,SAErCjY,KAAKiY,MAAQi0C,EAAQj0C,MACrBjY,KAAK4a,OAASsxC,EAAQtxC,OACtB5a,KAAK+qD,aAAe/qD,KAAKyqB,YACpBW,GAAYprB,KAAMmsD,GAAU,KAIjCnsD,KAAKw7C,cAAc,SAAU,CAACp1C,KAAM8lD,IAEpChpD,EAAawB,EAAQ0nD,SAAU,CAACpsD,KAAMksD,GAAUlsD,MAE5CA,KAAKurD,UACHvrD,KAAKwrD,UAAUz3C,IAEjB/T,KAAKqsD,SAGX,CAEAC,sBAIE/oD,EAHgBvD,KAAK0E,QACS+P,QAAU,CAAC,GAErB,CAAC83C,EAAa9K,KAChC8K,EAAYvqD,GAAKy/C,CAAA,GAErB,CAKA+K,sBACE,MAAM9nD,EAAU1E,KAAK0E,QACf+nD,EAAY/nD,EAAQ+P,OACpBA,EAASzU,KAAKyU,OACdi4C,EAAUzuD,OAAOD,KAAKyW,GAAQqd,QAAO,CAAC1xB,EAAK4B,KAC/C5B,EAAI4B,IAAM,EACH5B,IACN,CAAC,GACJ,IAAI6K,EAAQ,GAERwhD,IACFxhD,EAAQA,EAAM41B,OACZ5iC,OAAOD,KAAKyuD,GAAWj6D,KAAKwP,IAC1B,MAAM6kD,EAAe4F,EAAUzqD,GACzBwK,EAAOm6C,GAAc3kD,EAAI6kD,GACzB8F,EAAoB,MAATngD,EACXg8B,EAAwB,MAATh8B,EACrB,MAAO,CACL9H,QAASmiD,EACT+F,UAAWD,EAAW,YAAcnkB,EAAe,SAAW,OAC9DqkB,MAAOF,EAAW,eAAiBnkB,EAAe,WAAa,SAChE,MAKPjlC,EAAK0H,GAAQ5E,IACX,MAAMwgD,EAAexgD,EAAK3B,QACpB1C,EAAK6kD,EAAa7kD,GAClBwK,EAAOm6C,GAAc3kD,EAAI6kD,GACzBiG,EAAYjqD,EAAegkD,EAAajnD,KAAMyG,EAAKwmD,YAE3Bv7D,IAA1Bu1D,EAAa3a,UAA0Bsd,GAAqB3C,EAAa3a,SAAU1/B,KAAUg9C,GAAqBnjD,EAAKumD,aACzH/F,EAAa3a,SAAW7lC,EAAKumD,WAG/BF,EAAQ1qD,IAAM,EACd,IAAIwS,EAAQ,KACZ,GAAIxS,KAAMyS,GAAUA,EAAOzS,GAAIpC,OAASktD,EACtCt4C,EAAQC,EAAOzS,OACV,CAELwS,EAAQ,IADWy2B,GAAS4Y,SAASiJ,GAC7B,CAAe,CACrB9qD,KACApC,KAAMktD,EACNp5C,IAAK1T,KAAK0T,IACVvC,MAAOnR,OAETyU,EAAOD,EAAMxS,IAAMwS,EAGrBA,EAAM82B,KAAKub,EAAcniD,EAAA,IAG3BnB,EAAKmpD,GAAS,CAACK,EAAY/qD,KACpB+qD,UACIt4C,EAAOzS,MAIlBuB,EAAKkR,GAASD,IACZw5B,GAAQ7Z,UAAUn0B,KAAMwU,EAAOA,EAAM9P,SACrCspC,GAAQmC,OAAOnwC,KAAMwU,EAAA,GAEzB,CAKAw4C,kBACE,MAAM13B,EAAWt1B,KAAKgrD,UAChBrrB,EAAU3/B,KAAKmZ,KAAKtG,SAAShhB,OAC7B6tC,EAAUpK,EAASzjC,OAGzB,GADAyjC,EAASwL,MAAK,CAACvwC,EAAGC,IAAMD,EAAE0T,MAAQzT,EAAEyT,QAChCy7B,EAAUC,EAAS,CACrB,IAAK,IAAIztC,EAAIytC,EAASztC,EAAIwtC,IAAWxtC,EACnC8N,KAAKitD,oBAAoB/6D,GAE3BojC,EAASxqB,OAAO60B,EAASD,EAAUC,GAErC3/B,KAAKorD,gBAAkB91B,EAAShzB,MAAM,GAAGw+B,KAAK2oB,GAAc,QAAS,SACvE,CAKAyD,8BACE,MAAOlC,UAAW11B,EAAUnc,MAAM,SAACtG,IAAa7S,KAC5Cs1B,EAASzjC,OAASghB,EAAShhB,eACtBmO,KAAK22B,QAEdrB,EAASvqB,SAAQ,CAACiB,EAAM/H,KACmC,IAArD4O,EAASgR,QAAO1wB,GAAKA,IAAM6Y,EAAKw6B,WAAU30C,QAC5CmO,KAAKitD,oBAAoBhpD,KAG/B,CAEAkpD,2BACE,MAAMC,EAAiB,GACjBv6C,EAAW7S,KAAKmZ,KAAKtG,SAC3B,IAAI3gB,EAAG2R,EAIP,IAFA7D,KAAKktD,8BAEAh7D,EAAI,EAAG2R,EAAOgP,EAAShhB,OAAQK,EAAI2R,EAAM3R,IAAK,CACjD,MAAM+mC,EAAUpmB,EAAS3gB,GACzB,IAAI8Z,EAAOhM,KAAKg6B,eAAe9nC,GAC/B,MAAM0N,EAAOq5B,EAAQr5B,MAAQI,KAAKi0B,OAAOr0B,KAazC,GAXIoM,EAAKpM,MAAQoM,EAAKpM,OAASA,IAC7BI,KAAKitD,oBAAoB/6D,GACzB8Z,EAAOhM,KAAKg6B,eAAe9nC,IAE7B8Z,EAAKpM,KAAOA,EACZoM,EAAK6H,UAAYolB,EAAQplB,WAAa0yC,GAAa3mD,EAAMI,KAAK0E,SAC9DsH,EAAKqhD,MAAQp0B,EAAQo0B,OAAS,EAC9BrhD,EAAK/H,MAAQ/R,EACb8Z,EAAKoxB,MAAQ,GAAKnE,EAAQmE,MAC1BpxB,EAAKwK,QAAUxW,KAAK8jC,iBAAiB5xC,GAEjC8Z,EAAKyqB,WACPzqB,EAAKyqB,WAAWuC,YAAY9mC,GAC5B8Z,EAAKyqB,WAAWmC,iBACX,CACL,MAAM00B,EAAkBriB,GAASyY,cAAc9jD,IACzC,mBAAC64B,EAAA,gBAAoBC,GAAmBhjB,GAAS7C,SAASjT,GAChE3B,OAAOmB,OAAOkuD,EAAiB,CAC7B50B,gBAAiBuS,GAASC,WAAWxS,GACrCD,mBAAoBA,GAAsBwS,GAASC,WAAWzS,KAEhEzsB,EAAKyqB,WAAa,IAAI62B,EAAgBttD,KAAM9N,GAC5Ck7D,EAAexnD,KAAKoG,EAAKyqB,YAE7B,CAGA,OADAz2B,KAAKgtD,kBACEI,CACT,CAMAG,iBACEhqD,EAAKvD,KAAKmZ,KAAKtG,UAAU,CAAComB,EAASj1B,KACjChE,KAAKg6B,eAAeh2B,GAAcyyB,WAAW0D,OAAO,GACnDn6B,KACL,CAKAm6B,QACEn6B,KAAKutD,iBACLvtD,KAAKw7C,cAAc,QACrB,CAEAjoB,OAAOxf,GACL,MAAMkgB,EAASj0B,KAAKi0B,OAEpBA,EAAOV,SACP,MAAM7uB,EAAU1E,KAAK8qD,SAAW72B,EAAOuH,eAAevH,EAAOg1B,oBAAqBjpD,KAAKya,cACjF+yC,EAAgBxtD,KAAK6+B,qBAAuBn6B,EAAQgO,UAU1D,GARA1S,KAAKytD,gBACLztD,KAAK0tD,sBACL1tD,KAAK2tD,uBAIL3tD,KAAKqrD,SAAS3F,cAEuD,IAAjE1lD,KAAKw7C,cAAc,eAAgB,CAACznC,OAAM0xC,YAAY,IACxD,OAIF,MAAM2H,EAAiBptD,KAAKmtD,2BAE5BntD,KAAKw7C,cAAc,wBAGnB,IAAIhL,EAAa,EACjB,IAAK,IAAIt+C,EAAI,EAAG2R,EAAO7D,KAAKmZ,KAAKtG,SAAShhB,OAAQK,EAAI2R,EAAM3R,IAAK,CAC/D,MAAM,WAACukC,GAAcz2B,KAAKg6B,eAAe9nC,GACnCioC,GAASqzB,IAAyD,IAAxCJ,EAAe5oD,QAAQiyB,GAGvDA,EAAWuE,sBAAsBb,GACjCqW,EAAa/gD,KAAKC,KAAK+mC,EAAWyG,iBAAkBsT,EACtD,CACAA,EAAaxwC,KAAK4tD,YAAclpD,EAAQ8pC,OAAO93B,YAAc85B,EAAa,EAC1ExwC,KAAK6tD,cAAcrd,GAGdgd,GAGHjqD,EAAK6pD,GAAiB32B,IACpBA,EAAW0D,OAAO,IAItBn6B,KAAK8tD,gBAAgB/5C,GAGrB/T,KAAKw7C,cAAc,cAAe,CAACznC,SAEnC/T,KAAKowC,QAAQtP,KAAK2oB,GAAc,IAAK,SAGrC,MAAM,QAACr4B,EAAO,WAAE65B,GAAcjrD,KAC1BirD,EACFjrD,KAAK+tD,cAAc9C,GAAY,GACtB75B,EAAQv/B,QACjBmO,KAAKguD,mBAAmB58B,EAASA,GAAS,GAG5CpxB,KAAKqsD,QACP,CAKAoB,gBACElqD,EAAKvD,KAAKyU,QAASD,IACjBw5B,GAAQsC,UAAUtwC,KAAMwU,EAAA,IAG1BxU,KAAKssD,sBACLtsD,KAAKwsD,qBACP,CAKAkB,sBACE,MAAMhpD,EAAU1E,KAAK0E,QACfupD,EAAiB,IAAI9iD,IAAIlN,OAAOD,KAAKgC,KAAKkrD,aAC1CgD,EAAY,IAAI/iD,IAAIzG,EAAQyO,QAE7BhN,GAAU8nD,EAAgBC,MAAgBluD,KAAKmrD,uBAAyBzmD,EAAQ6P,aAEnFvU,KAAKmuD,eACLnuD,KAAK+rD,aAET,CAKA4B,uBACE,MAAM,eAACrC,GAAkBtrD,KACnBouD,EAAUpuD,KAAKquD,0BAA4B,GACjD,IAAK,MAAM,OAACt6B,EAAM,MAAE1qB,EAAA,MAAO+C,KAAUgiD,EAAS,CAE5ChE,GAAgBkB,EAAgBjiD,EADR,oBAAX0qB,GAAgC3nB,EAAQA,EAEvD,CACF,CAKAiiD,yBACE,MAAMnuB,EAAelgC,KAAKkgC,aAC1B,IAAKA,IAAiBA,EAAaruC,OACjC,OAGFmO,KAAKkgC,aAAe,GACpB,MAAMouB,EAAetuD,KAAKmZ,KAAKtG,SAAShhB,OAClC08D,EAAWxQ,GAAQ,IAAI5yC,IAC3B+0B,EACGrc,QAAOpzB,GAAKA,EAAE,KAAOstD,IACrBvrD,KAAI,CAAC/B,EAAGyB,IAAMA,EAAI,IAAMzB,EAAEqa,OAAO,GAAGuY,KAAK,QAGxCmrC,EAAYD,EAAQ,GAC1B,IAAK,IAAIr8D,EAAI,EAAGA,EAAIo8D,EAAcp8D,IAChC,IAAKiU,GAAUqoD,EAAWD,EAAQr8D,IAChC,OAGJ,OAAOI,MAAMwM,KAAK0vD,GACfh8D,KAAI/B,GAAKA,EAAEiV,MAAM,OACjBlT,KAAIjC,IAAA,CAAOwjC,OAAQxjC,EAAE,GAAI8Y,OAAQ9Y,EAAE,GAAI6b,OAAQ7b,EAAE,MACtD,CAOAs9D,cAAcrd,GACZ,IAA+D,IAA3DxwC,KAAKw7C,cAAc,eAAgB,CAACiK,YAAY,IAClD,OAGFzX,GAAQza,OAAOvzB,KAAMA,KAAKiY,MAAOjY,KAAK4a,OAAQ41B,GAE9C,MAAMj0B,EAAOvc,KAAK09B,UACZ+wB,EAASlyC,EAAKtE,OAAS,GAAKsE,EAAK3B,QAAU,EAEjD5a,KAAKowC,QAAU,GACf7sC,EAAKvD,KAAK6vC,OAAQlmB,IACZ8kC,GAA2B,cAAjB9kC,EAAIuiB,WAOdviB,EAAIwK,WACNxK,EAAIwK,YAENn0B,KAAKowC,QAAQxqC,QAAQ+jB,EAAIymB,WAAU,GAClCpwC,MAEHA,KAAKowC,QAAQrlC,SAAQ,CAAC1E,EAAMpC,KAC1BoC,EAAKqoD,KAAOzqD,CAAA,IAGdjE,KAAKw7C,cAAc,cACrB,CAOAsS,gBAAgB/5C,GACd,IAA6E,IAAzE/T,KAAKw7C,cAAc,uBAAwB,CAACznC,OAAM0xC,YAAY,IAAlE,CAIA,IAAK,IAAIvzD,EAAI,EAAG2R,EAAO7D,KAAKmZ,KAAKtG,SAAShhB,OAAQK,EAAI2R,IAAQ3R,EAC5D8N,KAAKg6B,eAAe9nC,GAAGukC,WAAWtC,YAGpC,IAAK,IAAIjiC,EAAI,EAAG2R,EAAO7D,KAAKmZ,KAAKtG,SAAShhB,OAAQK,EAAI2R,IAAQ3R,EAC5D8N,KAAK2uD,eAAez8D,EAAGgU,GAAW6N,GAAQA,EAAK,CAAC/P,aAAc9R,IAAM6hB,GAGtE/T,KAAKw7C,cAAc,sBAAuB,CAACznC,SAC7C,CAOA46C,eAAe1qD,EAAO8P,GACpB,MAAM/H,EAAOhM,KAAKg6B,eAAe/1B,GAC3Bb,EAAO,CAAC4I,OAAM/H,QAAO8P,OAAM0xC,YAAY,IAEW,IAApDzlD,KAAKw7C,cAAc,sBAAuBp4C,KAI9C4I,EAAKyqB,WAAW3F,QAAQ/c,GAExB3Q,EAAKqiD,YAAa,EAClBzlD,KAAKw7C,cAAc,qBAAsBp4C,GAC3C,CAEAipD,UACiE,IAA3DrsD,KAAKw7C,cAAc,eAAgB,CAACiK,YAAY,MAIhDpzB,GAAS/rB,IAAItG,MACXA,KAAKurD,WAAal5B,GAASnB,QAAQlxB,OACrCqyB,GAAShpB,MAAMrJ,OAGjBA,KAAKmxB,OACLy4B,GAAqB,CAACz4C,MAAOnR,QAEjC,CAEAmxB,OACE,IAAIj/B,EACJ,GAAI8N,KAAKgsD,kBAAmB,CAC1B,MAAM,MAAC/zC,EAAA,OAAO2C,GAAU5a,KAAKgsD,kBAC7BhsD,KAAKisD,QAAQh0C,EAAO2C,GACpB5a,KAAKgsD,kBAAoB,KAI3B,GAFAhsD,KAAK0oD,QAED1oD,KAAKiY,OAAS,GAAKjY,KAAK4a,QAAU,EACpC,OAGF,IAA6D,IAAzD5a,KAAKw7C,cAAc,aAAc,CAACiK,YAAY,IAChD,OAMF,MAAMmJ,EAAS5uD,KAAKowC,QACpB,IAAKl+C,EAAI,EAAGA,EAAI08D,EAAO/8D,QAAU+8D,EAAO18D,GAAGm+C,GAAK,IAAKn+C,EACnD08D,EAAO18D,GAAGi/B,KAAKnxB,KAAK09B,WAMtB,IAHA19B,KAAK6uD,gBAGE38D,EAAI08D,EAAO/8D,SAAUK,EAC1B08D,EAAO18D,GAAGi/B,KAAKnxB,KAAK09B,WAGtB19B,KAAKw7C,cAAc,YACrB,CAKAjmB,uBAAuBF,GACrB,MAAMC,EAAWt1B,KAAKorD,gBAChBjiC,EAAS,GACf,IAAIj3B,EAAG2R,EAEP,IAAK3R,EAAI,EAAG2R,EAAOyxB,EAASzjC,OAAQK,EAAI2R,IAAQ3R,EAAG,CACjD,MAAM8Z,EAAOspB,EAASpjC,GACjBmjC,IAAiBrpB,EAAKwK,SACzB2S,EAAOvjB,KAAKoG,EAEhB,CAEA,OAAOmd,CACT,CAMAijB,+BACE,OAAOpsC,KAAKu1B,wBAAuB,EACrC,CAOAs5B,gBACE,IAAqE,IAAjE7uD,KAAKw7C,cAAc,qBAAsB,CAACiK,YAAY,IACxD,OAGF,MAAMnwB,EAAWt1B,KAAKosC,+BACtB,IAAK,IAAIl6C,EAAIojC,EAASzjC,OAAS,EAAGK,GAAK,IAAKA,EAC1C8N,KAAK8uD,aAAax5B,EAASpjC,IAG7B8N,KAAKw7C,cAAc,oBACrB,CAOAsT,aAAa9iD,GACX,MAAM0H,EAAM1T,KAAK0T,IACX0D,EAAOpL,EAAKsxB,MACZyxB,GAAW33C,EAAKmmB,SAChBhhB,EAxrBV,SAAwBvQ,EAAM0xB,GAC5B,MAAM,OAAC5wB,EAAA,OAAQC,GAAUf,EACzB,OAAIc,GAAUC,EACL,CACLgK,KAAMuzC,GAAex9C,EAAQ4wB,EAAW,QACxC7mB,MAAOyzC,GAAex9C,EAAQ4wB,EAAW,SACzC9mB,IAAK0zC,GAAev9C,EAAQ2wB,EAAW,OACvC5mB,OAAQwzC,GAAev9C,EAAQ2wB,EAAW,WAGvCA,CACT,CA6qBiBsxB,CAAehjD,EAAMhM,KAAK09B,WACjCt6B,EAAO,CACX4I,OACA/H,MAAO+H,EAAK/H,MACZwhD,YAAY,IAGwC,IAAlDzlD,KAAKw7C,cAAc,oBAAqBp4C,KAIxC2rD,GACFtyC,GAAS/I,EAAK,CACZqD,MAAoB,IAAdK,EAAKL,KAAiB,EAAIwF,EAAKxF,KAAOK,EAAKL,KACjDF,OAAsB,IAAfO,EAAKP,MAAkB7W,KAAKiY,MAAQsE,EAAK1F,MAAQO,EAAKP,MAC7DD,KAAkB,IAAbQ,EAAKR,IAAgB,EAAI2F,EAAK3F,IAAMQ,EAAKR,IAC9CE,QAAwB,IAAhBM,EAAKN,OAAmB9W,KAAK4a,OAAS2B,EAAKzF,OAASM,EAAKN,SAIrE9K,EAAKyqB,WAAWtF,OAEZ49B,GACFryC,GAAWhJ,GAGbtQ,EAAKqiD,YAAa,EAClBzlD,KAAKw7C,cAAc,mBAAoBp4C,GACzC,CAOAmpC,cAAcjwB,GACZ,OAAOD,GAAeC,EAAOtc,KAAK09B,UAAW19B,KAAK4tD,YACpD,CAEAqB,0BAA0Bt+D,EAAGojB,EAAMrP,EAAS4nC,GAC1C,MAAMvY,EAASyZ,GAAYC,MAAM15B,GACjC,MAAsB,oBAAXggB,EACFA,EAAO/zB,KAAMrP,EAAG+T,EAAS4nC,GAG3B,EACT,CAEAtS,eAAeh2B,GACb,MAAMi1B,EAAUj5B,KAAKmZ,KAAKtG,SAAS7O,GAC7BsxB,EAAWt1B,KAAKgrD,UACtB,IAAIh/C,EAAOspB,EAASzR,QAAO1wB,GAAKA,GAAKA,EAAEqzC,WAAavN,IAAS1H,MAoB7D,OAlBKvlB,IACHA,EAAO,CACLpM,KAAM,KACNuZ,KAAM,GACN8f,QAAS,KACTxC,WAAY,KACZmG,OAAQ,KACRvD,QAAS,KACTE,QAAS,KACT8zB,MAAOp0B,GAAWA,EAAQo0B,OAAS,EACnCppD,MAAOD,EACPwiC,SAAUvN,EACV1sB,QAAS,GACTF,SAAS,GAEXipB,EAAS1vB,KAAKoG,IAGTA,CACT,CAEAyO,aACE,OAAOza,KAAKu4B,WAAav4B,KAAKu4B,SAAW1X,GAAc,KAAM,CAAC1P,MAAOnR,KAAMJ,KAAM,UACnF,CAEA+nC,yBACE,OAAO3nC,KAAKosC,+BAA+Bv6C,MAC7C,CAEAiyC,iBAAiB9/B,GACf,MAAMi1B,EAAUj5B,KAAKmZ,KAAKtG,SAAS7O,GACnC,IAAKi1B,EACH,OAAO,EAGT,MAAMjtB,EAAOhM,KAAKg6B,eAAeh2B,GAIjC,MAA8B,mBAAhBgI,EAAK4wB,QAAwB5wB,EAAK4wB,QAAU3D,EAAQ2D,MACpE,CAEAsyB,qBAAqBlrD,EAAcwS,GACpBxW,KAAKg6B,eAAeh2B,GAC5B44B,QAAUpmB,CACjB,CAEA8sB,qBAAqBr/B,GACnBjE,KAAKsrD,eAAernD,IAAUjE,KAAKsrD,eAAernD,EACpD,CAEAm/B,kBAAkBn/B,GAChB,OAAQjE,KAAKsrD,eAAernD,EAC9B,CAKAkrD,kBAAkBnrD,EAAc65B,EAAWrnB,GACzC,MAAMzC,EAAOyC,EAAU,OAAS,OAC1BxK,EAAOhM,KAAKg6B,eAAeh2B,GAC3BusB,EAAQvkB,EAAKyqB,WAAW8H,wBAAmBjtC,EAAWyiB,GAExD9N,GAAQ43B,IACV7xB,EAAKmN,KAAK0kB,GAAWjB,QAAUpmB,EAC/BxW,KAAKuzB,WAELvzB,KAAKkvD,qBAAqBlrD,EAAcwS,GAExC+Z,EAAMgD,OAAOvnB,EAAM,CAACwK,YACpBxW,KAAKuzB,QAAQ7f,GAAQA,EAAI1P,eAAiBA,EAAe+P,OAAOziB,IAEpE,CAEAmlB,KAAKzS,EAAc65B,GACjB79B,KAAKmvD,kBAAkBnrD,EAAc65B,GAAW,EAClD,CAEAvnB,KAAKtS,EAAc65B,GACjB79B,KAAKmvD,kBAAkBnrD,EAAc65B,GAAW,EAClD,CAKAovB,oBAAoBjpD,GAClB,MAAMgI,EAAOhM,KAAKgrD,UAAUhnD,GACxBgI,GAAQA,EAAKyqB,YACfzqB,EAAKyqB,WAAW2D,kBAEXp6B,KAAKgrD,UAAUhnD,EACxB,CAEAorD,QACE,IAAIl9D,EAAG2R,EAIP,IAHA7D,KAAKkyB,OACLG,GAASD,OAAOpyB,MAEX9N,EAAI,EAAG2R,EAAO7D,KAAKmZ,KAAKtG,SAAShhB,OAAQK,EAAI2R,IAAQ3R,EACxD8N,KAAKitD,oBAAoB/6D,EAE7B,CAEAm9D,UACErvD,KAAKw7C,cAAc,iBACnB,MAAM,OAAChhC,EAAM,IAAE9G,GAAO1T,KAEtBA,KAAKovD,QACLpvD,KAAKi0B,OAAOw0B,aAERjuC,IACFxa,KAAKmuD,eACL5zC,GAAYC,EAAQ9G,GACpB1T,KAAKgT,SAAS0+B,eAAeh+B,GAC7B1T,KAAKwa,OAAS,KACdxa,KAAK0T,IAAM,aAGNw2C,GAAUlqD,KAAKgC,IAEtBhC,KAAKw7C,cAAc,eACrB,CAEA8T,gBACE,OAAOtvD,KAAKwa,OAAO+0C,aAAa39D,UAClC,CAKAm6D,aACE/rD,KAAKwvD,iBACDxvD,KAAK0E,QAAQ6P,WACfvU,KAAKyvD,uBAELzvD,KAAKurD,UAAW,CAEpB,CAKAiE,iBACE,MAAM3kD,EAAY7K,KAAKkrD,WACjBl4C,EAAWhT,KAAKgT,SAEhB08C,EAAOA,CAAC9vD,EAAM8K,KAClBsI,EAAS8Y,iBAAiB9rB,KAAMJ,EAAM8K,GACtCG,EAAUjL,GAAQ8K,CAAA,EAGdA,EAAWA,CAAC/Z,EAAGwC,EAAGmS,KACtB3U,EAAEk5B,QAAU12B,EACZxC,EAAEm5B,QAAUxkB,EACZtF,KAAK+tD,cAAcp9D,EAAA,EAGrB4S,EAAKvD,KAAK0E,QAAQyO,QAASvT,GAAS8vD,EAAK9vD,EAAM8K,IACjD,CAKA+kD,uBACOzvD,KAAKmrD,uBACRnrD,KAAKmrD,qBAAuB,CAAC,GAE/B,MAAMtgD,EAAY7K,KAAKmrD,qBACjBn4C,EAAWhT,KAAKgT,SAEhB08C,EAAOA,CAAC9vD,EAAM8K,KAClBsI,EAAS8Y,iBAAiB9rB,KAAMJ,EAAM8K,GACtCG,EAAUjL,GAAQ8K,CAAA,EAEdilD,EAAUA,CAAC/vD,EAAM8K,KACjBG,EAAUjL,KACZoT,EAAS+Y,oBAAoB/rB,KAAMJ,EAAM8K,UAClCG,EAAUjL,KAIf8K,EAAWA,CAACuN,EAAO2C,KACnB5a,KAAKwa,QACPxa,KAAKqW,OAAO4B,EAAO2C,IAIvB,IAAIg1C,EACJ,MAAMrE,EAAWA,KACfoE,EAAQ,SAAUpE,GAElBvrD,KAAKurD,UAAW,EAChBvrD,KAAKqW,SAELq5C,EAAK,SAAUhlD,GACfglD,EAAK,SAAUE,EAAA,EAGjBA,EAAWA,KACT5vD,KAAKurD,UAAW,EAEhBoE,EAAQ,SAAUjlD,GAGlB1K,KAAKovD,QACLpvD,KAAKisD,QAAQ,EAAG,GAEhByD,EAAK,SAAUnE,EAAA,EAGbv4C,EAAS2+B,WAAW3xC,KAAKwa,QAC3B+wC,IAEAqE,GAEJ,CAKAzB,eACE5qD,EAAKvD,KAAKkrD,YAAY,CAACxgD,EAAU9K,KAC/BI,KAAKgT,SAAS+Y,oBAAoB/rB,KAAMJ,EAAM8K,EAAA,IAEhD1K,KAAKkrD,WAAa,CAAC,EAEnB3nD,EAAKvD,KAAKmrD,sBAAsB,CAACzgD,EAAU9K,KACzCI,KAAKgT,SAAS+Y,oBAAoB/rB,KAAMJ,EAAM8K,EAAA,IAEhD1K,KAAKmrD,0BAAuB75D,CAC9B,CAEAu+D,iBAAiB5kD,EAAO8I,EAAMqiC,GAC5B,MAAM9xB,EAAS8xB,EAAU,MAAQ,SACjC,IAAIpqC,EAAM3F,EAAMnU,EAAG2R,EAOnB,IALa,YAATkQ,IACF/H,EAAOhM,KAAKg6B,eAAe/uB,EAAM,GAAGjH,cACpCgI,EAAKyqB,WAAW,IAAMnS,EAAS,wBAG5BpyB,EAAI,EAAG2R,EAAOoH,EAAMpZ,OAAQK,EAAI2R,IAAQ3R,EAAG,CAC9CmU,EAAO4E,EAAM/Y,GACb,MAAMukC,EAAapwB,GAAQrG,KAAKg6B,eAAe3zB,EAAKrC,cAAcyyB,WAC9DA,GACFA,EAAWnS,EAAS,cAAcje,EAAKuiB,QAASviB,EAAKrC,aAAcqC,EAAKpC,MAE5E,CACF,CAMA6rD,oBACE,OAAO9vD,KAAKoxB,SAAW,EACzB,CAMA2+B,kBAAkBC,GAChB,MAAMC,EAAajwD,KAAKoxB,SAAW,GAC7Bhb,EAAS45C,EAAex9D,KAAI09D,IAA2B,IAA1B,aAAClsD,EAAY,MAAEC,GAAMisD,EACtD,MAAMlkD,EAAOhM,KAAKg6B,eAAeh2B,GACjC,IAAKgI,EACH,MAAM,IAAIoX,MAAM,6BAA+Bpf,GAGjD,MAAO,CACLA,eACA4kB,QAAS5c,EAAKmN,KAAKlV,GACnBA,QACD,KAEcP,EAAe0S,EAAQ65C,KAGtCjwD,KAAKoxB,QAAUhb,EAEfpW,KAAKirD,WAAa,KAClBjrD,KAAKguD,mBAAmB53C,EAAQ65C,GAEpC,CAWAzU,cAAc6J,EAAMjiD,EAAMygB,GACxB,OAAO7jB,KAAKqrD,SAASjG,OAAOplD,KAAMqlD,EAAMjiD,EAAMygB,EAChD,CAOAkV,gBAAgBo3B,GACd,OAA6E,IAAtEnwD,KAAKqrD,SAAS3qB,OAAO7c,QAAOhjB,GAAKA,EAAE2kD,OAAOxjD,KAAOmuD,IAAUt+D,MACpE,CAKAm8D,mBAAmB53C,EAAQ65C,EAAYG,GACrC,MAAMC,EAAerwD,KAAK0E,QAAQ8O,MAC5Bg4B,EAAOA,CAACj7C,EAAGC,IAAMD,EAAEszB,QAAO1wB,IAAM3C,EAAE41D,MAAK9gD,GAAKnS,EAAE6Q,eAAiBsB,EAAEtB,cAAgB7Q,EAAE8Q,QAAUqB,EAAErB,UAC/FqsD,EAAc9kB,EAAKykB,EAAY75C,GAC/Bm6C,EAAYH,EAASh6C,EAASo1B,EAAKp1B,EAAQ65C,GAE7CK,EAAYz+D,QACdmO,KAAK6vD,iBAAiBS,EAAaD,EAAat8C,MAAM,GAGpDw8C,EAAU1+D,QAAUw+D,EAAat8C,MACnC/T,KAAK6vD,iBAAiBU,EAAWF,EAAat8C,MAAM,EAExD,CAKAg6C,cAAcp9D,EAAGy/D,GACf,MAAMhtD,EAAO,CACXkmB,MAAO34B,EACPy/D,SACA3K,YAAY,EACZ+K,YAAaxwD,KAAKusC,cAAc57C,IAE5B8/D,EAAejL,IAAYA,EAAO9gD,QAAQyO,QAAUnT,KAAK0E,QAAQyO,QAAQpB,SAASphB,EAAE0jD,OAAOz0C,MAEjG,IAA6D,IAAzDI,KAAKw7C,cAAc,cAAep4C,EAAMqtD,GAC1C,OAGF,MAAMnjD,EAAUtN,KAAK0wD,aAAa//D,EAAGy/D,EAAQhtD,EAAKotD,aASlD,OAPAptD,EAAKqiD,YAAa,EAClBzlD,KAAKw7C,cAAc,aAAcp4C,EAAMqtD,IAEnCnjD,GAAWlK,EAAKkK,UAClBtN,KAAKqsD,SAGArsD,IACT,CAUA0wD,aAAa//D,EAAGy/D,EAAQI,GACtB,MAAOp/B,QAAS6+B,EAAa,GAAE,QAAEvrD,GAAW1E,KAetCssC,EAAmB8jB,EACnBh6C,EAASpW,KAAK2wD,mBAAmBhgE,EAAGs/D,EAAYO,EAAalkB,GAC7DskB,E7CvzBH,SAAuBjgE,GAC5B,MAAkB,YAAXA,EAAEiP,MAAiC,UAAXjP,EAAEiP,MAA+B,gBAAXjP,EAAEiP,IACzD,C6CqzBoBixD,CAAclgE,GACxBmgE,EAxnCV,SAA4BngE,EAAGmgE,EAAWN,EAAaI,GACrD,OAAKJ,GAA0B,aAAX7/D,EAAEiP,KAGlBgxD,EACKE,EAEFngE,EALE,IAMX,CAgnCsBogE,CAAmBpgE,EAAGqP,KAAKirD,WAAYuF,EAAaI,GAElEJ,IAGFxwD,KAAKirD,WAAa,KAGlB/nD,EAAawB,EAAQyP,QAAS,CAACxjB,EAAGylB,EAAQpW,MAAOA,MAE7C4wD,GACF1tD,EAAawB,EAAQ0P,QAAS,CAACzjB,EAAGylB,EAAQpW,MAAOA,OAIrD,MAAMsN,GAAW5J,EAAe0S,EAAQ65C,GAQxC,OAPI3iD,GAAW8iD,KACbpwD,KAAKoxB,QAAUhb,EACfpW,KAAKguD,mBAAmB53C,EAAQ65C,EAAYG,IAG9CpwD,KAAKirD,WAAa6F,EAEXxjD,CACT,CAUAqjD,mBAAmBhgE,EAAGs/D,EAAYO,EAAalkB,GAC7C,GAAe,aAAX37C,EAAEiP,KACJ,MAAO,GAGT,IAAK4wD,EAEH,OAAOP,EAGT,MAAMI,EAAerwD,KAAK0E,QAAQ8O,MAClC,OAAOxT,KAAKivD,0BAA0Bt+D,EAAG0/D,EAAat8C,KAAMs8C,EAAc/jB,EAC5E,EAIF,SAASke,KACP,OAAOjnD,EAAKrU,GAAMg7D,WAAY/4C,GAAUA,EAAMk6C,SAAS3F,cACzD,CEzuCA,SAASsL,GAAkBp1C,EAAiB4nB,EAAqBC,EAAqBwtB,GACpF,MAAM5rD,EAPCua,GAOmBhE,EAAIlX,QAAQwsD,aAPN,CAAC,aAAc,WAAY,aAAc,aAQzE,MAAMC,GAAiB1tB,EAAcD,GAAe,EAC9C4tB,EAAa3hE,KAAKE,IAAIwhE,EAAeF,EAAaztB,EAAc,GAShE6tB,EAAqBhwD,IACzB,MAAMiwD,GAAiB7tB,EAAch0C,KAAKE,IAAIwhE,EAAe9vD,IAAQ4vD,EAAa,EAClF,OAAOrnD,GAAYvI,EAAK,EAAG5R,KAAKE,IAAIwhE,EAAeG,GAAA,EAGrD,MAAO,CACLC,WAAYF,EAAkBhsD,EAAEksD,YAChCC,SAAUH,EAAkBhsD,EAAEmsD,UAC9BC,WAAY7nD,GAAYvE,EAAEosD,WAAY,EAAGL,GACzCM,SAAU9nD,GAAYvE,EAAEqsD,SAAU,EAAGN,GAEzC,CAKA,SAASO,GAAWzgE,EAAW0gE,EAAez+D,EAAWmS,GACvD,MAAO,CACLnS,EAAGA,EAAIjC,EAAIzB,KAAKif,IAAIkjD,GACpBtsD,EAAGA,EAAIpU,EAAIzB,KAAKge,IAAImkD,GAExB,CAiBA,SAASC,GACPn+C,EACAkV,EACA3R,EACA+rB,EACA15B,EACA+9B,GAEA,MAAM,EAACl0C,EAAA,EAAGmS,EAAGk/B,WAAYn7B,EAAK,YAAEyoD,EAAatuB,YAAauuB,GAAUnpC,EAE9D6a,EAAch0C,KAAKC,IAAIk5B,EAAQ6a,YAAcT,EAAU/rB,EAAS66C,EAAa,GAC7EtuB,EAAcuuB,EAAS,EAAIA,EAAS/uB,EAAU/rB,EAAS66C,EAAc,EAE3E,IAAIE,EAAgB,EACpB,MAAM3gE,EAAQiY,EAAMD,EAEpB,GAAI25B,EAAS,CAIX,MAEMivB,IAFuBF,EAAS,EAAIA,EAAS/uB,EAAU,IAChCS,EAAc,EAAIA,EAAcT,EAAU,IACI,EAE3EgvB,GAAiB3gE,GAD4B,IAAvB4gE,EAA2B5gE,EAAS4gE,GAAuBA,EAAqBjvB,GAAW3xC,IACvE,EAG5C,MACM6gE,GAAe7gE,EADR5B,KAAKC,IAAI,KAAO2B,EAAQoyC,EAAcxsB,EAAS1Q,IAAMk9B,GAC7B,EAC/Be,EAAan7B,EAAQ6oD,EAAcF,EACnCvtB,EAAWn7B,EAAM4oD,EAAcF,GAC/B,WAACT,EAAA,SAAYC,EAAA,WAAUC,EAAU,SAAEC,GAAYV,GAAkBpoC,EAAS4a,EAAaC,EAAagB,EAAWD,GAE/G2tB,EAA2B1uB,EAAc8tB,EACzCa,EAAyB3uB,EAAc+tB,EACvCa,EAA0B7tB,EAAa+sB,EAAaY,EACpDG,EAAwB7tB,EAAW+sB,EAAWY,EAE9CG,EAA2B/uB,EAAciuB,EACzCe,EAAyBhvB,EAAckuB,EACvCe,EAA0BjuB,EAAaitB,EAAac,EACpDG,EAAwBjuB,EAAWitB,EAAWc,EAIpD,GAFA9+C,EAAIgI,YAEA2rB,EAAU,CAEZ,MAAMsrB,GAAyBN,EAA0BC,GAAyB,EAKlF,GAJA5+C,EAAIkI,IAAIzoB,EAAGmS,EAAGm+B,EAAa4uB,EAAyBM,GACpDj/C,EAAIkI,IAAIzoB,EAAGmS,EAAGm+B,EAAakvB,EAAuBL,GAG9Cd,EAAW,EAAG,CAChB,MAAMoB,EAAUjB,GAAWS,EAAwBE,EAAuBn/D,EAAGmS,GAC7EoO,EAAIkI,IAAIg3C,EAAQz/D,EAAGy/D,EAAQttD,EAAGksD,EAAUc,EAAuB7tB,EAAW59B,IAI5E,MAAMgsD,EAAKlB,GAAWa,EAAwB/tB,EAAUtxC,EAAGmS,GAI3D,GAHAoO,EAAIqI,OAAO82C,EAAG1/D,EAAG0/D,EAAGvtD,GAGhBosD,EAAW,EAAG,CAChB,MAAMkB,EAAUjB,GAAWa,EAAwBE,EAAuBv/D,EAAGmS,GAC7EoO,EAAIkI,IAAIg3C,EAAQz/D,EAAGy/D,EAAQttD,EAAGosD,EAAUjtB,EAAW59B,GAAS6rD,EAAwBjjE,KAAK8W,IAI3F,MAAMusD,GAA0BruB,EAAYitB,EAAWluB,GAAiBgB,EAAcitB,EAAajuB,IAAiB,EAKpH,GAJA9vB,EAAIkI,IAAIzoB,EAAGmS,EAAGk+B,EAAaiB,EAAYitB,EAAWluB,EAAcsvB,GAAuB,GACvFp/C,EAAIkI,IAAIzoB,EAAGmS,EAAGk+B,EAAasvB,EAAuBtuB,EAAcitB,EAAajuB,GAAc,GAGvFiuB,EAAa,EAAG,CAClB,MAAMmB,EAAUjB,GAAWY,EAA0BE,EAAyBt/D,EAAGmS,GACjFoO,EAAIkI,IAAIg3C,EAAQz/D,EAAGy/D,EAAQttD,EAAGmsD,EAAYgB,EAA0BhjE,KAAK8W,GAAIi+B,EAAa39B,IAI5F,MAAMksD,EAAKpB,GAAWQ,EAA0B3tB,EAAYrxC,EAAGmS,GAI/D,GAHAoO,EAAIqI,OAAOg3C,EAAG5/D,EAAG4/D,EAAGztD,GAGhBisD,EAAa,EAAG,CAClB,MAAMqB,EAAUjB,GAAWQ,EAA0BE,EAAyBl/D,EAAGmS,GACjFoO,EAAIkI,IAAIg3C,EAAQz/D,EAAGy/D,EAAQttD,EAAGisD,EAAY/sB,EAAa39B,GAASwrD,QAE7D,CACL3+C,EAAIoI,OAAO3oB,EAAGmS,GAEd,MAAM0tD,EAAcvjE,KAAKif,IAAI2jD,GAA2B5uB,EAActwC,EAChE8/D,EAAcxjE,KAAKge,IAAI4kD,GAA2B5uB,EAAcn+B,EACtEoO,EAAIqI,OAAOi3C,EAAaC,GAExB,MAAMC,EAAYzjE,KAAKif,IAAI4jD,GAAyB7uB,EAActwC,EAC5DggE,EAAY1jE,KAAKge,IAAI6kD,GAAyB7uB,EAAcn+B,EAClEoO,EAAIqI,OAAOm3C,EAAWC,GAGxBz/C,EAAImI,WACN,CAyBA,SAASilC,GACPptC,EACAkV,EACA3R,EACA+rB,EACAqE,GAEA,MAAM,YAAC+rB,EAAA,WAAa5uB,EAAA,cAAYzB,EAAa,QAAEr+B,GAAWkkB,GACpD,YAACzM,EAAA,gBAAa4T,EAAA,WAAiBF,EAAU,iBAAEC,GAAoBprB,EAC/D2uD,EAAgC,UAAxB3uD,EAAQuhC,YAEtB,IAAK9pB,EACH,OAGFzI,EAAIktC,YAAY/wB,GAAc,IAC9Bnc,EAAImtC,eAAiB/wB,EAEjBujC,GACF3/C,EAAI6D,UAA0B,EAAd4E,EAChBzI,EAAI4/C,SAAWvjC,GAAmB,UAElCrc,EAAI6D,UAAY4E,EAChBzI,EAAI4/C,SAAWvjC,GAAmB,SAGpC,IAAI0U,EAAW7b,EAAQ6b,SACvB,GAAI2uB,EAAa,CACfvB,GAAQn+C,EAAKkV,EAAS3R,EAAQ+rB,EAASyB,EAAU4C,GACjD,IAAK,IAAIn1C,EAAI,EAAGA,EAAIkhE,IAAelhE,EACjCwhB,EAAI0I,SAEDxU,MAAMm7B,KACT0B,EAAWD,GAAczB,EAAgBv8B,IAAOA,KAIhD6sD,GA7ON,SAAiB3/C,EAA+BkV,EAAqB6b,GACnE,MAAM,WAACD,EAAA,YAAYstB,EAAA,EAAa3+D,EAAA,EAAGmS,EAAA,YAAGm+B,EAAA,YAAaD,GAAe5a,EAClE,IAAI2qC,EAAczB,EAAcruB,EAIhC/vB,EAAIgI,YACJhI,EAAIkI,IAAIzoB,EAAGmS,EAAGm+B,EAAae,EAAa+uB,EAAa9uB,EAAW8uB,GAC5D/vB,EAAcsuB,GAChByB,EAAczB,EAActuB,EAC5B9vB,EAAIkI,IAAIzoB,EAAGmS,EAAGk+B,EAAaiB,EAAW8uB,EAAa/uB,EAAa+uB,GAAa,IAE7E7/C,EAAIkI,IAAIzoB,EAAGmS,EAAGwsD,EAAartB,EAAW59B,GAAS29B,EAAa39B,IAE9D6M,EAAImI,YACJnI,EAAI0D,MACN,CA8NIo8C,CAAQ9/C,EAAKkV,EAAS6b,GAGnB2uB,IACHvB,GAAQn+C,EAAKkV,EAAS3R,EAAQ+rB,EAASyB,EAAU4C,GACjD3zB,EAAI0I,SAER,CCjPA,SAASq3C,GAAS//C,EAAKhP,GAA0B,IAAjB4O,EAAA1hB,UAAAC,OAAA,QAAAP,IAAAM,UAAA,GAAAA,UAAA,GAAQ8S,EACtCgP,EAAIggD,QAAU7wD,EAAeyQ,EAAMsc,eAAgBlrB,EAAQkrB,gBAC3Dlc,EAAIktC,YAAY/9C,EAAeyQ,EAAMuc,WAAYnrB,EAAQmrB,aACzDnc,EAAImtC,eAAiBh+C,EAAeyQ,EAAMwc,iBAAkBprB,EAAQorB,kBACpEpc,EAAI4/C,SAAWzwD,EAAeyQ,EAAMyc,gBAAiBrrB,EAAQqrB,iBAC7Drc,EAAI6D,UAAY1U,EAAeyQ,EAAM6I,YAAazX,EAAQyX,aAC1DzI,EAAI2K,YAAcxb,EAAeyQ,EAAMV,YAAalO,EAAQkO,YAC9D,CAEA,SAASmJ,GAAOrI,EAAKkJ,EAAUzY,GAC7BuP,EAAIqI,OAAO5X,EAAOhR,EAAGgR,EAAOmB,EAC9B,CAiBA,SAASquD,GAAS1nD,EAAQ+hB,GAAsB,IAAbigB,EAASr8C,UAAAC,OAAA,QAAAP,IAAAM,UAAA,GAAAA,UAAA,MAC1C,MAAMwa,EAAQH,EAAOpa,QACdwX,MAAOuqD,EAAc,EAAGtqD,IAAKuqD,EAAYznD,EAAQ,GAAK6hC,GACtD5kC,MAAOyqD,EAAcxqD,IAAKyqD,GAAc/lC,EACzC3kB,EAAQ5Z,KAAKC,IAAIkkE,EAAaE,GAC9BxqD,EAAM7Z,KAAKE,IAAIkkE,EAAWE,GAC1BC,EAAUJ,EAAcE,GAAgBD,EAAYC,GAAgBF,EAAcG,GAAcF,EAAYE,EAElH,MAAO,CACL3nD,QACA/C,QACA6M,KAAM8X,EAAQ9X,KACdrS,KAAMyF,EAAMD,IAAU2qD,EAAU5nD,EAAQ9C,EAAMD,EAAQC,EAAMD,EAEhE,CAiBA,SAAS4qD,GAAYvgD,EAAKkK,EAAMoQ,EAASigB,GACvC,MAAM,OAAChiC,EAAA,QAAQvH,GAAWkZ,GACpB,MAACxR,EAAA,MAAO/C,EAAA,KAAO6M,EAAA,KAAMrS,GAAQ8vD,GAAS1nD,EAAQ+hB,EAASigB,GACvDimB,EA9CR,SAAuBxvD,GACrB,OAAIA,EAAQyvD,QACHx3C,GAGLjY,EAAQkjB,SAA8C,aAAnCljB,EAAQ8iB,uBACtBzK,GAGFhB,EACT,CAoCqBq4C,CAAc1vD,GAEjC,IACIxS,EAAGoqB,EAAOqL,GADV,KAACmY,GAAO,EAAI,QAAEr8B,GAAWwqC,GAAU,CAAC,EAGxC,IAAK/7C,EAAI,EAAGA,GAAK2R,IAAQ3R,EACvBoqB,EAAQrQ,GAAQ5C,GAAS5F,EAAUI,EAAO3R,EAAIA,IAAMka,GAEhDkQ,EAAMiJ,OAGCua,GACTpsB,EAAIoI,OAAOQ,EAAMnpB,EAAGmpB,EAAMhX,GAC1Bw6B,GAAO,GAEPo0B,EAAWxgD,EAAKiU,EAAMrL,EAAO7Y,EAASiB,EAAQyvD,SAGhDxsC,EAAOrL,GAQT,OALIpG,IACFoG,EAAQrQ,GAAQ5C,GAAS5F,EAAUI,EAAO,IAAMuI,GAChD8nD,EAAWxgD,EAAKiU,EAAMrL,EAAO7Y,EAASiB,EAAQyvD,YAGvCj+C,CACX,CAiBA,SAASm+C,GAAgB3gD,EAAKkK,EAAMoQ,EAASigB,GAC3C,MAAMhiC,EAAS2R,EAAK3R,QACd,MAACG,EAAK,MAAE/C,EAAK,KAAExF,GAAQ8vD,GAAS1nD,EAAQ+hB,EAASigB,IACjD,KAACnO,GAAO,EAAI,QAAEr8B,GAAWwqC,GAAU,CAAC,EAC1C,IAEI/7C,EAAGoqB,EAAOg4C,EAAOnvB,EAAMF,EAAMsvB,EAF7BC,EAAO,EACPC,EAAS,EAGb,MAAMC,EAAczwD,IAAWoF,GAAS5F,EAAUI,EAAOI,EAAQA,IAAUmI,EACrEuoD,EAAQA,KACRxvB,IAASF,IAEXvxB,EAAIqI,OAAOy4C,EAAMvvB,GACjBvxB,EAAIqI,OAAOy4C,EAAMrvB,GAGjBzxB,EAAIqI,OAAOy4C,EAAMD,KASrB,IALIz0B,IACFxjB,EAAQrQ,EAAOyoD,EAAW,IAC1BhhD,EAAIoI,OAAOQ,EAAMnpB,EAAGmpB,EAAMhX,IAGvBpT,EAAI,EAAGA,GAAK2R,IAAQ3R,EAAG,CAG1B,GAFAoqB,EAAQrQ,EAAOyoD,EAAWxiE,IAEtBoqB,EAAMiJ,KAER,SAGF,MAAMpyB,EAAImpB,EAAMnpB,EACVmS,EAAIgX,EAAMhX,EACVsvD,EAAa,EAAJzhE,EAEXyhE,IAAWN,GAEThvD,EAAI6/B,EACNA,EAAO7/B,EACEA,EAAI2/B,IACbA,EAAO3/B,GAGTkvD,GAAQC,EAASD,EAAOrhE,KAAOshE,IAE/BE,IAGAjhD,EAAIqI,OAAO5oB,EAAGmS,GAEdgvD,EAAQM,EACRH,EAAS,EACTtvB,EAAOF,EAAO3/B,GAGhBivD,EAAQjvD,CACV,CACAqvD,GACF,CAOA,SAASE,GAAkBj3C,GACzB,MAAMN,EAAOM,EAAKlZ,QACZmrB,EAAavS,EAAKuS,YAAcvS,EAAKuS,WAAWh+B,OAEtD,OADqB+rB,EAAK6oB,aAAe7oB,EAAKqV,QAAU3V,EAAKsK,SAA2C,aAAhCtK,EAAKkK,yBAA0ClK,EAAK62C,UAAYtkC,EACnHwkC,GAAkBJ,EACzC,CA2CA,MAAMa,GAA8B,oBAAXC,OAEzB,SAAS5jC,GAAKzd,EAAKkK,EAAMvU,EAAO+C,GAC1B0oD,KAAcl3C,EAAKlZ,QAAQspB,QA7BjC,SAA6Bta,EAAKkK,EAAMvU,EAAO+C,GAC7C,IAAI4oD,EAAOp3C,EAAKq3C,MACXD,IACHA,EAAOp3C,EAAKq3C,MAAQ,IAAIF,OACpBn3C,EAAKo3C,KAAKA,EAAM3rD,EAAO+C,IACzB4oD,EAAKn5C,aAGT43C,GAAS//C,EAAKkK,EAAKlZ,SACnBgP,EAAI0I,OAAO44C,EACb,CAoBIE,CAAoBxhD,EAAKkK,EAAMvU,EAAO+C,GAlB1C,SAA0BsH,EAAKkK,EAAMvU,EAAO+C,GAC1C,MAAM,SAACsiB,EAAA,QAAUhqB,GAAWkZ,EACtBu3C,EAAgBN,GAAkBj3C,GAExC,IAAK,MAAMoQ,KAAWU,EACpB+kC,GAAS//C,EAAKhP,EAASspB,EAAQ1a,OAC/BI,EAAIgI,YACAy5C,EAAczhD,EAAKkK,EAAMoQ,EAAS,CAAC3kB,QAAOC,IAAKD,EAAQ+C,EAAQ,KACjEsH,EAAImI,YAENnI,EAAI0I,QAER,CAQIg5C,CAAiB1hD,EAAKkK,EAAMvU,EAAO+C,EAEvC,CAEe,MAAMipD,WAAoB/f,GAEvC1d,UAAY,OAKZA,gBAAkB,CAChBhI,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjB5T,YAAa,EACb0L,iBAAiB,EACjBL,uBAAwB,UACxBtL,MAAM,EACNqL,UAAU,EACV4sC,SAAS,EACTvsC,QAAS,GAMXgQ,qBAAuB,CACrBjlB,gBAAiB,kBACjBC,YAAa,eAIfglB,mBAAqB,CACnBjiB,aAAa,EACbE,WAAad,GAAkB,eAATA,GAAkC,SAATA,GAIjDpV,YAAYizB,GACV2Q,QAEAvjC,KAAK0mC,UAAW,EAChB1mC,KAAK0E,aAAUpT,EACf0O,KAAK+uB,YAASz9B,EACd0O,KAAKizB,WAAQ3hC,EACb0O,KAAK8qC,eAAYx5C,EACjB0O,KAAKi1D,WAAQ3jE,EACb0O,KAAKs1D,aAAUhkE,EACf0O,KAAKu1D,eAAYjkE,EACjB0O,KAAKymC,YAAa,EAClBzmC,KAAKw1D,gBAAiB,EACtBx1D,KAAKkvB,mBAAgB59B,EAEjBshC,GACF30B,OAAOmB,OAAOY,KAAM4yB,EAExB,CAEAsU,oBAAoBxJ,EAAW7pB,GAC7B,MAAMnP,EAAU1E,KAAK0E,QACrB,IAAKA,EAAQkjB,SAA8C,aAAnCljB,EAAQ8iB,0BAA2C9iB,EAAQyvD,UAAYn0D,KAAKw1D,eAAgB,CAClH,MAAMt/C,EAAOxR,EAAQ6iB,SAAWvnB,KAAKizB,MAAQjzB,KAAK8qC,UAClDzjB,GAA2BrnB,KAAKs1D,QAAS5wD,EAASg5B,EAAWxnB,EAAMrC,GACnE7T,KAAKw1D,gBAAiB,EAE1B,CAEIvpD,WAAOA,GACTjM,KAAKs1D,QAAUrpD,SACRjM,KAAKu1D,iBACLv1D,KAAKi1D,MACZj1D,KAAKw1D,gBAAiB,CACxB,CAEIvpD,aACF,OAAOjM,KAAKs1D,OACd,CAEI5mC,eACF,OAAO1uB,KAAKu1D,YAAcv1D,KAAKu1D,U7BlF5B,SAA0B33C,EAAMiR,GACrC,MAAM5iB,EAAS2R,EAAK3R,OACdsb,EAAW3J,EAAKlZ,QAAQ6iB,SACxBnb,EAAQH,EAAOpa,OAErB,IAAKua,EACH,MAAO,GAGT,MAAM8J,IAAS0H,EAAKqV,OACd,MAAC5pB,EAAA,IAAOC,GA3FhB,SAAyB2C,EAAQG,EAAO8J,EAAMqR,GAC5C,IAAIle,EAAQ,EACRC,EAAM8C,EAAQ,EAElB,GAAI8J,IAASqR,EAEX,KAAOle,EAAQ+C,IAAUH,EAAO5C,GAAOkc,MACrClc,IAKJ,KAAOA,EAAQ+C,GAASH,EAAO5C,GAAOkc,MACpClc,IAWF,IAPAA,GAAS+C,EAEL8J,IAEF5M,GAAOD,GAGFC,EAAMD,GAAS4C,EAAO3C,EAAM8C,GAAOmZ,MACxCjc,IAMF,OAFAA,GAAO8C,EAEA,CAAC/C,QAAOC,MACjB,CA2DuBmsD,CAAgBxpD,EAAQG,EAAO8J,EAAMqR,GAE1D,OACSqH,GAAchR,GADN,IAAb2J,EACyB,CAAC,CAACle,QAAOC,MAAK4M,SArD7C,SAAuBjK,EAAQ5C,EAAO3Z,EAAKwmB,GACzC,MAAM9J,EAAQH,EAAOpa,OACfs3B,EAAS,GACf,IAEI7f,EAFAe,EAAOhB,EACPse,EAAO1b,EAAO5C,GAGlB,IAAKC,EAAMD,EAAQ,EAAGC,GAAO5Z,IAAO4Z,EAAK,CACvC,MAAM0oB,EAAM/lB,EAAO3C,EAAM8C,GACrB4lB,EAAIzM,MAAQyM,EAAIE,KACbvK,EAAKpC,OACRrP,GAAO,EACPiT,EAAOvjB,KAAK,CAACyD,MAAOA,EAAQ+C,EAAO9C,KAAMA,EAAM,GAAK8C,EAAO8J,SAE3D7M,EAAQgB,EAAO2nB,EAAIE,KAAO5oB,EAAM,OAGlCe,EAAOf,EACHqe,EAAKpC,OACPlc,EAAQC,IAGZqe,EAAOqK,CACT,CAMA,OAJa,OAAT3nB,GACF8e,EAAOvjB,KAAK,CAACyD,MAAOA,EAAQ+C,EAAO9C,IAAKe,EAAO+B,EAAO8J,SAGjDiT,CACT,CA4B6BusC,CAAczpD,EAAQ5C,EAFrCC,EAAMD,EAAQC,EAAM8C,EAAQ9C,IACjBsU,EAAKktB,WAAuB,IAAVzhC,GAAeC,IAAQ8C,EAAQ,GAJrBH,EAAQ4iB,EAM7D,C6B+D+C8mC,CAAiB31D,KAAMA,KAAK0E,QAAQspB,SACjF,CAMAuoB,QACE,MAAM7nB,EAAW1uB,KAAK0uB,SAChBziB,EAASjM,KAAKiM,OACpB,OAAOyiB,EAAS78B,QAAUoa,EAAOyiB,EAAS,GAAGrlB,MAC/C,CAMAgB,OACE,MAAMqkB,EAAW1uB,KAAK0uB,SAChBziB,EAASjM,KAAKiM,OACdG,EAAQsiB,EAAS78B,OACvB,OAAOua,GAASH,EAAOyiB,EAAStiB,EAAQ,GAAG9C,IAC7C,CASAvI,YAAYub,EAAOvU,GACjB,MAAMrD,EAAU1E,KAAK0E,QACfxC,EAAQoa,EAAMvU,GACdkE,EAASjM,KAAKiM,OACdyiB,EAAWD,GAAezuB,KAAM,CAAC+H,WAAUsB,MAAOnH,EAAOoH,IAAKpH,IAEpE,IAAKwsB,EAAS78B,OACZ,OAGF,MAAMs3B,EAAS,GACTysC,EAvKV,SAAiClxD,GAC/B,OAAIA,EAAQyvD,QACH9nC,GAGL3nB,EAAQkjB,SAA8C,aAAnCljB,EAAQ8iB,uBACtB8E,GAGFF,EACT,CA6JyBypC,CAAwBnxD,GAC7C,IAAIxS,EAAG2R,EACP,IAAK3R,EAAI,EAAG2R,EAAO6qB,EAAS78B,OAAQK,EAAI2R,IAAQ3R,EAAG,CACjD,MAAM,MAACmX,EAAA,IAAOC,GAAOolB,EAASx8B,GACxBa,EAAKkZ,EAAO5C,GACZrW,EAAKiZ,EAAO3C,GAClB,GAAIvW,IAAOC,EAAI,CACbm2B,EAAOvjB,KAAK7S,GACZ,SAEF,MACM+iE,EAAeF,EAAa7iE,EAAIC,EAD5BvD,KAAK2X,KAAKlF,EAAQnP,EAAGgV,KAAc/U,EAAG+U,GAAYhV,EAAGgV,KAClBrD,EAAQyvD,SACrD2B,EAAa/tD,GAAYuU,EAAMvU,GAC/BohB,EAAOvjB,KAAKkwD,EACd,CACA,OAAyB,IAAlB3sC,EAAOt3B,OAAes3B,EAAO,GAAKA,CAC3C,CAgBA8qC,YAAYvgD,EAAKsa,EAASigB,GAExB,OADsB4mB,GAAkB70D,KACjCm1D,CAAczhD,EAAK1T,KAAMguB,EAASigB,EAC3C,CASA+mB,KAAKthD,EAAKrK,EAAO+C,GACf,MAAMsiB,EAAW1uB,KAAK0uB,SAChBymC,EAAgBN,GAAkB70D,MACxC,IAAIkW,EAAOlW,KAAKizB,MAEhB5pB,EAAQA,GAAS,EACjB+C,EAAQA,GAAUpM,KAAKiM,OAAOpa,OAASwX,EAEvC,IAAK,MAAM2kB,KAAWU,EACpBxY,GAAQi/C,EAAczhD,EAAK1T,KAAMguB,EAAS,CAAC3kB,QAAOC,IAAKD,EAAQ+C,EAAQ,IAEzE,QAAS8J,CACX,CASAib,KAAKzd,EAAKgqB,EAAWr0B,EAAO+C,GAC1B,MAAM1H,EAAU1E,KAAK0E,SAAW,CAAC,GAClB1E,KAAKiM,QAAU,IAEnBpa,QAAU6S,EAAQyX,cAC3BzI,EAAImG,OAEJsX,GAAKzd,EAAK1T,KAAMqJ,EAAO+C,GAEvBsH,EAAIuG,WAGFja,KAAK0mC,WAEP1mC,KAAKw1D,gBAAiB,EACtBx1D,KAAKi1D,WAAQ3jE,EAEjB,ECjbF,SAASykE,GAAQ9pC,EAAkB7C,EAAa5c,EAAiB8/B,GAC/D,MAAM5nC,EAAUunB,EAAGvnB,SACZ,CAAC8H,GAAOtK,GAAS+pB,EAAGkhB,SAAS,CAAC3gC,GAAO8/B,GAE5C,OAAQ78C,KAAK2X,IAAIgiB,EAAMlnB,GAASwC,EAAQ4W,OAAS5W,EAAQsxD,SAC3D,CCDA,SAASC,GAAaC,EAAK5pB,GACzB,MAAM,EAACn5C,EAAC,EAAEmS,EAAC,KAAEs1B,EAAA,MAAM3iB,EAAA,OAAO2C,GAAmCs7C,EAAI/oB,SAAS,CAAC,IAAK,IAAK,OAAQ,QAAS,UAAWb,GAEjH,IAAIv1B,EAAMF,EAAOD,EAAKE,EAAQq/C,EAgB9B,OAdID,EAAIh0B,YACNi0B,EAAOv7C,EAAS,EAChB7D,EAAOtnB,KAAKE,IAAIwD,EAAGynC,GACnB/jB,EAAQpnB,KAAKC,IAAIyD,EAAGynC,GACpBhkB,EAAMtR,EAAI6wD,EACVr/C,EAASxR,EAAI6wD,IAEbA,EAAOl+C,EAAQ,EACflB,EAAO5jB,EAAIgjE,EACXt/C,EAAQ1jB,EAAIgjE,EACZv/C,EAAMnnB,KAAKE,IAAI2V,EAAGs1B,GAClB9jB,EAASrnB,KAAKC,IAAI4V,EAAGs1B,IAGhB,CAAC7jB,OAAMH,MAAKC,QAAOC,SAC5B,CAEA,SAASs/C,GAAY7wC,EAAMrjB,EAAOvS,EAAKD,GACrC,OAAO61B,EAAO,EAAI3b,GAAY1H,EAAOvS,EAAKD,EAC5C,CAkCA,SAAS2mE,GAAcH,GACrB,MAAM/+C,EAAS8+C,GAAaC,GACtBj+C,EAAQd,EAAON,MAAQM,EAAOJ,KAC9B6D,EAASzD,EAAOL,OAASK,EAAOP,IAChCkB,EApCR,SAA0Bo+C,EAAKI,EAAMC,GACnC,MAAMr0D,EAAQg0D,EAAIxxD,QAAQyX,YACpBoJ,EAAO2wC,EAAIj0B,cACX58B,EAAI4a,GAAO/d,GAEjB,MAAO,CACLlB,EAAGo1D,GAAY7wC,EAAK3O,IAAKvR,EAAEuR,IAAK,EAAG2/C,GACnCrlE,EAAGklE,GAAY7wC,EAAK1O,MAAOxR,EAAEwR,MAAO,EAAGy/C,GACvC9lE,EAAG4lE,GAAY7wC,EAAKzO,OAAQzR,EAAEyR,OAAQ,EAAGy/C,GACzChnE,EAAG6mE,GAAY7wC,EAAKxO,KAAM1R,EAAE0R,KAAM,EAAGu/C,GAEzC,CAyBiBE,CAAiBN,EAAKj+C,EAAQ,EAAG2C,EAAS,GACnDU,EAxBR,SAA2B46C,EAAKI,EAAMC,GACpC,MAAM,mBAACn0B,GAAsB8zB,EAAI/oB,SAAS,CAAC,uBACrCjrC,EAAQg0D,EAAIxxD,QAAQwsD,aACpB7rD,EAAI6a,GAAche,GAClBu0D,EAAOhnE,KAAKE,IAAI2mE,EAAMC,GACtBhxC,EAAO2wC,EAAIj0B,cAIXy0B,EAAet0B,GAAsB7/B,EAASL,GAEpD,MAAO,CACLid,QAASi3C,IAAaM,GAAgBnxC,EAAK3O,KAAO2O,EAAKxO,KAAM1R,EAAE8Z,QAAS,EAAGs3C,GAC3En3C,SAAU82C,IAAaM,GAAgBnxC,EAAK3O,KAAO2O,EAAK1O,MAAOxR,EAAEia,SAAU,EAAGm3C,GAC9Er3C,WAAYg3C,IAAaM,GAAgBnxC,EAAKzO,QAAUyO,EAAKxO,KAAM1R,EAAE+Z,WAAY,EAAGq3C,GACpFp3C,YAAa+2C,IAAaM,GAAgBnxC,EAAKzO,QAAUyO,EAAK1O,MAAOxR,EAAEga,YAAa,EAAGo3C,GAE3F,CAOiBE,CAAkBT,EAAKj+C,EAAQ,EAAG2C,EAAS,GAE1D,MAAO,CACLg8C,MAAO,CACLzjE,EAAGgkB,EAAOJ,KACVzR,EAAG6R,EAAOP,IACV5kB,EAAGimB,EACHzoB,EAAGorB,EACHU,UAEF+3C,MAAO,CACLlgE,EAAGgkB,EAAOJ,KAAOe,EAAOvoB,EACxB+V,EAAG6R,EAAOP,IAAMkB,EAAO9W,EACvBhP,EAAGimB,EAAQH,EAAOvoB,EAAIuoB,EAAO5mB,EAC7B1B,EAAGorB,EAAS9C,EAAO9W,EAAI8W,EAAOtnB,EAC9B8qB,OAAQ,CACN6D,QAAS1vB,KAAKC,IAAI,EAAG4rB,EAAO6D,QAAU1vB,KAAKC,IAAIooB,EAAO9W,EAAG8W,EAAOvoB,IAChE+vB,SAAU7vB,KAAKC,IAAI,EAAG4rB,EAAOgE,SAAW7vB,KAAKC,IAAIooB,EAAO9W,EAAG8W,EAAO5mB,IAClEkuB,WAAY3vB,KAAKC,IAAI,EAAG4rB,EAAO8D,WAAa3vB,KAAKC,IAAIooB,EAAOtnB,EAAGsnB,EAAOvoB,IACtE8vB,YAAa5vB,KAAKC,IAAI,EAAG4rB,EAAO+D,YAAc5vB,KAAKC,IAAIooB,EAAOtnB,EAAGsnB,EAAO5mB,MAIhF,CAEA,SAASs7C,GAAQ0pB,EAAK/iE,EAAGmS,EAAGgnC,GAC1B,MAAMuqB,EAAc,OAAN1jE,EACR2jE,EAAc,OAANxxD,EAER6R,EAAS++C,KADEW,GAASC,IACSb,GAAaC,EAAK5pB,GAErD,OAAOn1B,IACH0/C,GAAShtD,GAAW1W,EAAGgkB,EAAOJ,KAAMI,EAAON,UAC3CigD,GAASjtD,GAAWvE,EAAG6R,EAAOP,IAAKO,EAAOL,QAChD,CAWA,SAASigD,GAAkBrjD,EAAKuI,GAC9BvI,EAAIuI,KAAKA,EAAK9oB,EAAG8oB,EAAK3W,EAAG2W,EAAKjqB,EAAGiqB,EAAKzsB,EACxC,CAEA,SAASwnE,GAAY/6C,EAAMg7C,GAAsB,IAAdC,EAAUtlE,UAAAC,OAAA,QAAAP,IAAAM,UAAA,GAAAA,UAAA,MAC3C,MAAMuB,EAAI8oB,EAAK9oB,IAAM+jE,EAAQ/jE,GAAK8jE,EAAS,EACrC3xD,EAAI2W,EAAK3W,IAAM4xD,EAAQ5xD,GAAK2xD,EAAS,EACrCjlE,GAAKiqB,EAAK9oB,EAAI8oB,EAAKjqB,IAAMklE,EAAQ/jE,EAAI+jE,EAAQllE,EAAIilE,EAAS,GAAK9jE,EAC/D3D,GAAKysB,EAAK3W,EAAI2W,EAAKzsB,IAAM0nE,EAAQ5xD,EAAI4xD,EAAQ1nE,EAAIynE,EAAS,GAAK3xD,EACrE,MAAO,CACLnS,EAAG8oB,EAAK9oB,EAAIA,EACZmS,EAAG2W,EAAK3W,EAAIA,EACZtT,EAAGiqB,EAAKjqB,EAAIA,EACZxC,EAAGysB,EAAKzsB,EAAIA,EACZ8rB,OAAQW,EAAKX,OAEjB,iDH4He,cAAyBg6B,GAEtC1d,UAAY,MAEZA,gBAAkB,CAChBqO,YAAa,SACbrzB,YAAa,OACbid,WAAY,GACZC,iBAAkB,EAClBC,qBAAiBz+B,EACjB4/D,aAAc,EACd/0C,YAAa,EACblF,OAAQ,EACR+rB,QAAS,EACTp6B,WAAOtX,EACP+1C,UAAU,GAGZzP,qBAAuB,CACrBjlB,gBAAiB,mBAGnBilB,mBAAqB,CACnBjiB,aAAa,EACbE,WAAad,GAAkB,eAATA,GAGxBguB,cACA0B,SACA2uB,YACA5vB,YACAC,YACAquB,YACAttB,WAEA7kC,YAAYizB,GACV2Q,QAEAvjC,KAAK0E,aAAUpT,EACf0O,KAAK+iC,mBAAgBzxC,EACrB0O,KAAKwkC,gBAAalzC,EAClB0O,KAAKykC,cAAWnzC,EAChB0O,KAAKwjC,iBAAclyC,EACnB0O,KAAKyjC,iBAAcnyC,EACnB0O,KAAK8xD,YAAc,EACnB9xD,KAAKozD,YAAc,EAEfxgC,GACF30B,OAAOmB,OAAOY,KAAM4yB,EAExB,CAEA4Z,QAAQ2qB,EAAgBC,EAAgB9qB,GACtC,MAAMhwB,EAAQtc,KAAKmtC,SAAS,CAAC,IAAK,KAAMb,IAClC,MAAC1jC,EAAK,SAAEE,GAAYT,GAAkBiU,EAAO,CAACnpB,EAAGgkE,EAAQ7xD,EAAG8xD,KAC5D,WAAC5yB,EAAA,SAAYC,EAAA,YAAUjB,EAAW,YAAEC,EAAW,cAAEV,GAAiB/iC,KAAKmtC,SAAS,CACpF,aACA,WACA,cACA,cACA,iBACCb,GACG+qB,GAAWr3D,KAAK0E,QAAQs+B,QAAUhjC,KAAK0E,QAAQyX,aAAe,EAE9Dm7C,EADiBz0D,EAAekgC,EAAe0B,EAAWD,IACxBh+B,IAAO4C,GAAcR,EAAO47B,EAAYC,GAC1E8yB,EAAe1tD,GAAWf,EAAU06B,EAAc6zB,EAAS5zB,EAAc4zB,GAE/E,OAAQC,GAAiBC,CAC3B,CAEAtqB,eAAeX,GACb,MAAM,EAACn5C,EAAC,EAAEmS,EAAC,WAAEk/B,EAAA,SAAYC,EAAA,YAAUjB,EAAA,YAAaC,GAAezjC,KAAKmtC,SAAS,CAC3E,IACA,IACA,aACA,WACA,cACA,eACCb,IACG,OAACr1B,EAAA,QAAQ+rB,GAAWhjC,KAAK0E,QACzB8yD,GAAahzB,EAAaC,GAAY,EACtCgzB,GAAcj0B,EAAcC,EAAcT,EAAU/rB,GAAU,EACpE,MAAO,CACL9jB,EAAGA,EAAI1D,KAAKif,IAAI8oD,GAAaC,EAC7BnyD,EAAGA,EAAI7V,KAAKge,IAAI+pD,GAAaC,EAEjC,CAEAliB,gBAAgBjJ,GACd,OAAOtsC,KAAKitC,eAAeX,EAC7B,CAEAnb,KAAKzd,GACH,MAAM,QAAChP,EAAO,cAAEq+B,GAAiB/iC,KAC3BiX,GAAUvS,EAAQuS,QAAU,GAAK,EACjC+rB,GAAWt+B,EAAQs+B,SAAW,GAAK,EACnCqE,EAAW3iC,EAAQ2iC,SAIzB,GAHArnC,KAAK8xD,YAAuC,UAAxBptD,EAAQuhC,YAA2B,IAAO,EAC9DjmC,KAAKozD,YAAcrwB,EAAgBv8B,GAAM/W,KAAKgY,MAAMs7B,EAAgBv8B,IAAO,EAErD,IAAlBu8B,GAAuB/iC,KAAKwjC,YAAc,GAAKxjC,KAAKyjC,YAAc,EACpE,OAGF/vB,EAAImG,OAEJ,MAAM29C,GAAax3D,KAAKwkC,WAAaxkC,KAAKykC,UAAY,EACtD/wB,EAAI8H,UAAU/rB,KAAKif,IAAI8oD,GAAavgD,EAAQxnB,KAAKge,IAAI+pD,GAAavgD,GAClE,MACMygD,EAAezgD,GADT,EAAIxnB,KAAKge,IAAIhe,KAAKE,IAAI4W,GAAIw8B,GAAiB,KAGvDrvB,EAAI8J,UAAY9Y,EAAQiO,gBACxBe,EAAI2K,YAAc3Z,EAAQkO,YA9L9B,SACEc,EACAkV,EACA3R,EACA+rB,EACAqE,GAEA,MAAM,YAAC+rB,EAAW,WAAE5uB,EAAA,cAAYzB,GAAiBna,EACjD,IAAI6b,EAAW7b,EAAQ6b,SACvB,GAAI2uB,EAAa,CACfvB,GAAQn+C,EAAKkV,EAAS3R,EAAQ+rB,EAASyB,EAAU4C,GACjD,IAAK,IAAIn1C,EAAI,EAAGA,EAAIkhE,IAAelhE,EACjCwhB,EAAIwI,OAEDtU,MAAMm7B,KACT0B,EAAWD,GAAczB,EAAgBv8B,IAAOA,KAGpDqrD,GAAQn+C,EAAKkV,EAAS3R,EAAQ+rB,EAASyB,EAAU4C,GACjD3zB,EAAIwI,MAEN,CA2KIy7C,CAAQjkD,EAAK1T,KAAM03D,EAAc10B,EAASqE,GAC1CyZ,GAAWptC,EAAK1T,KAAM03D,EAAc10B,EAASqE,GAE7C3zB,EAAIuG,SACN,cGhPa,cAAyBq7B,GAEtC1d,UAAY,MAKZA,gBAAkB,CAChBqK,cAAe,QACf9lB,YAAa,EACb+0C,aAAc,EACdxuB,cAAe,OACftnB,gBAAY9pB,GAMdsmC,qBAAuB,CACrBjlB,gBAAiB,kBACjBC,YAAa,eAGfjT,YAAYizB,GACV2Q,QAEAvjC,KAAK0E,aAAUpT,EACf0O,KAAKkiC,gBAAa5wC,EAClB0O,KAAK46B,UAAOtpC,EACZ0O,KAAKiY,WAAQ3mB,EACb0O,KAAK4a,YAAStpB,EACd0O,KAAK0iC,mBAAgBpxC,EAEjBshC,GACF30B,OAAOmB,OAAOY,KAAM4yB,EAExB,CAEAzB,KAAKzd,GACH,MAAM,cAACgvB,EAAeh+B,SAAS,YAACkO,EAAA,gBAAaD,IAAoB3S,MAC3D,MAACqzD,EAAK,MAAEuD,GAASP,GAAcr2D,MAC/B43D,GApESt8C,EAoEes7C,EAAMt7C,QAnExB6D,SAAW7D,EAAOgE,UAAYhE,EAAO8D,YAAc9D,EAAO+D,YAmExBH,GAAqB63C,GApEvE,IAAmBz7C,EAsEf5H,EAAImG,OAEA+8C,EAAM5kE,IAAMqhE,EAAMrhE,GAAK4kE,EAAMpnE,IAAM6jE,EAAM7jE,IAC3CkkB,EAAIgI,YACJk8C,EAAYlkD,EAAKsjD,GAAYJ,EAAOl0B,EAAe2wB,IACnD3/C,EAAI0D,OACJwgD,EAAYlkD,EAAKsjD,GAAY3D,GAAQ3wB,EAAek0B,IACpDljD,EAAI8J,UAAY5K,EAChBc,EAAIwI,KAAK,YAGXxI,EAAIgI,YACJk8C,EAAYlkD,EAAKsjD,GAAY3D,EAAO3wB,IACpChvB,EAAI8J,UAAY7K,EAChBe,EAAIwI,OAEJxI,EAAIuG,SACN,CAEAuyB,QAAQqrB,EAAQC,EAAQxrB,GACtB,OAAOE,GAAQxsC,KAAM63D,EAAQC,EAAQxrB,EACvC,CAEAyrB,SAASF,EAAQvrB,GACf,OAAOE,GAAQxsC,KAAM63D,EAAQ,KAAMvrB,EACrC,CAEA0rB,SAASF,EAAQxrB,GACf,OAAOE,GAAQxsC,KAAM,KAAM83D,EAAQxrB,EACrC,CAEAW,eAAeX,GACb,MAAM,EAACn5C,EAAA,EAAGmS,EAAA,KAAGs1B,EAAI,WAAEsH,GAAuCliC,KAAKmtC,SAAS,CAAC,IAAK,IAAK,OAAQ,cAAeb,GAC1G,MAAO,CACLn5C,EAAG+uC,GAAc/uC,EAAIynC,GAAQ,EAAIznC,EACjCmS,EAAG48B,EAAa58B,GAAKA,EAAIs1B,GAAQ,EAErC,CAEAoR,SAASx/B,GACP,MAAgB,MAATA,EAAexM,KAAKiY,MAAQ,EAAIjY,KAAK4a,OAAS,CACvD,+BD7Ma,cAA2B06B,GAExC1d,UAAY,QAEZzS,OACAI,KACA2M,KAKA0F,gBAAkB,CAChBzb,YAAa,EACb65C,UAAW,EACX9vB,iBAAkB,EAClB+xB,YAAa,EACb78C,WAAY,SACZE,OAAQ,EACRD,SAAU,GAMZuc,qBAAuB,CACrBjlB,gBAAiB,kBACjBC,YAAa,eAGfjT,YAAYizB,GACV2Q,QAEAvjC,KAAK0E,aAAUpT,EACf0O,KAAKmlB,YAAS7zB,EACd0O,KAAKulB,UAAOj0B,EACZ0O,KAAKkyB,UAAO5gC,EAERshC,GACF30B,OAAOmB,OAAOY,KAAM4yB,EAExB,CAEA4Z,QAAQqrB,EAAgBC,EAAgBxrB,GACtC,MAAM5nC,EAAU1E,KAAK0E,SACf,EAACvR,EAAA,EAAGmS,GAAKtF,KAAKmtC,SAAS,CAAC,IAAK,KAAMb,GACzC,OAAS78C,KAAKoP,IAAIg5D,EAAS1kE,EAAG,GAAK1D,KAAKoP,IAAIi5D,EAASxyD,EAAG,GAAM7V,KAAKoP,IAAI6F,EAAQsxD,UAAYtxD,EAAQ4W,OAAQ,EAC7G,CAEAy8C,SAASF,EAAgBvrB,GACvB,OAAOypB,GAAQ/1D,KAAM63D,EAAQ,IAAKvrB,EACpC,CAEA0rB,SAASF,EAAgBxrB,GACvB,OAAOypB,GAAQ/1D,KAAM83D,EAAQ,IAAKxrB,EACpC,CAEAW,eAAeX,GACb,MAAM,EAACn5C,EAAA,EAAGmS,GAAKtF,KAAKmtC,SAAS,CAAC,IAAK,KAAMb,GACzC,MAAO,CAACn5C,IAAGmS,IACb,CAEAc,KAAK1B,GAEH,IAAI4W,GADJ5W,EAAUA,GAAW1E,KAAK0E,SAAW,CAAC,GACjB4W,QAAU,EAC/BA,EAAS7rB,KAAKC,IAAI4rB,EAAQA,GAAU5W,EAAQuzD,aAAe,GAE3D,OAAgC,GAAxB38C,GADYA,GAAU5W,EAAQyX,aAAe,GAEvD,CAEAgV,KAAKzd,EAA+B6I,GAClC,MAAM7X,EAAU1E,KAAK0E,QAEjB1E,KAAKulB,MAAQ7gB,EAAQ4W,OAAS,KAAQe,GAAerc,KAAMuc,EAAMvc,KAAKoG,KAAK1B,GAAW,KAI1FgP,EAAI2K,YAAc3Z,EAAQkO,YAC1Bc,EAAI6D,UAAY7S,EAAQyX,YACxBzI,EAAI8J,UAAY9Y,EAAQiO,gBACxBkI,GAAUnH,EAAKhP,EAAS1E,KAAK7M,EAAG6M,KAAKsF,GACvC,CAEA0mC,WACE,MAAMtnC,EAAU1E,KAAK0E,SAAW,CAAC,EAEjC,OAAOA,EAAQ4W,OAAS5W,EAAQsxD,SAClC,KE5FF,MAAMkC,GAAgB,CACpB,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,sBAIIC,GAAoCD,GAAc1lE,KAAIgO,GAASA,EAAMlC,QAAQ,OAAQ,SAASA,QAAQ,IAAK,YAEjH,SAAS85D,GAAelmE,GACtB,OAAOgmE,GAAchmE,EAAIgmE,GAAcrmE,OACzC,CAEA,SAASwmE,GAAmBnmE,GAC1B,OAAOimE,GAAkBjmE,EAAIimE,GAAkBtmE,OACjD,CAqBA,SAASymE,GAAannD,GACpB,IAAIjf,EAAI,EAER,MAAO,CAAC+mC,EAAuBj1B,KAC7B,MAAMyyB,EAAatlB,EAAM6oB,eAAeh2B,GAAcyyB,WAElDA,aAAsBkM,GACxBzwC,EAnBN,SAAiC+mC,EAAuB/mC,GAGtD,OAFA+mC,EAAQtmB,gBAAkBsmB,EAAQ9f,KAAK3mB,KAAI,IAAM4lE,GAAelmE,OAEzDA,CACT,CAeUqmE,CAAwBt/B,EAAS/mC,GAC5BukC,aAAsB0Q,GAC/Bj1C,EAfN,SAAkC+mC,EAAuB/mC,GAGvD,OAFA+mC,EAAQtmB,gBAAkBsmB,EAAQ9f,KAAK3mB,KAAI,IAAM6lE,GAAmBnmE,OAE7DA,CACT,CAWUsmE,CAAyBv/B,EAAS/mC,GAC7BukC,IACTvkC,EA9BN,SAAgC+mC,EAAuB/mC,GAIrD,OAHA+mC,EAAQrmB,YAAcwlD,GAAelmE,GACrC+mC,EAAQtmB,gBAAkB0lD,GAAmBnmE,KAEpCA,CACX,CAyBUumE,CAAuBx/B,EAAS/mC,IAG1C,CAEA,SAASwmE,GACPxmD,GAEA,IAAIvgB,EAEJ,IAAKA,KAAKugB,EACR,GAAIA,EAAYvgB,GAAGihB,aAAeV,EAAYvgB,GAAGghB,gBAC/C,OAAO,EAIX,OAAO,CACT,CAQA,IAAAgmD,GAAe,CACb32D,GAAI,SAEJ0T,SAAU,CACR0gC,SAAS,EACTwiB,eAAe,GAGjBznB,aAAahgC,EAAc0nD,EAAOn0D,GAChC,IAAKA,EAAQ0xC,QACX,OAGF,MACEj9B,MAAM,SAACtG,GACPnO,QAASo0D,GACP3nD,EAAM8iB,QACJ,SAAC/gB,GAAY4lD,EAEnB,IAAKp0D,EAAQk0D,gBAAkBF,GAA0B7lD,KAxB3D0yC,EAwBiGuT,KAtB3EvT,EAAW3yC,aAAe2yC,EAAW5yC,kBAsBwDO,GAAYwlD,GAA0BxlD,IACrJ,OA1BN,IACEqyC,EA4BE,MAAMwT,EAAYT,GAAannD,GAE/B0B,EAAS9H,QAAQguD,EACnB,GCwCF,SAASC,GAAsB//B,GAC7B,GAAIA,EAAQwN,WAAY,CACtB,MAAMttB,EAAO8f,EAAQjB,aACdiB,EAAQwN,kBACRxN,EAAQjB,MACf/5B,OAAO08B,eAAe1B,EAAS,OAAQ,CACrChV,cAAc,EACd1O,YAAY,EACZD,UAAU,EACVpT,MAAOiX,IAGb,CAEA,SAAS8/C,GAAmB9nD,GAC1BA,EAAMgI,KAAKtG,SAAS9H,SAASkuB,IAC3B+/B,GAAsB//B,EAAA,GAE1B,CAuBA,IAAAigC,GAAe,CACbl3D,GAAI,aAEJ0T,SAAU,CACRyjD,UAAW,UACX/iB,SAAS,GAGXgjB,qBAAsBA,CAACjoD,EAAO/N,EAAMsB,KAClC,IAAKA,EAAQ0xC,QAGX,YADA6iB,GAAmB9nD,GAKrB,MAAMu9B,EAAiBv9B,EAAM8G,MAE7B9G,EAAMgI,KAAKtG,SAAS9H,SAAQ,CAACkuB,EAASj1B,KACpC,MAAM,MAACg0B,EAAA,UAAOnkB,GAAaolB,EACrBjtB,EAAOmF,EAAM6oB,eAAeh2B,GAC5BmV,EAAO6e,GAASiB,EAAQ9f,KAE9B,GAAsD,MAAlDsH,GAAQ,CAAC5M,EAAW1C,EAAMzM,QAAQmP,YAEpC,OAGF,IAAK7H,EAAKyqB,WAAW6B,mBAEnB,OAGF,MAAM+gC,EAAQloD,EAAMsD,OAAOzI,EAAKqtB,SAChC,GAAmB,WAAfggC,EAAMz5D,MAAoC,SAAfy5D,EAAMz5D,KAEnC,OAGF,GAAIuR,EAAMzM,QAAQ2P,QAEhB,OAGF,IAAI,MAAChL,EAAK,MAAE+C,GAjElB,SAAmDJ,EAAMC,GACvD,MAAME,EAAaF,EAAOpa,OAE1B,IACIua,EADA/C,EAAQ,EAGZ,MAAM,OAACiD,GAAUN,GACX,IAACrc,EAAG,IAAED,EAAG,WAAE+c,EAAU,WAAEC,GAAcJ,EAAOK,gBAWlD,OATIF,IACFpD,EAAQO,GAAYQ,GAAa6B,EAAQK,EAAOE,KAAM7c,GAAKwa,GAAI,EAAGgC,EAAa,IAG/EC,EADEM,EACM9C,GAAYQ,GAAa6B,EAAQK,EAAOE,KAAM9c,GAAKwa,GAAK,EAAGb,EAAO8C,GAAc9C,EAEhF8C,EAAa9C,EAGhB,CAACA,QAAO+C,QACjB,CA8C2BktD,CAA0CttD,EAAMmN,GAErE,GAAI/M,IADc1H,EAAQ60D,WAAa,EAAI7qB,GAIzC,YADAsqB,GAAsB//B,GAuBxB,IAAIugC,EACJ,OApBIv3D,EAAc+1B,KAIhBiB,EAAQjB,MAAQ7e,SACT8f,EAAQ9f,KACflb,OAAO08B,eAAe1B,EAAS,OAAQ,CACrChV,cAAc,EACd1O,YAAY,EACZ9E,IAAK,WACH,OAAOzQ,KAAKymC,UACd,EACAv7B,IAAK,SAASxa,GACZsP,KAAKg4B,MAAQtnC,CACf,KAMIgU,EAAQy0D,WAChB,IAAK,OACHK,EA5QR,SAAwBrgD,EAAM9P,EAAO+C,EAAOsiC,EAAgBhqC,GAS1D,MAAM+0D,EAAU/0D,EAAQ+0D,SAAW/qB,EAEnC,GAAI+qB,GAAWrtD,EACb,OAAO+M,EAAK7W,MAAM+G,EAAOA,EAAQ+C,GAGnC,MAAMotD,EAAY,GAEZE,GAAettD,EAAQ,IAAMqtD,EAAU,GAC7C,IAAIE,EAAe,EACnB,MAAMC,EAAWvwD,EAAQ+C,EAAQ,EAEjC,IACIla,EAAG2nE,EAAcC,EAASv9C,EAAMw9C,EADhCxpE,EAAI8Y,EAKR,IAFAmwD,EAAUG,KAAkBxgD,EAAK5oB,GAE5B2B,EAAI,EAAGA,EAAIunE,EAAU,EAAGvnE,IAAK,CAChC,IAEIiM,EAFAq2D,EAAO,EACPwF,EAAO,EAIX,MAAMC,EAAgBxqE,KAAKgY,OAAOvV,EAAI,GAAKwnE,GAAe,EAAIrwD,EACxD6wD,EAAczqE,KAAKE,IAAIF,KAAKgY,OAAOvV,EAAI,GAAKwnE,GAAe,EAAGttD,GAAS/C,EACvE8wD,EAAiBD,EAAcD,EAErC,IAAK97D,EAAI87D,EAAe97D,EAAI+7D,EAAa/7D,IACvCq2D,GAAQr7C,EAAKhb,GAAGhL,EAChB6mE,GAAQ7gD,EAAKhb,GAAGmH,EAGlBkvD,GAAQ2F,EACRH,GAAQG,EAGR,MAAMC,EAAY3qE,KAAKgY,MAAMvV,EAAIwnE,GAAe,EAAIrwD,EAC9CgxD,EAAU5qE,KAAKE,IAAIF,KAAKgY,OAAOvV,EAAI,GAAKwnE,GAAe,EAAGttD,GAAS/C,GAClElW,EAAGmnE,EAASh1D,EAAGi1D,GAAWphD,EAAK5oB,GAStC,IAFAupE,EAAUv9C,GAAQ,EAEbpe,EAAIi8D,EAAWj8D,EAAIk8D,EAASl8D,IAC/Boe,EAAO,GAAM9sB,KAAK2X,KACfkzD,EAAU9F,IAASr7C,EAAKhb,GAAGmH,EAAIi1D,IAC/BD,EAAUnhD,EAAKhb,GAAGhL,IAAM6mE,EAAOO,IAG9Bh+C,EAAOu9C,IACTA,EAAUv9C,EACVs9C,EAAe1gD,EAAKhb,GACpB47D,EAAQ57D,GAIZq7D,EAAUG,KAAkBE,EAC5BtpE,EAAIwpE,CACN,CAKA,OAFAP,EAAUG,KAAkBxgD,EAAKygD,GAE1BJ,CACT,CA+LoBgB,CAAerhD,EAAM9P,EAAO+C,EAAOsiC,EAAgBhqC,GAC/D,MACF,IAAK,UACH80D,EAhMR,SAA0BrgD,EAAM9P,EAAO+C,EAAOsiC,GAC5C,IAEIx8C,EAAGoqB,EAAOnpB,EAAGmS,EAAGgvD,EAAOmG,EAAUC,EAAUC,EAAYx1B,EAAMF,EAF7DuvB,EAAO,EACPC,EAAS,EAEb,MAAM+E,EAAY,GACZI,EAAWvwD,EAAQ+C,EAAQ,EAE3BwuD,EAAOzhD,EAAK9P,GAAOlW,EAEnB0nE,EADO1hD,EAAKygD,GAAUzmE,EACVynE,EAElB,IAAK1oE,EAAImX,EAAOnX,EAAImX,EAAQ+C,IAASla,EAAG,CACtCoqB,EAAQnD,EAAKjnB,GACbiB,GAAKmpB,EAAMnpB,EAAIynE,GAAQC,EAAKnsB,EAC5BppC,EAAIgX,EAAMhX,EACV,MAAMsvD,EAAa,EAAJzhE,EAEf,GAAIyhE,IAAWN,EAEThvD,EAAI6/B,GACNA,EAAO7/B,EACPm1D,EAAWvoE,GACFoT,EAAI2/B,IACbA,EAAO3/B,EACPo1D,EAAWxoE,GAIbsiE,GAAQC,EAASD,EAAOl4C,EAAMnpB,KAAOshE,MAChC,CAEL,MAAMqG,EAAY5oE,EAAI,EAEtB,IAAK+P,EAAcw4D,KAAcx4D,EAAcy4D,GAAW,CAKxD,MAAMK,EAAqBtrE,KAAKE,IAAI8qE,EAAUC,GACxCM,EAAqBvrE,KAAKC,IAAI+qE,EAAUC,GAE1CK,IAAuBJ,GAAcI,IAAuBD,GAC9DtB,EAAU5zD,KAAK,IACVuT,EAAK4hD,GACR5nE,EAAGqhE,IAGHwG,IAAuBL,GAAcK,IAAuBF,GAC9DtB,EAAU5zD,KAAK,IACVuT,EAAK6hD,GACR7nE,EAAGqhE,IAOLtiE,EAAI,GAAK4oE,IAAcH,GAEzBnB,EAAU5zD,KAAKuT,EAAK2hD,IAItBtB,EAAU5zD,KAAK0W,GACfg4C,EAAQM,EACRH,EAAS,EACTtvB,EAAOF,EAAO3/B,EACdm1D,EAAWC,EAAWC,EAAazoE,EAEvC,CAEA,OAAOsnE,CACT,CAwHoByB,CAAiB9hD,EAAM9P,EAAO+C,EAAOsiC,GACjD,MACF,QACE,MAAM,IAAItrB,MAAO,qCAAoC1e,EAAQy0D,cAG/DlgC,EAAQwN,WAAa+yB,CAAA,GACrB,EAGJnK,QAAQl+C,GACN8nD,GAAmB9nD,EACrB,GC3OK,SAAS+pD,GAAWnzD,EAAUwuC,EAAOlsC,EAAM6L,GAChD,GAAIA,EACF,OAEF,IAAI7M,EAAQktC,EAAMxuC,GACduB,EAAMe,EAAKtC,GAMf,MAJiB,UAAbA,IACFsB,EAAQF,GAAgBE,GACxBC,EAAMH,GAAgBG,IAEjB,CAACvB,WAAUsB,QAAOC,MAC3B,CAqBO,SAAS6xD,GAAgB9xD,EAAOC,EAAK2C,GAC1C,KAAM3C,EAAMD,EAAOC,IAAO,CACxB,MAAMgT,EAAQrQ,EAAO3C,GACrB,IAAK1B,MAAM0U,EAAMnpB,KAAOyU,MAAM0U,EAAMhX,GAClC,KAEJ,CACA,OAAOgE,CACT,CAEA,SAAS8xD,GAAS7qE,EAAGC,EAAGwvB,EAAM7c,GAC5B,OAAI5S,GAAKC,EACA2S,EAAG5S,EAAEyvB,GAAOxvB,EAAEwvB,IAEhBzvB,EAAIA,EAAEyvB,GAAQxvB,EAAIA,EAAEwvB,GAAQ,CACrC,CCnFO,SAASq7C,GAAoBC,EAAU19C,GAC5C,IAAI3R,EAAS,GACTgnB,GAAQ,EAUZ,OARI1gC,EAAQ+oE,IACVroC,GAAQ,EAERhnB,EAASqvD,GAETrvD,EDwCG,SAA6BqvD,EAAU19C,GAC5C,MAAM,EAACzqB,EAAI,KAAI,EAAEmS,EAAI,MAAQg2D,GAAY,CAAC,EACpCC,EAAa39C,EAAK3R,OAClBA,EAAS,GAaf,OAZA2R,EAAK8Q,SAAS3jB,SAAQywD,IAAkB,IAAjB,MAACnyD,EAAK,IAAEC,GAAIkyD,EACjClyD,EAAM6xD,GAAgB9xD,EAAOC,EAAKiyD,GAClC,MAAMhlB,EAAQglB,EAAWlyD,GACnBgB,EAAOkxD,EAAWjyD,GACd,OAANhE,GACF2G,EAAOrG,KAAK,CAACzS,EAAGojD,EAAMpjD,EAAGmS,MACzB2G,EAAOrG,KAAK,CAACzS,EAAGkX,EAAKlX,EAAGmS,OACT,OAANnS,IACT8Y,EAAOrG,KAAK,CAACzS,IAAGmS,EAAGixC,EAAMjxC,IACzB2G,EAAOrG,KAAK,CAACzS,IAAGmS,EAAG+E,EAAK/E,QAGrB2G,CACT,CCzDawvD,CAAoBH,EAAU19C,GAGlC3R,EAAOpa,OAAS,IAAIwjE,GAAY,CACrCppD,SACAvH,QAAS,CAACkjB,QAAS,GACnBqL,QACA6X,UAAW7X,IACR,IACP,CAEO,SAASyoC,GAAiBx3D,GAC/B,OAAOA,IAA0B,IAAhBA,EAAOgY,IAC1B,CC5BO,SAASy/C,GAAe72D,EAASb,EAAO23D,GAE7C,IAAI1/C,EADWpX,EAAQb,GACLiY,KAClB,MAAM2/C,EAAU,CAAC53D,GACjB,IAAIE,EAEJ,IAAKy3D,EACH,OAAO1/C,EAGT,MAAgB,IAATA,IAA6C,IAA3B2/C,EAAQr3D,QAAQ0X,IAAc,CACrD,IAAK1Z,EAAS0Z,GACZ,OAAOA,EAIT,GADA/X,EAASW,EAAQoX,IACZ/X,EACH,OAAO,EAGT,GAAIA,EAAOqS,QACT,OAAO0F,EAGT2/C,EAAQj2D,KAAKsW,GACbA,EAAO/X,EAAO+X,IAChB,CAEA,OAAO,CACT,CAOO,SAAS4/C,GAAYl+C,EAAM3Z,EAAOmI,GAEvC,MAAM8P,EAwER,SAAyB0B,GACvB,MAAMlZ,EAAUkZ,EAAKlZ,QACfq3D,EAAar3D,EAAQwX,KAC3B,IAAIA,EAAOrZ,EAAek5D,GAAcA,EAAW53D,OAAQ43D,QAE9CzqE,IAAT4qB,IACFA,IAASxX,EAAQiO,iBAGnB,IAAa,IAATuJ,GAA2B,OAATA,EACpB,OAAO,EAGT,IAAa,IAATA,EACF,MAAO,SAET,OAAOA,CACT,CAzFe8/C,CAAgBp+C,GAE7B,GAAIrb,EAAS2Z,GACX,OAAOtU,MAAMsU,EAAKha,QAAiBga,EAGrC,IAAI/X,EAASlB,WAAWiZ,GAExB,OAAI1Z,EAAS2B,IAAW1U,KAAKgY,MAAMtD,KAAYA,EAOjD,SAA2B83D,EAASh4D,EAAOE,EAAQiI,GACjC,MAAZ6vD,GAA+B,MAAZA,IACrB93D,EAASF,EAAQE,GAGnB,GAAIA,IAAWF,GAASE,EAAS,GAAKA,GAAUiI,EAC9C,OAAO,EAGT,OAAOjI,CACT,CAhBW+3D,CAAkBhgD,EAAK,GAAIjY,EAAOE,EAAQiI,GAG5C,CAAC,SAAU,QAAS,MAAO,QAAS,SAAS5H,QAAQ0X,IAAS,GAAKA,CAC5E,CCHA,SAASigD,GAAelwD,EAAQmwD,EAAaC,GAC3C,MAAMC,EAAY,GAClB,IAAK,IAAIn+D,EAAI,EAAGA,EAAIk+D,EAAWxqE,OAAQsM,IAAK,CAC1C,MAAMyf,EAAOy+C,EAAWl+D,IAClB,MAACo4C,EAAK,KAAElsC,EAAI,MAAEiS,GAASigD,GAAU3+C,EAAMw+C,EAAa,KAE1D,MAAK9/C,GAAUi6B,GAASlsC,GAGxB,GAAIksC,EAGF+lB,EAAUE,QAAQlgD,QAGlB,GADArQ,EAAOrG,KAAK0W,IACPjS,EAEH,KAGN,CACA4B,EAAOrG,QAAQ02D,EACjB,CAQA,SAASC,GAAU3+C,EAAMw+C,EAAar0D,GACpC,MAAMuU,EAAQsB,EAAK7c,YAAYq7D,EAAar0D,GAC5C,IAAKuU,EACH,MAAO,CAAC,EAGV,MAAMmgD,EAAangD,EAAMvU,GACnB2mB,EAAW9Q,EAAK8Q,SAChB6sC,EAAa39C,EAAK3R,OACxB,IAAIsqC,GAAQ,EACRlsC,GAAO,EACX,IAAK,IAAInY,EAAI,EAAGA,EAAIw8B,EAAS78B,OAAQK,IAAK,CACxC,MAAM87B,EAAUU,EAASx8B,GACnBwqE,EAAanB,EAAWvtC,EAAQ3kB,OAAOtB,GACvC40D,EAAYpB,EAAWvtC,EAAQ1kB,KAAKvB,GAC1C,GAAI8B,GAAW4yD,EAAYC,EAAYC,GAAY,CACjDpmB,EAAQkmB,IAAeC,EACvBryD,EAAOoyD,IAAeE,EACtB,MAEJ,CACA,MAAO,CAACpmB,QAAOlsC,OAAMiS,QACvB,CC1GO,MAAMsgD,GACXj9D,YAAY2d,GACVtd,KAAK7M,EAAImqB,EAAKnqB,EACd6M,KAAKsF,EAAIgY,EAAKhY,EACdtF,KAAKsb,OAASgC,EAAKhC,MACrB,CAEA24C,YAAYvgD,EAAKyD,EAAQmG,GACvB,MAAM,EAACnqB,EAAA,EAAGmS,EAAA,OAAGgW,GAAUtb,KAGvB,OAFAmX,EAASA,GAAU,CAAC9N,MAAO,EAAGC,IAAK9C,IACnCkN,EAAIkI,IAAIzoB,EAAGmS,EAAGgW,EAAQnE,EAAO7N,IAAK6N,EAAO9N,OAAO,IACxCiU,EAAKnG,MACf,CAEApW,YAAYub,GACV,MAAM,EAACnpB,EAAA,EAAGmS,EAAA,OAAGgW,GAAUtb,KACjB4I,EAAQ0T,EAAM1T,MACpB,MAAO,CACLzV,EAAGA,EAAI1D,KAAKif,IAAI9F,GAAS0S,EACzBhW,EAAGA,EAAI7V,KAAKge,IAAI7E,GAAS0S,EACzB1S,QAEJ,ECbK,SAAS+Y,GAAWzd,GACzB,MAAM,MAACiN,EAAK,KAAE+K,EAAA,KAAM0B,GAAQ1Z,EAE5B,GAAI1B,EAAS0Z,GACX,OAwBJ,SAAwB/K,EAAOlN,GAC7B,MAAM+H,EAAOmF,EAAM6oB,eAAe/1B,GAElC,OADgB+H,GAAQmF,EAAM2yB,iBAAiB7/B,GAC9B+H,EAAKitB,QAAU,IAClC,CA5BW4jC,CAAe1rD,EAAO+K,GAG/B,GAAa,UAATA,EACF,OFNG,SAAyBhY,GAC9B,MAAM,MAACsQ,EAAK,MAAEvQ,EAAA,KAAO2Z,GAAQ1Z,EACvB+H,EAAS,GACTyiB,EAAW9Q,EAAK8Q,SAChBouC,EAAel/C,EAAK3R,OACpBowD,EAiBR,SAAuB7nD,EAAOvQ,GAC5B,MAAM84D,EAAQ,GACRzjB,EAAQ9kC,EAAM+hB,wBAAwB,QAE5C,IAAK,IAAIrkC,EAAI,EAAGA,EAAIonD,EAAMznD,OAAQK,IAAK,CACrC,MAAM8Z,EAAOstC,EAAMpnD,GACnB,GAAI8Z,EAAK/H,QAAUA,EACjB,MAEG+H,EAAK4wB,QACRmgC,EAAMP,QAAQxwD,EAAKitB,QAEvB,CACA,OAAO8jC,CACT,CA/BqBC,CAAcxoD,EAAOvQ,GACxCo4D,EAAWz2D,KAAKy1D,GAAoB,CAACloE,EAAG,KAAMmS,EAAGkP,EAAMsC,QAAS8G,IAEhE,IAAK,IAAI1rB,EAAI,EAAGA,EAAIw8B,EAAS78B,OAAQK,IAAK,CACxC,MAAM87B,EAAUU,EAASx8B,GACzB,IAAK,IAAIiM,EAAI6vB,EAAQ3kB,MAAOlL,GAAK6vB,EAAQ1kB,IAAKnL,IAC5Cg+D,GAAelwD,EAAQ6wD,EAAa3+D,GAAIk+D,EAE5C,CACA,OAAO,IAAIhH,GAAY,CAACppD,SAAQvH,QAAS,CAAC,GAC5C,CETWu4D,CAAgB/4D,GAGzB,GAAa,UAATgY,EACF,OAAO,EAGT,MAAMo/C,EAmBR,SAAyBp3D,GAGvB,IAFcA,EAAOsQ,OAAS,CAAC,GAErBw2B,yBACR,OAsBJ,SAAiC9mC,GAC/B,MAAM,MAACsQ,EAAA,KAAO0H,GAAQhY,EAChBQ,EAAU8P,EAAM9P,QAChB7S,EAAS2iB,EAAMunB,YAAYlqC,OAC3BwX,EAAQ3E,EAAQjB,QAAU+Q,EAAM9kB,IAAM8kB,EAAM7kB,IAC5CuS,EHuBD,SAAyBga,EAAM1H,EAAO8sB,GAC3C,IAAIp/B,EAYJ,OATEA,EADW,UAATga,EACMolB,EACU,QAATplB,EACD1H,EAAM9P,QAAQjB,QAAU+Q,EAAM7kB,IAAM6kB,EAAM9kB,IACzC6S,EAAS2Z,GAEVA,EAAKha,MAELsS,EAAM0pC,eAETh8C,CACT,CGrCgBg7D,CAAgBhhD,EAAM1H,EAAOnL,GACrClF,EAAS,GAEf,GAAIO,EAAQ4S,KAAK+vB,SAAU,CACzB,MAAM2B,EAASx0B,EAAMw2B,yBAAyB,EAAG3hC,GACjD,OAAO,IAAIuzD,GAAU,CACnBzpE,EAAG61C,EAAO71C,EACVmS,EAAG0jC,EAAO1jC,EACVgW,OAAQ9G,EAAM2zB,8BAA8BjmC,KAIhD,IAAK,IAAIhQ,EAAI,EAAGA,EAAIL,IAAUK,EAC5BiS,EAAOyB,KAAK4O,EAAMw2B,yBAAyB94C,EAAGgQ,IAEhD,OAAOiC,CACT,CA3CWg5D,CAAwBj5D,GAEjC,OAIF,SAA+BA,GAC7B,MAAM,MAACsQ,EAAQ,QAAI0H,GAAQhY,EACrBkW,EHqBD,SAAyB8B,EAAM1H,GACpC,IAAI4F,EAAQ,KAWZ,MAVa,UAAT8B,EACF9B,EAAQ5F,EAAMsC,OACI,QAAToF,EACT9B,EAAQ5F,EAAMoC,IACLrU,EAAS2Z,GAElB9B,EAAQ5F,EAAM5H,iBAAiBsP,EAAKha,OAC3BsS,EAAMwyB,eACf5sB,EAAQ5F,EAAMwyB,gBAET5sB,CACT,CGlCgBgjD,CAAgBlhD,EAAM1H,GAEpC,GAAIhS,EAAS4X,GAAQ,CACnB,MAAM8nB,EAAa1tB,EAAMg0B,eAEzB,MAAO,CACLr1C,EAAG+uC,EAAa9nB,EAAQ,KACxB9U,EAAG48B,EAAa,KAAO9nB,GAI3B,OAAO,IACT,CAlBSijD,CAAsBn5D,EAC/B,CA1BmBo5D,CAAgBp5D,GAEjC,OAAIo3D,aAAoBsB,GACftB,EAGFD,GAAoBC,EAAU19C,EACvC,CC9BO,SAAS2/C,GAAU7pD,EAAKxP,EAAQqY,GACrC,MAAMpY,EAASwd,GAAWzd,IACpB,KAAC0Z,EAAI,MAAEpJ,EAAA,KAAOhI,GAAQtI,EACtBs5D,EAAW5/C,EAAKlZ,QAChBq3D,EAAayB,EAASthD,KACtB1b,EAAQg9D,EAAS7qD,iBACjB,MAAC8qD,EAAQj9D,EAAK,MAAEu8D,EAAQv8D,GAASu7D,GAAc,CAAC,EAClD53D,GAAUyZ,EAAK3R,OAAOpa,SACxB4qB,GAAS/I,EAAK6I,GAMlB,SAAgB7I,EAAKkf,GACnB,MAAM,KAAChV,EAAA,OAAMzZ,EAAA,MAAQs5D,EAAA,MAAOV,EAAA,KAAOxgD,EAAA,MAAM/H,GAASoe,EAC5C7qB,EAAW6V,EAAKqV,MAAQ,QAAUL,EAAIpmB,KAE5CkH,EAAImG,OAEa,MAAb9R,GAAoBg1D,IAAUU,IAChCC,GAAahqD,EAAKvP,EAAQoY,EAAK3F,KAC/BsF,GAAKxI,EAAK,CAACkK,OAAMzZ,SAAQ3D,MAAOi9D,EAAOjpD,QAAOzM,aAC9C2L,EAAIuG,UACJvG,EAAImG,OACJ6jD,GAAahqD,EAAKvP,EAAQoY,EAAKzF,SAEjCoF,GAAKxI,EAAK,CAACkK,OAAMzZ,SAAQ3D,MAAOu8D,EAAOvoD,QAAOzM,aAE9C2L,EAAIuG,SACN,CArBI0jD,CAAOjqD,EAAK,CAACkK,OAAMzZ,SAAQs5D,QAAOV,QAAOxgD,OAAM/H,QAAOhI,SACtDkQ,GAAWhJ,GAEf,CAoBA,SAASgqD,GAAahqD,EAAKvP,EAAQy5D,GACjC,MAAM,SAAClvC,EAAA,OAAUziB,GAAU9H,EAC3B,IAAIoyC,GAAQ,EACRsnB,GAAW,EAEfnqD,EAAIgI,YACJ,IAAK,MAAMsS,KAAWU,EAAU,CAC9B,MAAM,MAACrlB,EAAA,IAAOC,GAAO0kB,EACftI,EAAazZ,EAAO5C,GACpB49B,EAAYh7B,EAAOkvD,GAAgB9xD,EAAOC,EAAK2C,IACjDsqC,GACF7iC,EAAIoI,OAAO4J,EAAWvyB,EAAGuyB,EAAWpgB,GACpCixC,GAAQ,IAER7iC,EAAIqI,OAAO2J,EAAWvyB,EAAGyqE,GACzBlqD,EAAIqI,OAAO2J,EAAWvyB,EAAGuyB,EAAWpgB,IAEtCu4D,IAAa15D,EAAO8vD,YAAYvgD,EAAKsa,EAAS,CAAC8R,KAAM+9B,IACjDA,EACFnqD,EAAImI,YAEJnI,EAAIqI,OAAOkrB,EAAU9zC,EAAGyqE,EAE5B,CAEAlqD,EAAIqI,OAAO5X,EAAOoyC,QAAQpjD,EAAGyqE,GAC7BlqD,EAAImI,YACJnI,EAAI0D,MACN,CAEA,SAAS8E,GAAKxI,EAAKkf,GACjB,MAAM,KAAChV,EAAI,OAAEzZ,EAAM,SAAE4D,EAAQ,MAAEvH,EAAK,MAAEgU,GAASoe,EACzClE,ENlED,SAAmB9Q,EAAMzZ,EAAQ4D,GACtC,MAAM2mB,EAAW9Q,EAAK8Q,SAChBziB,EAAS2R,EAAK3R,OACd6xD,EAAU35D,EAAO8H,OACjBxG,EAAQ,GAEd,IAAK,MAAMuoB,KAAWU,EAAU,CAC9B,IAAI,MAACrlB,EAAA,IAAOC,GAAO0kB,EACnB1kB,EAAM6xD,GAAgB9xD,EAAOC,EAAK2C,GAElC,MAAMkL,EAAS+jD,GAAWnzD,EAAUkE,EAAO5C,GAAQ4C,EAAO3C,GAAM0kB,EAAQ9X,MAExE,IAAK/R,EAAOuqB,SAAU,CAGpBjpB,EAAMG,KAAK,CACT1B,OAAQ8pB,EACR7pB,OAAQgT,EACR9N,MAAO4C,EAAO5C,GACdC,IAAK2C,EAAO3C,KAEd,SAIF,MAAMy0D,EAAiBtvC,GAAetqB,EAAQgT,GAE9C,IAAK,MAAM6mD,KAAOD,EAAgB,CAChC,MAAME,EAAY/C,GAAWnzD,EAAU+1D,EAAQE,EAAI30D,OAAQy0D,EAAQE,EAAI10D,KAAM00D,EAAI9nD,MAC3EgoD,EAAcnwC,GAAcC,EAAS/hB,EAAQgyD,GAEnD,IAAK,MAAME,KAAcD,EACvBz4D,EAAMG,KAAK,CACT1B,OAAQi6D,EACRh6D,OAAQ65D,EACR30D,MAAO,CACL,CAACtB,GAAWqzD,GAASjkD,EAAQ8mD,EAAW,QAASxuE,KAAKC,MAExD4Z,IAAK,CACH,CAACvB,GAAWqzD,GAASjkD,EAAQ8mD,EAAW,MAAOxuE,KAAKE,OAI5D,CACF,CACA,OAAO8V,CACT,CMoBmB8vD,CAAU33C,EAAMzZ,EAAQ4D,GAEzC,IAAK,MAAO7D,OAAQk6D,EAAKj6D,OAAQ65D,EAAG,MAAE30D,EAAK,IAAEC,KAAQolB,EAAU,CAC7D,MAAOpb,OAAO,gBAACX,EAAkBnS,GAAS,CAAC,GAAK49D,EAC1CC,GAAsB,IAAXl6D,EAEjBuP,EAAImG,OACJnG,EAAI8J,UAAY7K,EAEhB2rD,GAAW5qD,EAAKc,EAAO6pD,GAAYnD,GAAWnzD,EAAUsB,EAAOC,IAE/DoK,EAAIgI,YAEJ,MAAMmiD,IAAajgD,EAAKq2C,YAAYvgD,EAAK0qD,GAEzC,IAAIloD,EACJ,GAAImoD,EAAU,CACRR,EACFnqD,EAAImI,YAEJ0iD,GAAmB7qD,EAAKvP,EAAQmF,EAAKvB,GAGvC,MAAMy2D,IAAer6D,EAAO8vD,YAAYvgD,EAAKsqD,EAAK,CAACl+B,KAAM+9B,EAAUp6D,SAAS,IAC5EyS,EAAO2nD,GAAYW,EACdtoD,GACHqoD,GAAmB7qD,EAAKvP,EAAQkF,EAAOtB,GAI3C2L,EAAImI,YACJnI,EAAIwI,KAAKhG,EAAO,UAAY,WAE5BxC,EAAIuG,SACN,CACF,CAEA,SAASqkD,GAAW5qD,EAAKc,EAAO2C,GAC9B,MAAM,IAACP,EAAA,OAAKE,GAAUtC,EAAMrD,MAAMusB,WAC5B,SAAC31B,EAAA,MAAUsB,EAAA,IAAOC,GAAO6N,GAAU,CAAC,EACzB,MAAbpP,IACF2L,EAAIgI,YACJhI,EAAIuI,KAAK5S,EAAOuN,EAAKtN,EAAMD,EAAOyN,EAASF,GAC3ClD,EAAI0D,OAER,CAEA,SAASmnD,GAAmB7qD,EAAKvP,EAAQmY,EAAOvU,GAC9C,MAAM02D,EAAoBt6D,EAAOpD,YAAYub,EAAOvU,GAChD02D,GACF/qD,EAAIqI,OAAO0iD,EAAkBtrE,EAAGsrE,EAAkBn5D,EAEtD,CC7GA,IAAArB,GAAe,CACbjC,GAAI,SAEJ08D,oBAAoBvtD,EAAO0nD,EAAOn0D,GAChC,MAAM0H,GAAS+E,EAAMgI,KAAKtG,UAAY,IAAIhhB,OACpCiT,EAAU,GAChB,IAAIkH,EAAM9Z,EAAG0rB,EAAM1Z,EAEnB,IAAKhS,EAAI,EAAGA,EAAIka,IAASla,EACvB8Z,EAAOmF,EAAM6oB,eAAe9nC,GAC5B0rB,EAAO5R,EAAKitB,QACZ/0B,EAAS,KAEL0Z,GAAQA,EAAKlZ,SAAWkZ,aAAgBy3C,KAC1CnxD,EAAS,CACPsS,QAASrF,EAAM2yB,iBAAiB5xC,GAChC+R,MAAO/R,EACPgqB,KAAM4/C,GAAYl+C,EAAM1rB,EAAGka,GAC3B+E,QACA3E,KAAMR,EAAKyqB,WAAW/xB,QAAQmP,UAC9BW,MAAOxI,EAAKqqB,OACZzY,SAIJ5R,EAAK2yD,QAAUz6D,EACfY,EAAQc,KAAK1B,GAGf,IAAKhS,EAAI,EAAGA,EAAIka,IAASla,EACvBgS,EAASY,EAAQ5S,GACZgS,IAA0B,IAAhBA,EAAOgY,OAItBhY,EAAOgY,KAAOy/C,GAAe72D,EAAS5S,EAAGwS,EAAQk3D,WAErD,EAEAgD,WAAWztD,EAAO0nD,EAAOn0D,GACvB,MAAMysB,EAA4B,eAArBzsB,EAAQm6D,SACfvpC,EAAWnkB,EAAMi7B,+BACjB7vB,EAAOpL,EAAMusB,UACnB,IAAK,IAAIxrC,EAAIojC,EAASzjC,OAAS,EAAGK,GAAK,IAAKA,EAAG,CAC7C,MAAMgS,EAASoxB,EAASpjC,GAAGysE,QACtBz6D,IAILA,EAAO0Z,KAAKspB,oBAAoB3qB,EAAMrY,EAAOsI,MACzC2kB,GAAQjtB,EAAOgY,MACjBqhD,GAAUpsD,EAAMuC,IAAKxP,EAAQqY,GAEjC,CACF,EAEAuiD,mBAAmB3tD,EAAO0nD,EAAOn0D,GAC/B,GAAyB,uBAArBA,EAAQm6D,SACV,OAGF,MAAMvpC,EAAWnkB,EAAMi7B,+BACvB,IAAK,IAAIl6C,EAAIojC,EAASzjC,OAAS,EAAGK,GAAK,IAAKA,EAAG,CAC7C,MAAMgS,EAASoxB,EAASpjC,GAAGysE,QAEvBjD,GAAiBx3D,IACnBq5D,GAAUpsD,EAAMuC,IAAKxP,EAAQiN,EAAMusB,UAEvC,CACF,EAEAqhC,kBAAkB5tD,EAAO/N,EAAMsB,GAC7B,MAAMR,EAASd,EAAK4I,KAAK2yD,QAEpBjD,GAAiBx3D,IAAgC,sBAArBQ,EAAQm6D,UAIzCtB,GAAUpsD,EAAMuC,IAAKxP,EAAQiN,EAAMusB,UACrC,EAEAhoB,SAAU,CACRkmD,WAAW,EACXiD,SAAU,sBCvEd,MAAMG,GAAaA,CAACC,EAAWtd,KAC7B,IAAI,UAACud,EAAYvd,EAAA,SAAUwd,EAAWxd,GAAYsd,EAOlD,OALIA,EAAUG,gBACZF,EAAYzvE,KAAKE,IAAIuvE,EAAWvd,GAChCwd,EAAWF,EAAUI,iBAAmB5vE,KAAKE,IAAIwvE,EAAUxd,IAGtD,CACLwd,WACAD,YACAI,WAAY7vE,KAAKC,IAAIiyD,EAAUud,GAChC,EAKI,MAAMK,WAAejqB,GAK1B31C,YAAYs0B,GACVsP,QAEAvjC,KAAKw/D,QAAS,EAGdx/D,KAAKy/D,eAAiB,GAKtBz/D,KAAK0/D,aAAe,KAGpB1/D,KAAK2/D,cAAe,EAEpB3/D,KAAKmR,MAAQ8iB,EAAO9iB,MACpBnR,KAAK0E,QAAUuvB,EAAOvvB,QACtB1E,KAAK0T,IAAMugB,EAAOvgB,IAClB1T,KAAK4/D,iBAActuE,EACnB0O,KAAK6/D,iBAAcvuE,EACnB0O,KAAK8/D,gBAAaxuE,EAClB0O,KAAK2qB,eAAYr5B,EACjB0O,KAAKgf,cAAW1tB,EAChB0O,KAAK4W,SAAMtlB,EACX0O,KAAK8W,YAASxlB,EACd0O,KAAK+W,UAAOzlB,EACZ0O,KAAK6W,WAAQvlB,EACb0O,KAAK4a,YAAStpB,EACd0O,KAAKiY,WAAQ3mB,EACb0O,KAAKk4C,cAAW5mD,EAChB0O,KAAKksC,cAAW56C,EAChB0O,KAAKS,YAASnP,EACd0O,KAAKyuC,cAAWn9C,CAClB,CAEAiiC,OAAOvU,EAAU2L,EAAWD,GAC1B1qB,KAAKgf,SAAWA,EAChBhf,KAAK2qB,UAAYA,EACjB3qB,KAAKk4C,SAAWxtB,EAEhB1qB,KAAK+5C,gBACL/5C,KAAK+/D,cACL//D,KAAKi7C,KACP,CAEAlB,gBACM/5C,KAAKwoC,gBACPxoC,KAAKiY,MAAQjY,KAAKgf,SAClBhf,KAAK+W,KAAO/W,KAAKk4C,SAASnhC,KAC1B/W,KAAK6W,MAAQ7W,KAAKiY,QAElBjY,KAAK4a,OAAS5a,KAAK2qB,UACnB3qB,KAAK4W,IAAM5W,KAAKk4C,SAASthC,IACzB5W,KAAK8W,OAAS9W,KAAK4a,OAEvB,CAEAmlD,cACE,MAAMd,EAAYj/D,KAAK0E,QAAQo3B,QAAU,CAAC,EAC1C,IAAI8jC,EAAc18D,EAAK+7D,EAAU/7B,eAAgB,CAACljC,KAAKmR,OAAQnR,OAAS,GAEpEi/D,EAAUp7C,SACZ+7C,EAAcA,EAAY/7C,QAAQxd,GAAS44D,EAAUp7C,OAAOxd,EAAMrG,KAAKmR,MAAMgI,SAG3E8lD,EAAUn+B,OACZ8+B,EAAcA,EAAY9+B,MAAK,CAACvwC,EAAGC,IAAMyuE,EAAUn+B,KAAKvwC,EAAGC,EAAGwP,KAAKmR,MAAMgI,SAGvEnZ,KAAK0E,QAAQjB,SACfm8D,EAAYn8D,UAGdzD,KAAK4/D,YAAcA,CACrB,CAEA3kB,MACE,MAAM,QAACv2C,EAAO,IAAEgP,GAAO1T,KAMvB,IAAK0E,EAAQsS,QAEX,YADAhX,KAAKiY,MAAQjY,KAAK4a,OAAS,GAI7B,MAAMqkD,EAAYv6D,EAAQo3B,OACpBkkC,EAAY5/C,GAAO6+C,EAAU7rD,MAC7BuuC,EAAWqe,EAAU55D,KACrBo2C,EAAcx8C,KAAKigE,uBACnB,SAACd,EAAQ,WAAEG,GAAcN,GAAWC,EAAWtd,GAErD,IAAI1pC,EAAO2C,EAEXlH,EAAIN,KAAO4sD,EAAU1mD,OAEjBtZ,KAAKwoC,gBACPvwB,EAAQjY,KAAKgf,SACbpE,EAAS5a,KAAKkgE,SAAS1jB,EAAamF,EAAUwd,EAAUG,GAAc,KAEtE1kD,EAAS5a,KAAK2qB,UACd1S,EAAQjY,KAAKmgE,SAAS3jB,EAAawjB,EAAWb,EAAUG,GAAc,IAGxEt/D,KAAKiY,MAAQxoB,KAAKE,IAAIsoB,EAAOvT,EAAQsa,UAAYhf,KAAKgf,UACtDhf,KAAK4a,OAASnrB,KAAKE,IAAIirB,EAAQlW,EAAQimB,WAAa3qB,KAAK2qB,UAC3D,CAKAu1C,SAAS1jB,EAAamF,EAAUwd,EAAUG,GACxC,MAAM,IAAC5rD,EAAG,SAAEsL,EAAUta,SAAUo3B,QAAQ,QAACnlB,KAAa3W,KAChDogE,EAAWpgE,KAAKy/D,eAAiB,GAEjCK,EAAa9/D,KAAK8/D,WAAa,CAAC,GAChCvsD,EAAa+rD,EAAa3oD,EAChC,IAAI0pD,EAAc7jB,EAElB9oC,EAAI+J,UAAY,OAChB/J,EAAIgK,aAAe,SAEnB,IAAI4iD,GAAO,EACP1pD,GAAOrD,EAgBX,OAfAvT,KAAK4/D,YAAY70D,SAAQ,CAACs4B,EAAYnxC,KACpC,MAAM66B,EAAYoyC,EAAYxd,EAAW,EAAKjuC,EAAI8F,YAAY6pB,EAAWlrB,MAAMF,OAErE,IAAN/lB,GAAW4tE,EAAWA,EAAWjuE,OAAS,GAAKk7B,EAAY,EAAIpW,EAAUqI,KAC3EqhD,GAAe9sD,EACfusD,EAAWA,EAAWjuE,QAAUK,EAAI,EAAI,EAAI,IAAM,EAClD0kB,GAAOrD,EACP+sD,KAGFF,EAASluE,GAAK,CAAC6kB,KAAM,EAAGH,MAAK0pD,MAAKroD,MAAO8U,EAAWnS,OAAQ0kD,GAE5DQ,EAAWA,EAAWjuE,OAAS,IAAMk7B,EAAYpW,CAAA,IAG5C0pD,CACT,CAEAF,SAAS3jB,EAAawjB,EAAWb,EAAUoB,GACzC,MAAM,IAAC7sD,EAAG,UAAEiX,EAAWjmB,SAAUo3B,QAAQ,QAACnlB,KAAa3W,KACjDogE,EAAWpgE,KAAKy/D,eAAiB,GACjCI,EAAc7/D,KAAK6/D,YAAc,GACjCW,EAAc71C,EAAY6xB,EAEhC,IAAIikB,EAAa9pD,EACb+pD,EAAkB,EAClBC,EAAmB,EAEnB5pD,EAAO,EACP6pD,EAAM,EAyBV,OAvBA5gE,KAAK4/D,YAAY70D,SAAQ,CAACs4B,EAAYnxC,KACpC,MAAM,UAAC66B,EAAS,WAAEuyC,GA8VxB,SAA2BH,EAAUa,EAAWtsD,EAAK2vB,EAAYk9B,GAC/D,MAAMxzC,EAKR,SAA4BsW,EAAY87B,EAAUa,EAAWtsD,GAC3D,IAAImtD,EAAiBx9B,EAAWlrB,KAC5B0oD,GAA4C,kBAAnBA,IAC3BA,EAAiBA,EAAe/uC,QAAO,CAACvhC,EAAGC,IAAMD,EAAEsB,OAASrB,EAAEqB,OAAStB,EAAIC,KAE7E,OAAO2uE,EAAYa,EAAU55D,KAAO,EAAKsN,EAAI8F,YAAYqnD,GAAgB5oD,KAC3E,CAXoB6oD,CAAmBz9B,EAAY87B,EAAUa,EAAWtsD,GAChE4rD,EAYR,SAA6BiB,EAAal9B,EAAY09B,GACpD,IAAIzB,EAAaiB,EACc,kBAApBl9B,EAAWlrB,OACpBmnD,EAAa0B,GAA0B39B,EAAY09B,IAErD,OAAOzB,CACT,CAlBqB2B,CAAoBV,EAAal9B,EAAY28B,EAAUzsD,YAC1E,MAAO,CAACwZ,YAAWuyC,aACrB,CAlWsC4B,CAAkB/B,EAAUa,EAAWtsD,EAAK2vB,EAAYk9B,GAGpFruE,EAAI,GAAKyuE,EAAmBrB,EAAa,EAAI3oD,EAAU6pD,IACzDC,GAAcC,EAAkB/pD,EAChCkpD,EAAYj6D,KAAK,CAACqS,MAAOyoD,EAAiB9lD,OAAQ+lD,IAClD5pD,GAAQ2pD,EAAkB/pD,EAC1BiqD,IACAF,EAAkBC,EAAmB,GAIvCP,EAASluE,GAAK,CAAC6kB,OAAMH,IAAK+pD,EAAkBC,MAAK3oD,MAAO8U,EAAWnS,OAAQ0kD,GAG3EoB,EAAkBjxE,KAAKC,IAAIgxE,EAAiB3zC,GAC5C4zC,GAAoBrB,EAAa3oD,CAAA,IAGnC8pD,GAAcC,EACdb,EAAYj6D,KAAK,CAACqS,MAAOyoD,EAAiB9lD,OAAQ+lD,IAE3CF,CACT,CAEAU,iBACE,IAAKnhE,KAAK0E,QAAQsS,QAChB,OAEF,MAAMwlC,EAAcx8C,KAAKigE,uBAClBR,eAAgBW,EAAU17D,SAAS,MAACmH,EAAOiwB,QAAQ,QAACnlB,GAAQ,IAAE+V,IAAQ1sB,KACvEohE,EAAY30C,GAAcC,EAAK1sB,KAAK+W,KAAM/W,KAAKiY,OACrD,GAAIjY,KAAKwoC,eAAgB,CACvB,IAAI83B,EAAM,EACNvpD,EAAOjL,GAAeD,EAAO7L,KAAK+W,KAAOJ,EAAS3W,KAAK6W,MAAQ7W,KAAK8/D,WAAWQ,IACnF,IAAK,MAAMe,KAAUjB,EACfE,IAAQe,EAAOf,MACjBA,EAAMe,EAAOf,IACbvpD,EAAOjL,GAAeD,EAAO7L,KAAK+W,KAAOJ,EAAS3W,KAAK6W,MAAQ7W,KAAK8/D,WAAWQ,KAEjFe,EAAOzqD,KAAO5W,KAAK4W,IAAM4lC,EAAc7lC,EACvC0qD,EAAOtqD,KAAOqqD,EAAUt0C,WAAWs0C,EAAUjuE,EAAE4jB,GAAOsqD,EAAOppD,OAC7DlB,GAAQsqD,EAAOppD,MAAQtB,MAEpB,CACL,IAAIiqD,EAAM,EACNhqD,EAAM9K,GAAeD,EAAO7L,KAAK4W,IAAM4lC,EAAc7lC,EAAS3W,KAAK8W,OAAS9W,KAAK6/D,YAAYe,GAAKhmD,QACtG,IAAK,MAAMymD,KAAUjB,EACfiB,EAAOT,MAAQA,IACjBA,EAAMS,EAAOT,IACbhqD,EAAM9K,GAAeD,EAAO7L,KAAK4W,IAAM4lC,EAAc7lC,EAAS3W,KAAK8W,OAAS9W,KAAK6/D,YAAYe,GAAKhmD,SAEpGymD,EAAOzqD,IAAMA,EACbyqD,EAAOtqD,MAAQ/W,KAAK+W,KAAOJ,EAC3B0qD,EAAOtqD,KAAOqqD,EAAUt0C,WAAWs0C,EAAUjuE,EAAEkuE,EAAOtqD,MAAOsqD,EAAOppD,OACpErB,GAAOyqD,EAAOzmD,OAASjE,EAG7B,CAEA6xB,eACE,MAAiC,QAA1BxoC,KAAK0E,QAAQwnC,UAAgD,WAA1BlsC,KAAK0E,QAAQwnC,QACzD,CAEA/a,OACE,GAAInxB,KAAK0E,QAAQsS,QAAS,CACxB,MAAMtD,EAAM1T,KAAK0T,IACjB+I,GAAS/I,EAAK1T,MAEdA,KAAKshE,QAEL5kD,GAAWhJ,GAEf,CAKA4tD,QACE,MAAO58D,QAAS4Y,EAAA,YAAMuiD,EAAA,WAAaC,EAAA,IAAYpsD,GAAO1T,MAChD,MAAC6L,EAAOiwB,OAAQmjC,GAAa3hD,EAC7BikD,EAAe7rD,GAASlV,MACxB4gE,EAAY30C,GAAcnP,EAAKoP,IAAK1sB,KAAK+W,KAAM/W,KAAKiY,OACpD+nD,EAAY5/C,GAAO6+C,EAAU7rD,OAC7B,QAACuD,GAAWsoD,EACZtd,EAAWqe,EAAU55D,KACrBo7D,EAAe7f,EAAW,EAChC,IAAI8f,EAEJzhE,KAAKkhD,YAGLxtC,EAAI+J,UAAY2jD,EAAU3jD,UAAU,QACpC/J,EAAIgK,aAAe,SACnBhK,EAAI6D,UAAY,GAChB7D,EAAIN,KAAO4sD,EAAU1mD,OAErB,MAAM,SAAC6lD,EAAA,UAAUD,EAAA,WAAWI,GAAcN,GAAWC,EAAWtd,GAyE1DnZ,EAAexoC,KAAKwoC,eACpBgU,EAAcx8C,KAAKigE,sBAEvBwB,EADEj5B,EACO,CACPr1C,EAAG2Y,GAAeD,EAAO7L,KAAK+W,KAAOJ,EAAS3W,KAAK6W,MAAQipD,EAAW,IACtEx6D,EAAGtF,KAAK4W,IAAMD,EAAU6lC,EACxB5+B,KAAM,GAGC,CACPzqB,EAAG6M,KAAK+W,KAAOJ,EACfrR,EAAGwG,GAAeD,EAAO7L,KAAK4W,IAAM4lC,EAAc7lC,EAAS3W,KAAK8W,OAAS+oD,EAAY,GAAGjlD,QACxFgD,KAAM,GAIVsP,GAAsBltB,KAAK0T,IAAK4J,EAAKokD,eAErC,MAAMnuD,EAAa+rD,EAAa3oD,EAChC3W,KAAK4/D,YAAY70D,SAAQ,CAACs4B,EAAYnxC,KACpCwhB,EAAI2K,YAAcglB,EAAWF,UAC7BzvB,EAAI8J,UAAY6lB,EAAWF,UAE3B,MAAM5pB,EAAY7F,EAAI8F,YAAY6pB,EAAWlrB,MAAMF,MAC7CwF,EAAY2jD,EAAU3jD,UAAU4lB,EAAW5lB,YAAc4lB,EAAW5lB,UAAYwhD,EAAUxhD,YAC1FxF,EAAQknD,EAAWqC,EAAejoD,EACxC,IAAIpmB,EAAIsuE,EAAOtuE,EACXmS,EAAIm8D,EAAOn8D,EAEf87D,EAAUx0C,SAAS5sB,KAAKiY,OAEpBuwB,EACEt2C,EAAI,GAAKiB,EAAI8kB,EAAQtB,EAAU3W,KAAK6W,QACtCvR,EAAIm8D,EAAOn8D,GAAKiO,EAChBkuD,EAAO7jD,OACPzqB,EAAIsuE,EAAOtuE,EAAI2Y,GAAeD,EAAO7L,KAAK+W,KAAOJ,EAAS3W,KAAK6W,MAAQipD,EAAW2B,EAAO7jD,QAElF1rB,EAAI,GAAKoT,EAAIiO,EAAavT,KAAK8W,SACxC3jB,EAAIsuE,EAAOtuE,EAAIA,EAAI0sE,EAAY4B,EAAO7jD,MAAM3F,MAAQtB,EACpD8qD,EAAO7jD,OACPtY,EAAIm8D,EAAOn8D,EAAIwG,GAAeD,EAAO7L,KAAK4W,IAAM4lC,EAAc7lC,EAAS3W,KAAK8W,OAAS+oD,EAAY4B,EAAO7jD,MAAMhD,SAYhH,GA1HoB,SAASznB,EAAGmS,EAAG+9B,GACnC,GAAIz7B,MAAMu3D,IAAaA,GAAY,GAAKv3D,MAAMs3D,IAAcA,EAAY,EACtE,OAIFxrD,EAAImG,OAEJ,MAAMtC,EAAY1U,EAAewgC,EAAW9rB,UAAW,GAUvD,GATA7D,EAAI8J,UAAY3a,EAAewgC,EAAW7lB,UAAW+jD,GACrD7tD,EAAIggD,QAAU7wD,EAAewgC,EAAWqwB,QAAS,QACjDhgD,EAAImtC,eAAiBh+C,EAAewgC,EAAWwd,eAAgB,GAC/DntC,EAAI4/C,SAAWzwD,EAAewgC,EAAWiwB,SAAU,SACnD5/C,EAAI6D,UAAYA,EAChB7D,EAAI2K,YAAcxb,EAAewgC,EAAWhlB,YAAakjD,GAEzD7tD,EAAIktC,YAAY/9C,EAAewgC,EAAWs+B,SAAU,KAEhD1C,EAAUG,cAAe,CAG3B,MAAMwC,EAAc,CAClBtmD,OAAQ4jD,EAAYzvE,KAAKoyE,MAAQ,EACjCzmD,WAAYioB,EAAWjoB,WACvBC,SAAUgoB,EAAWhoB,SACrBc,YAAa5E,GAETuuB,EAAUs7B,EAAUv0C,MAAM15B,EAAGgsE,EAAW,GAI9CrkD,GAAgBpH,EAAKkuD,EAAa97B,EAHlBxgC,EAAIk8D,EAGgCvC,EAAUI,iBAAmBF,OAC5E,CAGL,MAAM2C,EAAUx8D,EAAI7V,KAAKC,KAAKiyD,EAAWud,GAAa,EAAG,GACnD6C,EAAWX,EAAUt0C,WAAW35B,EAAGgsE,GACnCjO,EAAehxC,GAAcmjB,EAAW6tB,cAE9Cx9C,EAAIgI,YAEAzd,OAAO8S,OAAOmgD,GAAc9K,MAAK/2D,GAAW,IAANA,IACxC6vB,GAAmBxL,EAAK,CACtBvgB,EAAG4uE,EACHz8D,EAAGw8D,EACH9vE,EAAGmtE,EACH3vE,EAAG0vE,EACH5jD,OAAQ41C,IAGVx9C,EAAIuI,KAAK8lD,EAAUD,EAAS3C,EAAUD,GAGxCxrD,EAAIwI,OACc,IAAd3E,GACF7D,EAAI0I,SAIR1I,EAAIuG,SACN,CAuDE+nD,CAFcZ,EAAUjuE,EAAEA,GAELmS,EAAG+9B,GAExBlwC,E1DxVgB8uE,EAACp2D,EAAoCkL,EAAcF,EAAe6V,IAE/E7gB,KADO6gB,EAAM,OAAS,SACJ7V,EAAkB,WAAVhL,GAAsBkL,EAAOF,GAAS,EAAIE,E0DsVnEkrD,CAAOxkD,EAAWtqB,EAAIgsE,EAAWqC,EAAch5B,EAAer1C,EAAI8kB,EAAQjY,KAAK6W,MAAOyG,EAAKoP,KAvDhF,SAASv5B,EAAGmS,EAAG+9B,GAC9B3kB,GAAWhL,EAAK2vB,EAAWlrB,KAAMhlB,EAAGmS,EAAKg6D,EAAa,EAAIU,EAAW,CACnEniD,cAAewlB,EAAWzG,OAC1Bnf,UAAW2jD,EAAU3jD,UAAU4lB,EAAW5lB,YAE9C,CAqDEwB,CAASmiD,EAAUjuE,EAAEA,GAAImS,EAAG+9B,GAExBmF,EACFi5B,EAAOtuE,GAAK8kB,EAAQtB,OACf,GAA+B,kBAApB0sB,EAAWlrB,KAAmB,CAC9C,MAAM4oD,EAAiBf,EAAUzsD,WACjCkuD,EAAOn8D,GAAK07D,GAA0B39B,EAAY09B,GAAkBpqD,OAEpE8qD,EAAOn8D,GAAKiO,KAIhBia,GAAqBxtB,KAAK0T,IAAK4J,EAAKokD,cACtC,CAKAxgB,YACE,MAAM5jC,EAAOtd,KAAK0E,QACZ43C,EAAYh/B,EAAKpF,MACjBgqD,EAAY9hD,GAAOk8B,EAAUlpC,MAC7B+uD,EAAehiD,GAAUm8B,EAAU3lC,SAEzC,IAAK2lC,EAAUtlC,QACb,OAGF,MAAMoqD,EAAY30C,GAAcnP,EAAKoP,IAAK1sB,KAAK+W,KAAM/W,KAAKiY,OACpDvE,EAAM1T,KAAK0T,IACXw4B,EAAWoQ,EAAUpQ,SACrBs1B,EAAeU,EAAU97D,KAAO,EAChCg8D,EAA6BD,EAAavrD,IAAM4qD,EACtD,IAAIl8D,EAIAyR,EAAO/W,KAAK+W,KACZiI,EAAWhf,KAAKiY,MAEpB,GAAIjY,KAAKwoC,eAEPxpB,EAAWvvB,KAAKC,OAAOsQ,KAAK8/D,YAC5Bx6D,EAAItF,KAAK4W,IAAMwrD,EACfrrD,EAAOjL,GAAewR,EAAKzR,MAAOkL,EAAM/W,KAAK6W,MAAQmI,OAChD,CAEL,MAAM2L,EAAY3qB,KAAK6/D,YAAY/tC,QAAO,CAACC,EAAK3rB,IAAS3W,KAAKC,IAAIqiC,EAAK3rB,EAAKwU,SAAS,GACrFtV,EAAI88D,EAA6Bt2D,GAAewR,EAAKzR,MAAO7L,KAAK4W,IAAK5W,KAAK8W,OAAS6T,EAAYrN,EAAKwe,OAAOnlB,QAAU3W,KAAKigE,uBAK7H,MAAM9sE,EAAI2Y,GAAeogC,EAAUn1B,EAAMA,EAAOiI,GAGhDtL,EAAI+J,UAAY2jD,EAAU3jD,UAAU7R,GAAmBsgC,IACvDx4B,EAAIgK,aAAe,SACnBhK,EAAI2K,YAAci+B,EAAU97C,MAC5BkT,EAAI8J,UAAY8+B,EAAU97C,MAC1BkT,EAAIN,KAAO8uD,EAAU5oD,OAErBoF,GAAWhL,EAAK4oC,EAAUnkC,KAAMhlB,EAAGmS,EAAG48D,EACxC,CAKAjC,sBACE,MAAM3jB,EAAYt8C,KAAK0E,QAAQwT,MACzBgqD,EAAY9hD,GAAOk8B,EAAUlpC,MAC7B+uD,EAAehiD,GAAUm8B,EAAU3lC,SACzC,OAAO2lC,EAAUtlC,QAAUkrD,EAAU3uD,WAAa4uD,EAAavnD,OAAS,CAC1E,CAKAynD,iBAAiBlvE,EAAGmS,GAClB,IAAIpT,EAAGowE,EAAQC,EAEf,GAAI14D,GAAW1W,EAAG6M,KAAK+W,KAAM/W,KAAK6W,QAC7BhN,GAAWvE,EAAGtF,KAAK4W,IAAK5W,KAAK8W,QAGhC,IADAyrD,EAAKviE,KAAKy/D,eACLvtE,EAAI,EAAGA,EAAIqwE,EAAG1wE,SAAUK,EAG3B,GAFAowE,EAASC,EAAGrwE,GAER2X,GAAW1W,EAAGmvE,EAAOvrD,KAAMurD,EAAOvrD,KAAOurD,EAAOrqD,QAC/CpO,GAAWvE,EAAGg9D,EAAO1rD,IAAK0rD,EAAO1rD,IAAM0rD,EAAO1nD,QAEjD,OAAO5a,KAAK4/D,YAAY1tE,GAK9B,OAAO,IACT,CAMAswE,YAAY7xE,GACV,MAAM2sB,EAAOtd,KAAK0E,QAClB,IAoDJ,SAAoB9E,EAAM0d,GACxB,IAAc,cAAT1d,GAAiC,aAATA,KAAyB0d,EAAKnJ,SAAWmJ,EAAKmlD,SACzE,OAAO,EAET,GAAInlD,EAAKlJ,UAAqB,UAATxU,GAA6B,YAATA,GACvC,OAAO,EAET,OAAO,CACT,CA5DS8iE,CAAW/xE,EAAEiP,KAAM0d,GACtB,OAIF,MAAMqlD,EAAc3iE,KAAKqiE,iBAAiB1xE,EAAEwC,EAAGxC,EAAE2U,GAEjD,GAAe,cAAX3U,EAAEiP,MAAmC,aAAXjP,EAAEiP,KAAqB,CACnD,MAAMgd,EAAW5c,KAAK0/D,aAChBkD,GApfWpyE,EAofqBmyE,EApfT,QAAfpyE,EAofcqsB,IApfe,OAANpsB,GAAcD,EAAEyT,eAAiBxT,EAAEwT,cAAgBzT,EAAE0T,QAAUzT,EAAEyT,OAqflG2Y,IAAagmD,GACf1/D,EAAKoa,EAAKmlD,QAAS,CAAC9xE,EAAGisB,EAAU5c,MAAOA,MAG1CA,KAAK0/D,aAAeiD,EAEhBA,IAAgBC,GAClB1/D,EAAKoa,EAAKnJ,QAAS,CAACxjB,EAAGgyE,EAAa3iE,MAAOA,KAE/C,MAAW2iE,GACTz/D,EAAKoa,EAAKlJ,QAAS,CAACzjB,EAAGgyE,EAAa3iE,MAAOA,MA/f9B6iE,IAACtyE,EAAGC,CAigBrB,EAyBF,SAASwwE,GAA0B39B,EAAY09B,GAE7C,OAAOA,GADa19B,EAAWlrB,KAAOkrB,EAAWlrB,KAAKtmB,OAAS,EAEjE,CAYA,IAAAixE,GAAe,CACb9gE,GAAI,SAMJ+gE,SAAUxD,GAEVl2D,MAAM8H,EAAO0nD,EAAOn0D,GAClB,MAAMu+B,EAAS9xB,EAAM8xB,OAAS,IAAIs8B,GAAO,CAAC7rD,IAAKvC,EAAMuC,IAAKhP,UAASyM,UACnE68B,GAAQ7Z,UAAUhjB,EAAO8xB,EAAQv+B,GACjCspC,GAAQmC,OAAOh/B,EAAO8xB,EACxB,EAEA/Q,KAAK/gB,GACH68B,GAAQsC,UAAUn/B,EAAOA,EAAM8xB,eACxB9xB,EAAM8xB,MACf,EAKA2W,aAAazoC,EAAO0nD,EAAOn0D,GACzB,MAAMu+B,EAAS9xB,EAAM8xB,OACrB+K,GAAQ7Z,UAAUhjB,EAAO8xB,EAAQv+B,GACjCu+B,EAAOv+B,QAAUA,CACnB,EAIAy2C,YAAYhqC,GACV,MAAM8xB,EAAS9xB,EAAM8xB,OACrBA,EAAO88B,cACP98B,EAAOk+B,gBACT,EAGA6B,WAAW7xD,EAAO/N,GACXA,EAAKgtD,QACRj/C,EAAM8xB,OAAOu/B,YAAYp/D,EAAKkmB,MAElC,EAEA5T,SAAU,CACRsB,SAAS,EACTk1B,SAAU,MACVrgC,MAAO,SACP4iC,UAAU,EACVhrC,SAAS,EACThD,OAAQ,IAGR2T,QAAQzjB,EAAG0yC,EAAYJ,GACrB,MAAMh/B,EAAQo/B,EAAWr/B,aACnBi/D,EAAKhgC,EAAO9xB,MACd8xD,EAAGn/B,iBAAiB7/B,IACtBg/D,EAAGxsD,KAAKxS,GACRo/B,EAAWzG,QAAS,IAEpBqmC,EAAG3sD,KAAKrS,GACRo/B,EAAWzG,QAAS,EAExB,EAEAzoB,QAAS,KACTsuD,QAAS,KAET3mC,OAAQ,CACNt7B,MAAQkT,GAAQA,EAAIvC,MAAMzM,QAAQlE,MAClC2+D,SAAU,GACVxoD,QAAS,GAYTusB,eAAe/xB,GACb,MAAM0B,EAAW1B,EAAMgI,KAAKtG,UACrBipB,QAAQ,cAACsjC,EAAA,WAAehkD,EAAU,UAAEqC,EAAA,MAAWjd,EAAA,gBAAO0iE,EAAe,aAAEhS,IAAiB//C,EAAM8xB,OAAOv+B,QAE5G,OAAOyM,EAAMokB,yBAAyB/iC,KAAKwZ,IACzC,MAAMsH,EAAQtH,EAAKyqB,WAAWtK,SAASizC,EAAgB,OAAI9tE,GACrD6qB,EAAcgE,GAAU7M,EAAM6I,aAEpC,MAAO,CACLhE,KAAMtF,EAAS7G,EAAK/H,OAAOm5B,MAC3B5f,UAAWlK,EAAMX,gBACjBwwB,UAAW3iC,EACXo8B,QAAS5wB,EAAKwK,QACdk9C,QAASpgD,EAAMsc,eACf+xC,SAAUruD,EAAMuc,WAChBgxB,eAAgBvtC,EAAMwc,iBACtBwjC,SAAUhgD,EAAMyc,gBAChBxY,WAAY4E,EAAYlE,MAAQkE,EAAYvB,QAAU,EACtDyD,YAAa/K,EAAMV,YACnBwI,WAAYA,GAAc9H,EAAM8H,WAChCC,SAAU/H,EAAM+H,SAChBoC,UAAWA,GAAanK,EAAMmK,UAC9ByzC,aAAcgS,IAAoBhS,GAAgB59C,EAAM49C,cAGxDltD,aAAcgI,EAAK/H,MACpB,GACAjE,KACL,GAGFkY,MAAO,CACL1X,MAAQkT,GAAQA,EAAIvC,MAAMzM,QAAQlE,MAClCwW,SAAS,EACTk1B,SAAU,SACV/zB,KAAM,KAIVjG,YAAa,CACXyD,YAAcZ,IAAUA,EAAKa,WAAW,MACxCkmB,OAAQ,CACNnmB,YAAcZ,IAAU,CAAC,iBAAkB,SAAU,QAAQhD,SAASgD,MCtsBrE,MAAMouD,WAAc7tB,GAIzB31C,YAAYs0B,GACVsP,QAEAvjC,KAAKmR,MAAQ8iB,EAAO9iB,MACpBnR,KAAK0E,QAAUuvB,EAAOvvB,QACtB1E,KAAK0T,IAAMugB,EAAOvgB,IAClB1T,KAAKojE,cAAW9xE,EAChB0O,KAAK4W,SAAMtlB,EACX0O,KAAK8W,YAASxlB,EACd0O,KAAK+W,UAAOzlB,EACZ0O,KAAK6W,WAAQvlB,EACb0O,KAAKiY,WAAQ3mB,EACb0O,KAAK4a,YAAStpB,EACd0O,KAAKksC,cAAW56C,EAChB0O,KAAKS,YAASnP,EACd0O,KAAKyuC,cAAWn9C,CAClB,CAEAiiC,OAAOvU,EAAU2L,GACf,MAAMrN,EAAOtd,KAAK0E,QAKlB,GAHA1E,KAAK+W,KAAO,EACZ/W,KAAK4W,IAAM,GAEN0G,EAAKtG,QAER,YADAhX,KAAKiY,MAAQjY,KAAK4a,OAAS5a,KAAK6W,MAAQ7W,KAAK8W,OAAS,GAIxD9W,KAAKiY,MAAQjY,KAAK6W,MAAQmI,EAC1Bhf,KAAK4a,OAAS5a,KAAK8W,OAAS6T,EAE5B,MAAMq1B,EAAYztD,EAAQ+qB,EAAKnF,MAAQmF,EAAKnF,KAAKtmB,OAAS,EAC1DmO,KAAKojE,SAAWjjD,GAAU7C,EAAK3G,SAC/B,MAAM0sD,EAAWrjB,EAAY5/B,GAAO9C,EAAKlK,MAAMG,WAAavT,KAAKojE,SAASxoD,OAEtE5a,KAAKwoC,eACPxoC,KAAK4a,OAASyoD,EAEdrjE,KAAKiY,MAAQorD,CAEjB,CAEA76B,eACE,MAAMpf,EAAMppB,KAAK0E,QAAQwnC,SACzB,MAAe,QAAR9iB,GAAyB,WAARA,CAC1B,CAEAk6C,UAAUrsD,GACR,MAAM,IAACL,EAAA,KAAKG,EAAA,OAAMD,EAAA,MAAQD,EAAA,QAAOnS,GAAW1E,KACtC6L,EAAQnH,EAAQmH,MACtB,IACImT,EAAUmiC,EAAQC,EADlB/lC,EAAW,EAmBf,OAhBIrb,KAAKwoC,gBACP2Y,EAASr1C,GAAeD,EAAOkL,EAAMF,GACrCuqC,EAASxqC,EAAMK,EACf+H,EAAWnI,EAAQE,IAEM,SAArBrS,EAAQwnC,UACViV,EAASpqC,EAAOE,EAChBmqC,EAASt1C,GAAeD,EAAOiL,EAAQF,GACvCyE,GAAiB,GAAN9U,KAEX46C,EAAStqC,EAAQI,EACjBmqC,EAASt1C,GAAeD,EAAO+K,EAAKE,GACpCuE,EAAgB,GAAL9U,IAEbyY,EAAWlI,EAASF,GAEf,CAACuqC,SAAQC,SAAQpiC,WAAU3D,WACpC,CAEA8V,OACE,MAAMzd,EAAM1T,KAAK0T,IACX4J,EAAOtd,KAAK0E,QAElB,IAAK4Y,EAAKtG,QACR,OAGF,MAAMusD,EAAWnjD,GAAO9C,EAAKlK,MAEvB6D,EADassD,EAAShwD,WACA,EAAIvT,KAAKojE,SAASxsD,KACxC,OAACuqC,EAAA,OAAQC,EAAA,SAAQpiC,EAAA,SAAU3D,GAAYrb,KAAKsjE,UAAUrsD,GAE5DyH,GAAWhL,EAAK4J,EAAKnF,KAAM,EAAG,EAAGorD,EAAU,CACzC/iE,MAAO8c,EAAK9c,MACZwe,WACA3D,WACAoC,UAAW7R,GAAmB0R,EAAKzR,OACnC6R,aAAc,SACdH,YAAa,CAAC4jC,EAAQC,IAE1B,EAeF,IAAAoiB,GAAe,CACbxhE,GAAI,QAMJ+gE,SAAUI,GAEV95D,MAAM8H,EAAO0nD,EAAOn0D,IArBtB,SAAqByM,EAAOmrC,GAC1B,MAAMpkC,EAAQ,IAAIirD,GAAM,CACtBzvD,IAAKvC,EAAMuC,IACXhP,QAAS43C,EACTnrC,UAGF68B,GAAQ7Z,UAAUhjB,EAAO+G,EAAOokC,GAChCtO,GAAQmC,OAAOh/B,EAAO+G,GACtB/G,EAAMsyD,WAAavrD,CACrB,CAYIwrD,CAAYvyD,EAAOzM,EACrB,EAEAwtB,KAAK/gB,GACH,MAAMsyD,EAAatyD,EAAMsyD,WACzBz1B,GAAQsC,UAAUn/B,EAAOsyD,UAClBtyD,EAAMsyD,UACf,EAEA7pB,aAAazoC,EAAO0nD,EAAOn0D,GACzB,MAAMwT,EAAQ/G,EAAMsyD,WACpBz1B,GAAQ7Z,UAAUhjB,EAAO+G,EAAOxT,GAChCwT,EAAMxT,QAAUA,CAClB,EAEAgR,SAAU,CACR7J,MAAO,SACPmL,SAAS,EACT5D,KAAM,CACJ3S,OAAQ,QAEVguC,UAAU,EACV93B,QAAS,GACTu1B,SAAU,MACV/zB,KAAM,GACN1X,OAAQ,KAGV0hD,cAAe,CACb3hD,MAAO,SAGT0R,YAAa,CACXyD,aAAa,EACbE,YAAY,IChKhB,MAAMrjB,GAAM,IAAImxE,QAEhB,IAAAC,GAAe,CACb5hE,GAAI,WAEJqH,MAAM8H,EAAO0nD,EAAOn0D,GAClB,MAAMwT,EAAQ,IAAIirD,GAAM,CACtBzvD,IAAKvC,EAAMuC,IACXhP,UACAyM,UAGF68B,GAAQ7Z,UAAUhjB,EAAO+G,EAAOxT,GAChCspC,GAAQmC,OAAOh/B,EAAO+G,GACtB1lB,GAAI0Y,IAAIiG,EAAO+G,EACjB,EAEAga,KAAK/gB,GACH68B,GAAQsC,UAAUn/B,EAAO3e,GAAIie,IAAIU,IACjC3e,GAAI+wB,OAAOpS,EACb,EAEAyoC,aAAazoC,EAAO0nD,EAAOn0D,GACzB,MAAMwT,EAAQ1lB,GAAIie,IAAIU,GACtB68B,GAAQ7Z,UAAUhjB,EAAO+G,EAAOxT,GAChCwT,EAAMxT,QAAUA,CAClB,EAEAgR,SAAU,CACR7J,MAAO,SACPmL,SAAS,EACT5D,KAAM,CACJ3S,OAAQ,UAEVguC,UAAU,EACV93B,QAAS,EACTu1B,SAAU,MACV/zB,KAAM,GACN1X,OAAQ,MAGV0hD,cAAe,CACb3hD,MAAO,SAGT0R,YAAa,CACXyD,aAAa,EACbE,YAAY,IClChB,MAAMguD,GAAc,CAIlBC,QAAQ74D,GACN,IAAKA,EAAMpZ,OACT,OAAO,EAGT,IAAIK,EAAG4N,EACHikE,EAAO,IAAI54D,IACX7F,EAAI,EACJ8G,EAAQ,EAEZ,IAAKla,EAAI,EAAG4N,EAAMmL,EAAMpZ,OAAQK,EAAI4N,IAAO5N,EAAG,CAC5C,MAAM+5B,EAAKhhB,EAAM/Y,GAAG02B,QACpB,GAAIqD,GAAMA,EAAGupB,WAAY,CACvB,MAAMpsB,EAAM6C,EAAGspB,kBACfwuB,EAAKzgD,IAAI8F,EAAIj2B,GACbmS,GAAK8jB,EAAI9jB,IACP8G,EAEN,CAIA,MAAO,CACLjZ,EAHe,IAAI4wE,GAAMjyC,QAAO,CAACvhC,EAAGC,IAAMD,EAAIC,IAAKuzE,EAAK39D,KAIxDd,EAAGA,EAAI8G,EAEX,EAKAshC,QAAQziC,EAAO+4D,GACb,IAAK/4D,EAAMpZ,OACT,OAAO,EAGT,IAGIK,EAAG4N,EAAKmkE,EAHR9wE,EAAI6wE,EAAc7wE,EAClBmS,EAAI0+D,EAAc1+D,EAClB0nC,EAAcvqC,OAAOkE,kBAGzB,IAAKzU,EAAI,EAAG4N,EAAMmL,EAAMpZ,OAAQK,EAAI4N,IAAO5N,EAAG,CAC5C,MAAM+5B,EAAKhhB,EAAM/Y,GAAG02B,QACpB,GAAIqD,GAAMA,EAAGupB,WAAY,CACvB,MACM9kD,EAAIqY,GAAsBi7D,EADjB/3C,EAAGghB,kBAGdv8C,EAAIs8C,IACNA,EAAct8C,EACduzE,EAAiBh4C,GAGvB,CAEA,GAAIg4C,EAAgB,CAClB,MAAMC,EAAKD,EAAe1uB,kBAC1BpiD,EAAI+wE,EAAG/wE,EACPmS,EAAI4+D,EAAG5+D,EAGT,MAAO,CACLnS,IACAmS,IAEJ,GAIF,SAAS6+D,GAAavpC,EAAMwpC,GAU1B,OATIA,IACE7xE,EAAQ6xE,GAEV9xE,MAAM6P,UAAUyD,KAAKtC,MAAMs3B,EAAMwpC,GAEjCxpC,EAAKh1B,KAAKw+D,IAIPxpC,CACT,CAQA,SAASypC,GAAczxE,GACrB,OAAoB,kBAARA,GAAoBA,aAAe0xE,SAAW1xE,EAAI4R,QAAQ,OAAS,EACtE5R,EAAI8S,MAAM,MAEZ9S,CACT,CASA,SAAS2xE,GAAkBpzD,EAAO9K,GAChC,MAAM,QAACuiB,EAAO,aAAE5kB,EAAA,MAAcC,GAASoC,EACjCowB,EAAatlB,EAAM6oB,eAAeh2B,GAAcyyB,YAChD,MAAC2G,EAAA,MAAOl7B,GAASu0B,EAAW0G,iBAAiBl5B,GAEnD,MAAO,CACLkN,QACAisB,QACAjY,OAAQsR,EAAW0F,UAAUl4B,GAC7B65B,IAAK3sB,EAAMgI,KAAKtG,SAAS7O,GAAcmV,KAAKlV,GAC5CugE,eAAgBtiE,EAChB+2B,QAASxC,EAAWyC,aACpB2E,UAAW55B,EACXD,eACA4kB,UAEJ,CAKA,SAAS67C,GAAeC,EAAShgE,GAC/B,MAAMgP,EAAMgxD,EAAQvzD,MAAMuC,KACpB,KAACixD,EAAI,OAAEC,EAAA,MAAQ1sD,GAASwsD,GACxB,SAACvF,EAAA,UAAUD,GAAax6D,EACxBmgE,EAAWzkD,GAAO1b,EAAQmgE,UAC1B3C,EAAY9hD,GAAO1b,EAAQw9D,WAC3B4C,EAAa1kD,GAAO1b,EAAQogE,YAC5BC,EAAiB7sD,EAAMrmB,OACvBmzE,EAAkBJ,EAAO/yE,OACzBozE,EAAoBN,EAAK9yE,OAEzB8kB,EAAUwJ,GAAUzb,EAAQiS,SAClC,IAAIiE,EAASjE,EAAQiE,OACjB3C,EAAQ,EAGRitD,EAAqBP,EAAK7yC,QAAO,CAAC1lB,EAAO+4D,IAAa/4D,EAAQ+4D,EAASC,OAAOvzE,OAASszE,EAASxmD,MAAM9sB,OAASszE,EAASE,MAAMxzE,QAAQ,GAQ1I,GAPAqzE,GAAsBR,EAAQY,WAAWzzE,OAAS6yE,EAAQa,UAAU1zE,OAEhEkzE,IACFnqD,GAAUmqD,EAAiB7C,EAAU3uD,YACnCwxD,EAAiB,GAAKrgE,EAAQ8gE,aAC/B9gE,EAAQ+gE,mBAEPP,EAAoB,CAGtBtqD,GAAUqqD,GADavgE,EAAQghE,cAAgBj2E,KAAKC,IAAIwvE,EAAW2F,EAAStxD,YAAcsxD,EAAStxD,aAEjG2xD,EAAqBD,GAAqBJ,EAAStxD,YACnD2xD,EAAqB,GAAKxgE,EAAQihE,YAElCX,IACFpqD,GAAUlW,EAAQkhE,gBACjBZ,EAAkBF,EAAWvxD,YAC5ByxD,EAAkB,GAAKtgE,EAAQmhE,eAInC,IAAIC,EAAe,EACnB,MAAMC,EAAe,SAASnoD,GAC5B3F,EAAQxoB,KAAKC,IAAIuoB,EAAOvE,EAAI8F,YAAYoE,GAAM3F,MAAQ6tD,EACxD,EA+BA,OA7BApyD,EAAImG,OAEJnG,EAAIN,KAAO8uD,EAAU5oD,OACrB/V,EAAKmhE,EAAQxsD,MAAO6tD,GAGpBryD,EAAIN,KAAOyxD,EAASvrD,OACpB/V,EAAKmhE,EAAQY,WAAWzkC,OAAO6jC,EAAQa,WAAYQ,GAGnDD,EAAephE,EAAQghE,cAAiBvG,EAAW,EAAIz6D,EAAQqqC,WAAc,EAC7ExrC,EAAKohE,GAAOQ,IACV5hE,EAAK4hE,EAASC,OAAQW,GACtBxiE,EAAK4hE,EAASxmD,MAAOonD,GACrBxiE,EAAK4hE,EAASE,MAAOU,EAAA,IAIvBD,EAAe,EAGfpyD,EAAIN,KAAO0xD,EAAWxrD,OACtB/V,EAAKmhE,EAAQE,OAAQmB,GAErBryD,EAAIuG,UAGJhC,GAAStB,EAAQsB,MAEV,CAACA,QAAO2C,SACjB,CAyBA,SAASorD,GAAgB70D,EAAOzM,EAAS0B,EAAM6/D,GAC7C,MAAM,EAAC9yE,EAAA,MAAG8kB,GAAS7R,GACZ6R,MAAOiuD,EAAYxoC,WAAW,KAAC3mB,EAAI,MAAEF,IAAU1F,EACtD,IAAIg1D,EAAS,SAcb,MAZe,WAAXF,EACFE,EAAShzE,IAAM4jB,EAAOF,GAAS,EAAI,OAAS,QACnC1jB,GAAK8kB,EAAQ,EACtBkuD,EAAS,OACAhzE,GAAK+yE,EAAajuD,EAAQ,IACnCkuD,EAAS,SAtBb,SAA6BA,EAAQh1D,EAAOzM,EAAS0B,GACnD,MAAM,EAACjT,EAAA,MAAG8kB,GAAS7R,EACbggE,EAAQ1hE,EAAQ2hE,UAAY3hE,EAAQ4hE,aAC1C,MAAe,SAAXH,GAAqBhzE,EAAI8kB,EAAQmuD,EAAQj1D,EAAM8G,OAIpC,UAAXkuD,GAAsBhzE,EAAI8kB,EAAQmuD,EAAQ,QAA9C,CAGF,CAeMG,CAAoBJ,EAAQh1D,EAAOzM,EAAS0B,KAC9C+/D,EAAS,UAGJA,CACT,CAKA,SAASK,GAAmBr1D,EAAOzM,EAAS0B,GAC1C,MAAM6/D,EAAS7/D,EAAK6/D,QAAUvhE,EAAQuhE,QA/CxC,SAAyB90D,EAAO/K,GAC9B,MAAM,EAACd,EAAA,OAAGsV,GAAUxU,EAEpB,OAAId,EAAIsV,EAAS,EACR,MACEtV,EAAK6L,EAAMyJ,OAASA,EAAS,EAC/B,SAEF,QACT,CAsCkD6rD,CAAgBt1D,EAAO/K,GAEvE,MAAO,CACL+/D,OAAQ//D,EAAK+/D,QAAUzhE,EAAQyhE,QAAUH,GAAgB70D,EAAOzM,EAAS0B,EAAM6/D,GAC/EA,SAEJ,CA4BA,SAASS,GAAmBhiE,EAAS0B,EAAMugE,EAAWx1D,GACpD,MAAM,UAACk1D,EAAS,aAAEC,EAAA,aAAcrrD,GAAgBvW,GAC1C,OAACyhE,EAAA,OAAQF,GAAUU,EACnBC,EAAiBP,EAAYC,GAC7B,QAACnnD,EAAO,SAAEG,EAAQ,WAAEF,EAAA,YAAYC,GAAea,GAAcjF,GAEnE,IAAI9nB,EAhCN,SAAgBiT,EAAM+/D,GACpB,IAAI,EAAChzE,EAAA,MAAG8kB,GAAS7R,EAMjB,MALe,UAAX+/D,EACFhzE,GAAK8kB,EACe,WAAXkuD,IACThzE,GAAM8kB,EAAQ,GAET9kB,CACT,CAwBU0zE,CAAOzgE,EAAM+/D,GACrB,MAAM7gE,EAvBR,SAAgBc,EAAM6/D,EAAQW,GAE5B,IAAI,EAACthE,EAAA,OAAGsV,GAAUxU,EAQlB,MAPe,QAAX6/D,EACF3gE,GAAKshE,EAELthE,GADoB,WAAX2gE,EACJrrD,EAASgsD,EAERhsD,EAAS,EAEVtV,CACT,CAYYwhE,CAAO1gE,EAAM6/D,EAAQW,GAc/B,MAZe,WAAXX,EACa,SAAXE,EACFhzE,GAAKyzE,EACe,UAAXT,IACThzE,GAAKyzE,GAEa,SAAXT,EACThzE,GAAK1D,KAAKC,IAAIyvB,EAASC,GAAcinD,EACjB,UAAXF,IACThzE,GAAK1D,KAAKC,IAAI4vB,EAAUD,GAAegnD,GAGlC,CACLlzE,EAAGyW,GAAYzW,EAAG,EAAGge,EAAM8G,MAAQ7R,EAAK6R,OACxC3S,EAAGsE,GAAYtE,EAAG,EAAG6L,EAAMyJ,OAASxU,EAAKwU,QAE7C,CAEA,SAASmsD,GAAYrC,EAAS74D,EAAOnH,GACnC,MAAMiS,EAAUwJ,GAAUzb,EAAQiS,SAElC,MAAiB,WAAV9K,EACH64D,EAAQvxE,EAAIuxE,EAAQzsD,MAAQ,EAClB,UAAVpM,EACE64D,EAAQvxE,EAAIuxE,EAAQzsD,MAAQtB,EAAQE,MACpC6tD,EAAQvxE,EAAIwjB,EAAQI,IAC5B,CAKA,SAASiwD,GAAwB9jE,GAC/B,OAAOihE,GAAa,GAAIE,GAAcnhE,GACxC,CAUA,SAAS+jE,GAAkBx2C,EAAW1d,GACpC,MAAM8B,EAAW9B,GAAWA,EAAQkmB,SAAWlmB,EAAQkmB,QAAQyrC,SAAW3xD,EAAQkmB,QAAQyrC,QAAQj0C,UAClG,OAAO5b,EAAW4b,EAAU5b,SAASA,GAAY4b,CACnD,CAEA,MAAMy2C,GAAmB,CAEvBC,YAAarlE,EACboW,MAAMkvD,GACJ,GAAIA,EAAav1E,OAAS,EAAG,CAC3B,MAAMwU,EAAO+gE,EAAa,GACpBtrC,EAASz1B,EAAK8K,MAAMgI,KAAK2iB,OACzBurC,EAAavrC,EAASA,EAAOjqC,OAAS,EAE5C,GAAImO,MAAQA,KAAK0E,SAAiC,YAAtB1E,KAAK0E,QAAQqP,KACvC,OAAO1N,EAAK4yB,QAAQmE,OAAS,GACxB,GAAI/2B,EAAK+2B,MACd,OAAO/2B,EAAK+2B,MACP,GAAIiqC,EAAa,GAAKhhE,EAAKw3B,UAAYwpC,EAC5C,OAAOvrC,EAAOz1B,EAAKw3B,WAIvB,MAAO,EACT,EACAypC,WAAYxlE,EAGZwjE,WAAYxjE,EAGZylE,YAAazlE,EACbs7B,MAAMoqC,GACJ,GAAIxnE,MAAQA,KAAK0E,SAAiC,YAAtB1E,KAAK0E,QAAQqP,KACvC,OAAOyzD,EAAYpqC,MAAQ,KAAOoqC,EAAYhD,gBAAkBgD,EAAYhD,eAG9E,IAAIpnC,EAAQoqC,EAAYvuC,QAAQmE,OAAS,GAErCA,IACFA,GAAS,MAEX,MAAMl7B,EAAQslE,EAAYhD,eAI1B,OAHKviE,EAAcC,KACjBk7B,GAASl7B,GAEJk7B,CACT,EACAqqC,WAAWD,GACT,MACM9iE,EADO8iE,EAAYr2D,MAAM6oB,eAAewtC,EAAYxjE,cACrCyyB,WAAWtK,SAASq7C,EAAY3pC,WACrD,MAAO,CACLjrB,YAAalO,EAAQkO,YACrBD,gBAAiBjO,EAAQiO,gBACzBwJ,YAAazX,EAAQyX,YACrB0T,WAAYnrB,EAAQmrB,WACpBC,iBAAkBprB,EAAQorB,iBAC1BohC,aAAc,EAElB,EACAwW,iBACE,OAAO1nE,KAAK0E,QAAQijE,SACtB,EACAC,gBAAgBJ,GACd,MACM9iE,EADO8iE,EAAYr2D,MAAM6oB,eAAewtC,EAAYxjE,cACrCyyB,WAAWtK,SAASq7C,EAAY3pC,WACrD,MAAO,CACLziB,WAAY1W,EAAQ0W,WACpBC,SAAU3W,EAAQ2W,SAEtB,EACAwsD,WAAY/lE,EAGZyjE,UAAWzjE,EAGXgmE,aAAchmE,EACd8iE,OAAQ9iE,EACRimE,YAAajmE,GAYf,SAASkmE,GAA2Bv3C,EAAW1b,EAAMrB,EAAKixC,GACxD,MAAMx7B,EAASsH,EAAU1b,GAAM1S,KAAKqR,EAAKixC,GAEzC,MAAsB,qBAAXx7B,EACF+9C,GAAiBnyD,GAAM1S,KAAKqR,EAAKixC,GAGnCx7B,CACT,CAEO,MAAM8+C,WAAgB3yB,GAK3B1d,mBAAqBisC,GAErBlkE,YAAYs0B,GACVsP,QAEAvjC,KAAKkoE,QAAU,EACfloE,KAAKoxB,QAAU,GACfpxB,KAAKmoE,oBAAiB72E,EACtB0O,KAAKooE,WAAQ92E,EACb0O,KAAKqoE,uBAAoB/2E,EACzB0O,KAAKsoE,cAAgB,GACrBtoE,KAAK20B,iBAAcrjC,EACnB0O,KAAKu4B,cAAWjnC,EAChB0O,KAAKmR,MAAQ8iB,EAAO9iB,MACpBnR,KAAK0E,QAAUuvB,EAAOvvB,QACtB1E,KAAKuoE,gBAAaj3E,EAClB0O,KAAKkY,WAAQ5mB,EACb0O,KAAKslE,gBAAah0E,EAClB0O,KAAK2kE,UAAOrzE,EACZ0O,KAAKulE,eAAYj0E,EACjB0O,KAAK4kE,YAAStzE,EACd0O,KAAKmmE,YAAS70E,EACd0O,KAAKimE,YAAS30E,EACd0O,KAAK7M,OAAI7B,EACT0O,KAAKsF,OAAIhU,EACT0O,KAAK4a,YAAStpB,EACd0O,KAAKiY,WAAQ3mB,EACb0O,KAAKwoE,YAASl3E,EACd0O,KAAKyoE,YAASn3E,EAGd0O,KAAK0oE,iBAAcp3E,EACnB0O,KAAK2oE,sBAAmBr3E,EACxB0O,KAAK4oE,qBAAkBt3E,CACzB,CAEAqnC,WAAWj0B,GACT1E,KAAK0E,QAAUA,EACf1E,KAAKqoE,uBAAoB/2E,EACzB0O,KAAKu4B,cAAWjnC,CAClB,CAKAitC,qBACE,MAAM9G,EAASz3B,KAAKqoE,kBAEpB,GAAI5wC,EACF,OAAOA,EAGT,MAAMtmB,EAAQnR,KAAKmR,MACbzM,EAAU1E,KAAK0E,QAAQse,WAAWhjB,KAAKya,cACvC6C,EAAO5Y,EAAQ0xC,SAAWjlC,EAAMzM,QAAQgO,WAAahO,EAAQ6R,WAC7DA,EAAa,IAAIyd,GAAWh0B,KAAKmR,MAAOmM,GAK9C,OAJIA,EAAKkE,aACPxhB,KAAKqoE,kBAAoBpqE,OAAOqgC,OAAO/nB,IAGlCA,CACT,CAKAkE,aACE,OAAOza,KAAKu4B,WACZv4B,KAAKu4B,UAtLqB9T,EAsLWzkB,KAAKmR,MAAMsJ,aAtLdiqD,EAsL4B1kE,KAtLnBonE,EAsLyBpnE,KAAKsoE,cArLpEznD,GAAc4D,EAAQ,CAC3BigD,UACA0C,eACAxnE,KAAM,cAJV,IAA8B6kB,EAAQigD,EAAS0C,CAuL7C,CAEAyB,SAAS91D,EAASrO,GAChB,MAAM,UAAC+rB,GAAa/rB,EAEdyiE,EAAca,GAA2Bv3C,EAAW,cAAezwB,KAAM+S,GACzEmF,EAAQ8vD,GAA2Bv3C,EAAW,QAASzwB,KAAM+S,GAC7Du0D,EAAaU,GAA2Bv3C,EAAW,aAAczwB,KAAM+S,GAE7E,IAAI4L,EAAQ,GAKZ,OAJAA,EAAQwlD,GAAaxlD,EAAO0lD,GAAc8C,IAC1CxoD,EAAQwlD,GAAaxlD,EAAO0lD,GAAcnsD,IAC1CyG,EAAQwlD,GAAaxlD,EAAO0lD,GAAciD,IAEnC3oD,CACT,CAEAmqD,cAAc1B,EAAc1iE,GAC1B,OAAOsiE,GACLgB,GAA2BtjE,EAAQ+rB,UAAW,aAAczwB,KAAMonE,GAEtE,CAEA2B,QAAQ3B,EAAc1iE,GACpB,MAAM,UAAC+rB,GAAa/rB,EACdskE,EAAY,GAgBlB,OAdAzlE,EAAK6jE,GAAer0D,IAClB,MAAMoyD,EAAW,CACfC,OAAQ,GACRzmD,MAAO,GACP0mD,MAAO,IAEH4D,EAAShC,GAAkBx2C,EAAW1d,GAC5CoxD,GAAagB,EAASC,OAAQf,GAAc2D,GAA2BiB,EAAQ,cAAejpE,KAAM+S,KACpGoxD,GAAagB,EAASxmD,MAAOqpD,GAA2BiB,EAAQ,QAASjpE,KAAM+S,IAC/EoxD,GAAagB,EAASE,MAAOhB,GAAc2D,GAA2BiB,EAAQ,aAAcjpE,KAAM+S,KAElGi2D,EAAUpjE,KAAKu/D,EAAA,IAGV6D,CACT,CAEAE,aAAa9B,EAAc1iE,GACzB,OAAOsiE,GACLgB,GAA2BtjE,EAAQ+rB,UAAW,YAAazwB,KAAMonE,GAErE,CAGA+B,UAAU/B,EAAc1iE,GACtB,MAAM,UAAC+rB,GAAa/rB,EAEdojE,EAAeE,GAA2Bv3C,EAAW,eAAgBzwB,KAAMonE,GAC3ExC,EAASoD,GAA2Bv3C,EAAW,SAAUzwB,KAAMonE,GAC/DW,EAAcC,GAA2Bv3C,EAAW,cAAezwB,KAAMonE,GAE/E,IAAIzoD,EAAQ,GAKZ,OAJAA,EAAQwlD,GAAaxlD,EAAO0lD,GAAcyD,IAC1CnpD,EAAQwlD,GAAaxlD,EAAO0lD,GAAcO,IAC1CjmD,EAAQwlD,GAAaxlD,EAAO0lD,GAAc0D,IAEnCppD,CACT,CAKAyqD,aAAa1kE,GACX,MAAM0R,EAASpW,KAAKoxB,QACdjY,EAAOnZ,KAAKmR,MAAMgI,KAClBuvD,EAAc,GACdC,EAAmB,GACnBC,EAAkB,GACxB,IACI12E,EAAG4N,EADHsnE,EAAe,GAGnB,IAAKl1E,EAAI,EAAG4N,EAAMsW,EAAOvkB,OAAQK,EAAI4N,IAAO5N,EAC1Ck1E,EAAaxhE,KAAK2+D,GAAkBvkE,KAAKmR,MAAOiF,EAAOlkB,KAyBzD,OArBIwS,EAAQmf,SACVujD,EAAeA,EAAavjD,QAAO,CAAC+E,EAAS3kB,EAAO6D,IAAUpD,EAAQmf,OAAO+E,EAAS3kB,EAAO6D,EAAOqR,MAIlGzU,EAAQ2kE,WACVjC,EAAeA,EAAatmC,MAAK,CAACvwC,EAAGC,IAAMkU,EAAQ2kE,SAAS94E,EAAGC,EAAG2oB,MAIpE5V,EAAK6jE,GAAer0D,IAClB,MAAMk2D,EAAShC,GAAkBviE,EAAQ+rB,UAAW1d,GACpD21D,EAAY9iE,KAAKoiE,GAA2BiB,EAAQ,aAAcjpE,KAAM+S,IACxE41D,EAAiB/iE,KAAKoiE,GAA2BiB,EAAQ,kBAAmBjpE,KAAM+S,IAClF61D,EAAgBhjE,KAAKoiE,GAA2BiB,EAAQ,iBAAkBjpE,KAAM+S,GAAA,IAGlF/S,KAAK0oE,YAAcA,EACnB1oE,KAAK2oE,iBAAmBA,EACxB3oE,KAAK4oE,gBAAkBA,EACvB5oE,KAAKuoE,WAAanB,EACXA,CACT,CAEA7zC,OAAOjmB,EAAS8iD,GACd,MAAM1rD,EAAU1E,KAAK0E,QAAQse,WAAWhjB,KAAKya,cACvCrE,EAASpW,KAAKoxB,QACpB,IAAIjb,EACAixD,EAAe,GAEnB,GAAKhxD,EAAOvkB,OAML,CACL,MAAMq6C,EAAW23B,GAAYn/D,EAAQwnC,UAAU7pC,KAAKrC,KAAMoW,EAAQpW,KAAKmoE,gBACvEf,EAAepnE,KAAKopE,aAAa1kE,GAEjC1E,KAAKkY,MAAQlY,KAAK6oE,SAASzB,EAAc1iE,GACzC1E,KAAKslE,WAAatlE,KAAK8oE,cAAc1B,EAAc1iE,GACnD1E,KAAK2kE,KAAO3kE,KAAK+oE,QAAQ3B,EAAc1iE,GACvC1E,KAAKulE,UAAYvlE,KAAKkpE,aAAa9B,EAAc1iE,GACjD1E,KAAK4kE,OAAS5kE,KAAKmpE,UAAU/B,EAAc1iE,GAE3C,MAAM0B,EAAOpG,KAAKooE,MAAQ3D,GAAezkE,KAAM0E,GACzC4kE,EAAkBrrE,OAAOmB,OAAO,CAAC,EAAG8sC,EAAU9lC,GAC9CugE,EAAYH,GAAmBxmE,KAAKmR,MAAOzM,EAAS4kE,GACpDC,EAAkB7C,GAAmBhiE,EAAS4kE,EAAiB3C,EAAW3mE,KAAKmR,OAErFnR,KAAKmmE,OAASQ,EAAUR,OACxBnmE,KAAKimE,OAASU,EAAUV,OAExB9vD,EAAa,CACX+xD,QAAS,EACT/0E,EAAGo2E,EAAgBp2E,EACnBmS,EAAGikE,EAAgBjkE,EACnB2S,MAAO7R,EAAK6R,MACZ2C,OAAQxU,EAAKwU,OACb4tD,OAAQt8B,EAAS/4C,EACjBs1E,OAAQv8B,EAAS5mC,QA9BE,IAAjBtF,KAAKkoE,UACP/xD,EAAa,CACX+xD,QAAS,IAgCfloE,KAAKsoE,cAAgBlB,EACrBpnE,KAAKu4B,cAAWjnC,EAEZ6kB,GACFnW,KAAKu+B,qBAAqBhL,OAAOvzB,KAAMmW,GAGrC7I,GAAW5I,EAAQ8kE,UACrB9kE,EAAQ8kE,SAASnnE,KAAKrC,KAAM,CAACmR,MAAOnR,KAAKmR,MAAOuzD,QAAS1kE,KAAMowD,UAEnE,CAEAqZ,UAAUC,EAAch2D,EAAKtN,EAAM1B,GACjC,MAAMilE,EAAgB3pE,KAAK4pE,iBAAiBF,EAActjE,EAAM1B,GAEhEgP,EAAIqI,OAAO4tD,EAAczqB,GAAIyqB,EAAcxqB,IAC3CzrC,EAAIqI,OAAO4tD,EAAcvqB,GAAIuqB,EAActqB,IAC3C3rC,EAAIqI,OAAO4tD,EAAcE,GAAIF,EAAcG,GAC7C,CAEAF,iBAAiBF,EAActjE,EAAM1B,GACnC,MAAM,OAACyhE,EAAM,OAAEF,GAAUjmE,MACnB,UAACqmE,EAAA,aAAWprD,GAAgBvW,GAC5B,QAACya,EAAO,SAAEG,EAAQ,WAAEF,EAAA,YAAYC,GAAea,GAAcjF,IAC5D9nB,EAAG42E,EAAKzkE,EAAG0kE,GAAON,GACnB,MAACzxD,EAAA,OAAO2C,GAAUxU,EACxB,IAAI84C,EAAIE,EAAIyqB,EAAI1qB,EAAIE,EAAIyqB,EAgDxB,MA9Ce,WAAX7D,GACF5mB,EAAK2qB,EAAOpvD,EAAS,EAEN,SAAXurD,GACFjnB,EAAK6qB,EACL3qB,EAAKF,EAAKmnB,EAGVlnB,EAAKE,EAAKgnB,EACVyD,EAAKzqB,EAAKgnB,IAEVnnB,EAAK6qB,EAAM9xD,EACXmnC,EAAKF,EAAKmnB,EAGVlnB,EAAKE,EAAKgnB,EACVyD,EAAKzqB,EAAKgnB,GAGZwD,EAAK3qB,IAGHE,EADa,SAAX+mB,EACG4D,EAAMt6E,KAAKC,IAAIyvB,EAASC,GAAeinD,EACxB,UAAXF,EACJ4D,EAAM9xD,EAAQxoB,KAAKC,IAAI4vB,EAAUD,GAAegnD,EAEhDrmE,KAAKwoE,OAGG,QAAXvC,GACF9mB,EAAK6qB,EACL3qB,EAAKF,EAAKknB,EAGVnnB,EAAKE,EAAKinB,EACVwD,EAAKzqB,EAAKinB,IAEVlnB,EAAK6qB,EAAMpvD,EACXykC,EAAKF,EAAKknB,EAGVnnB,EAAKE,EAAKinB,EACVwD,EAAKzqB,EAAKinB,GAEZyD,EAAK3qB,GAEA,CAACD,KAAIE,KAAIyqB,KAAI1qB,KAAIE,KAAIyqB,KAC9B,CAEA5oB,UAAU95B,EAAI1T,EAAKhP,GACjB,MAAMwT,EAAQlY,KAAKkY,MACbrmB,EAASqmB,EAAMrmB,OACrB,IAAIqwE,EAAWsD,EAActzE,EAE7B,GAAIL,EAAQ,CACV,MAAMuvE,EAAY30C,GAAc/nB,EAAQgoB,IAAK1sB,KAAK7M,EAAG6M,KAAKiY,OAa1D,IAXAmP,EAAGj0B,EAAI4zE,GAAY/mE,KAAM0E,EAAQqzC,WAAYrzC,GAE7CgP,EAAI+J,UAAY2jD,EAAU3jD,UAAU/Y,EAAQqzC,YAC5CrkC,EAAIgK,aAAe,SAEnBwkD,EAAY9hD,GAAO1b,EAAQw9D,WAC3BsD,EAAe9gE,EAAQ8gE,aAEvB9xD,EAAI8J,UAAY9Y,EAAQulE,WACxBv2D,EAAIN,KAAO8uD,EAAU5oD,OAEhBpnB,EAAI,EAAGA,EAAIL,IAAUK,EACxBwhB,EAAIuL,SAAS/G,EAAMhmB,GAAIkvE,EAAUjuE,EAAEi0B,EAAGj0B,GAAIi0B,EAAG9hB,EAAI48D,EAAU3uD,WAAa,GACxE6T,EAAG9hB,GAAK48D,EAAU3uD,WAAaiyD,EAE3BtzE,EAAI,IAAML,IACZu1B,EAAG9hB,GAAKZ,EAAQ+gE,kBAAoBD,GAI5C,CAKA0E,cAAcx2D,EAAK0T,EAAIl1B,EAAGkvE,EAAW18D,GACnC,MAAM+iE,EAAaznE,KAAK0oE,YAAYx2E,GAC9B01E,EAAkB5nE,KAAK2oE,iBAAiBz2E,IACxC,UAACgtE,EAAA,SAAWC,GAAYz6D,EACxBmgE,EAAWzkD,GAAO1b,EAAQmgE,UAC1BsF,EAASpD,GAAY/mE,KAAM,OAAQ0E,GACnC0lE,EAAYhJ,EAAUjuE,EAAEg3E,GACxBE,EAAUnL,EAAY2F,EAAStxD,YAAcsxD,EAAStxD,WAAa2rD,GAAa,EAAI,EACpFoL,EAASljD,EAAG9hB,EAAI+kE,EAEtB,GAAI3lE,EAAQ06D,cAAe,CACzB,MAAMwC,EAAc,CAClBtmD,OAAQ7rB,KAAKE,IAAIwvE,EAAUD,GAAa,EACxC9jD,WAAYwsD,EAAgBxsD,WAC5BC,SAAUusD,EAAgBvsD,SAC1Bc,YAAa,GAIT2pB,EAAUs7B,EAAUt0C,WAAWs9C,EAAWjL,GAAYA,EAAW,EACjEp5B,EAAUukC,EAASpL,EAAY,EAGrCxrD,EAAI2K,YAAc3Z,EAAQ6lE,mBAC1B72D,EAAI8J,UAAY9Y,EAAQ6lE,mBACxB1vD,GAAUnH,EAAKkuD,EAAa97B,EAASC,GAGrCryB,EAAI2K,YAAcopD,EAAW70D,YAC7Bc,EAAI8J,UAAYiqD,EAAW90D,gBAC3BkI,GAAUnH,EAAKkuD,EAAa97B,EAASC,OAChC,CAELryB,EAAI6D,UAAYhV,EAASklE,EAAWtrD,aAAe1sB,KAAKC,OAAOuO,OAAO8S,OAAO02D,EAAWtrD,cAAiBsrD,EAAWtrD,aAAe,EACnIzI,EAAI2K,YAAcopD,EAAW70D,YAC7Bc,EAAIktC,YAAY6mB,EAAW53C,YAAc,IACzCnc,EAAImtC,eAAiB4mB,EAAW33C,kBAAoB,EAGpD,MAAM06C,EAASpJ,EAAUt0C,WAAWs9C,EAAWjL,GACzCsL,EAASrJ,EAAUt0C,WAAWs0C,EAAUv0C,MAAMu9C,EAAW,GAAIjL,EAAW,GACxEjO,EAAehxC,GAAcunD,EAAWvW,cAE1CjzD,OAAO8S,OAAOmgD,GAAc9K,MAAK/2D,GAAW,IAANA,KACxCqkB,EAAIgI,YACJhI,EAAI8J,UAAY9Y,EAAQ6lE,mBACxBrrD,GAAmBxL,EAAK,CACtBvgB,EAAGq3E,EACHllE,EAAGglE,EACHt4E,EAAGmtE,EACH3vE,EAAG0vE,EACH5jD,OAAQ41C,IAEVx9C,EAAIwI,OACJxI,EAAI0I,SAGJ1I,EAAI8J,UAAYiqD,EAAW90D,gBAC3Be,EAAIgI,YACJwD,GAAmBxL,EAAK,CACtBvgB,EAAGs3E,EACHnlE,EAAGglE,EAAS,EACZt4E,EAAGmtE,EAAW,EACd3vE,EAAG0vE,EAAY,EACf5jD,OAAQ41C,IAEVx9C,EAAIwI,SAGJxI,EAAI8J,UAAY9Y,EAAQ6lE,mBACxB72D,EAAI+K,SAAS+rD,EAAQF,EAAQnL,EAAUD,GACvCxrD,EAAIg3D,WAAWF,EAAQF,EAAQnL,EAAUD,GAEzCxrD,EAAI8J,UAAYiqD,EAAW90D,gBAC3Be,EAAI+K,SAASgsD,EAAQH,EAAS,EAAGnL,EAAW,EAAGD,EAAY,IAK/DxrD,EAAI8J,UAAYxd,KAAK4oE,gBAAgB12E,EACvC,CAEAy4E,SAASvjD,EAAI1T,EAAKhP,GAChB,MAAM,KAACigE,GAAQ3kE,MACT,YAAC2lE,EAAA,UAAaiF,EAAA,cAAWlF,EAAA,UAAexG,EAAA,SAAWC,EAAA,WAAUpwB,GAAcrqC,EAC3EmgE,EAAWzkD,GAAO1b,EAAQmgE,UAChC,IAAIgG,EAAiBhG,EAAStxD,WAC1Bu3D,EAAe,EAEnB,MAAM1J,EAAY30C,GAAc/nB,EAAQgoB,IAAK1sB,KAAK7M,EAAG6M,KAAKiY,OAEpD8yD,EAAiB,SAASntD,GAC9BlK,EAAIuL,SAASrB,EAAMwjD,EAAUjuE,EAAEi0B,EAAGj0B,EAAI23E,GAAe1jD,EAAG9hB,EAAIulE,EAAiB,GAC7EzjD,EAAG9hB,GAAKulE,EAAiBlF,CAC3B,EAEMqF,EAA0B5J,EAAU3jD,UAAUmtD,GACpD,IAAIzF,EAAU8F,EAAWtsD,EAAOzsB,EAAGiM,EAAG0F,EAAMiW,EAiB5C,IAfApG,EAAI+J,UAAYmtD,EAChBl3D,EAAIgK,aAAe,SACnBhK,EAAIN,KAAOyxD,EAASvrD,OAEpB8N,EAAGj0B,EAAI4zE,GAAY/mE,KAAMgrE,EAAyBtmE,GAGlDgP,EAAI8J,UAAY9Y,EAAQijE,UACxBpkE,EAAKvD,KAAKslE,WAAYyF,GAEtBD,EAAepF,GAA6C,UAA5BsF,EACd,WAAdJ,EAA0BzL,EAAW,EAAIpwB,EAAeowB,EAAW,EAAIpwB,EACvE,EAGC78C,EAAI,EAAG2R,EAAO8gE,EAAK9yE,OAAQK,EAAI2R,IAAQ3R,EAAG,CAc7C,IAbAizE,EAAWR,EAAKzyE,GAChB+4E,EAAYjrE,KAAK4oE,gBAAgB12E,GAEjCwhB,EAAI8J,UAAYytD,EAChB1nE,EAAK4hE,EAASC,OAAQ2F,GAEtBpsD,EAAQwmD,EAASxmD,MAEb+mD,GAAiB/mD,EAAM9sB,SACzBmO,KAAKkqE,cAAcx2D,EAAK0T,EAAIl1B,EAAGkvE,EAAW18D,GAC1CmmE,EAAiBp7E,KAAKC,IAAIm1E,EAAStxD,WAAY2rD,IAG5C/gE,EAAI,EAAG2b,EAAO6E,EAAM9sB,OAAQsM,EAAI2b,IAAQ3b,EAC3C4sE,EAAepsD,EAAMxgB,IAErB0sE,EAAiBhG,EAAStxD,WAG5BhQ,EAAK4hE,EAASE,MAAO0F,EACvB,CAGAD,EAAe,EACfD,EAAiBhG,EAAStxD,WAG1BhQ,EAAKvD,KAAKulE,UAAWwF,GACrB3jD,EAAG9hB,GAAKqgE,CACV,CAEAuF,WAAW9jD,EAAI1T,EAAKhP,GAClB,MAAMkgE,EAAS5kE,KAAK4kE,OACd/yE,EAAS+yE,EAAO/yE,OACtB,IAAIizE,EAAY5yE,EAEhB,GAAIL,EAAQ,CACV,MAAMuvE,EAAY30C,GAAc/nB,EAAQgoB,IAAK1sB,KAAK7M,EAAG6M,KAAKiY,OAa1D,IAXAmP,EAAGj0B,EAAI4zE,GAAY/mE,KAAM0E,EAAQymE,YAAazmE,GAC9C0iB,EAAG9hB,GAAKZ,EAAQkhE,gBAEhBlyD,EAAI+J,UAAY2jD,EAAU3jD,UAAU/Y,EAAQymE,aAC5Cz3D,EAAIgK,aAAe,SAEnBonD,EAAa1kD,GAAO1b,EAAQogE,YAE5BpxD,EAAI8J,UAAY9Y,EAAQ0mE,YACxB13D,EAAIN,KAAO0xD,EAAWxrD,OAEjBpnB,EAAI,EAAGA,EAAIL,IAAUK,EACxBwhB,EAAIuL,SAAS2lD,EAAO1yE,GAAIkvE,EAAUjuE,EAAEi0B,EAAGj0B,GAAIi0B,EAAG9hB,EAAIw/D,EAAWvxD,WAAa,GAC1E6T,EAAG9hB,GAAKw/D,EAAWvxD,WAAa7O,EAAQmhE,cAG9C,CAEArlB,eAAep5B,EAAI1T,EAAK23D,EAAa3mE,GACnC,MAAM,OAACyhE,EAAM,OAAEF,GAAUjmE,MACnB,EAAC7M,EAAA,EAAGmS,GAAK8hB,GACT,MAACnP,EAAA,OAAO2C,GAAUywD,GAClB,QAAClsD,EAAA,SAASG,EAAA,WAAUF,EAAA,YAAYC,GAAea,GAAcxb,EAAQuW,cAE3EvH,EAAI8J,UAAY9Y,EAAQiO,gBACxBe,EAAI2K,YAAc3Z,EAAQkO,YAC1Bc,EAAI6D,UAAY7S,EAAQyX,YAExBzI,EAAIgI,YACJhI,EAAIoI,OAAO3oB,EAAIgsB,EAAS7Z,GACT,QAAX2gE,GACFjmE,KAAKypE,UAAUriD,EAAI1T,EAAK23D,EAAa3mE,GAEvCgP,EAAIqI,OAAO5oB,EAAI8kB,EAAQqH,EAAUha,GACjCoO,EAAI43D,iBAAiBn4E,EAAI8kB,EAAO3S,EAAGnS,EAAI8kB,EAAO3S,EAAIga,GACnC,WAAX2mD,GAAkC,UAAXE,GACzBnmE,KAAKypE,UAAUriD,EAAI1T,EAAK23D,EAAa3mE,GAEvCgP,EAAIqI,OAAO5oB,EAAI8kB,EAAO3S,EAAIsV,EAASyE,GACnC3L,EAAI43D,iBAAiBn4E,EAAI8kB,EAAO3S,EAAIsV,EAAQznB,EAAI8kB,EAAQoH,EAAa/Z,EAAIsV,GAC1D,WAAXqrD,GACFjmE,KAAKypE,UAAUriD,EAAI1T,EAAK23D,EAAa3mE,GAEvCgP,EAAIqI,OAAO5oB,EAAIisB,EAAY9Z,EAAIsV,GAC/BlH,EAAI43D,iBAAiBn4E,EAAGmS,EAAIsV,EAAQznB,EAAGmS,EAAIsV,EAASwE,GACrC,WAAX6mD,GAAkC,SAAXE,GACzBnmE,KAAKypE,UAAUriD,EAAI1T,EAAK23D,EAAa3mE,GAEvCgP,EAAIqI,OAAO5oB,EAAGmS,EAAI6Z,GAClBzL,EAAI43D,iBAAiBn4E,EAAGmS,EAAGnS,EAAIgsB,EAAS7Z,GACxCoO,EAAImI,YAEJnI,EAAIwI,OAEAxX,EAAQyX,YAAc,GACxBzI,EAAI0I,QAER,CAMAmvD,uBAAuB7mE,GACrB,MAAMyM,EAAQnR,KAAKmR,MACbof,EAAQvwB,KAAK20B,YACb62C,EAAQj7C,GAASA,EAAMp9B,EACvBs4E,EAAQl7C,GAASA,EAAMjrB,EAC7B,GAAIkmE,GAASC,EAAO,CAClB,MAAMv/B,EAAW23B,GAAYn/D,EAAQwnC,UAAU7pC,KAAKrC,KAAMA,KAAKoxB,QAASpxB,KAAKmoE,gBAC7E,IAAKj8B,EACH,OAEF,MAAM9lC,EAAOpG,KAAKooE,MAAQ3D,GAAezkE,KAAM0E,GACzC4kE,EAAkBrrE,OAAOmB,OAAO,CAAC,EAAG8sC,EAAUlsC,KAAKooE,OACnDzB,EAAYH,GAAmBr1D,EAAOzM,EAAS4kE,GAC/ChtD,EAAQoqD,GAAmBhiE,EAAS4kE,EAAiB3C,EAAWx1D,GAClEq6D,EAAMn4C,MAAQ/W,EAAMnpB,GAAKs4E,EAAMp4C,MAAQ/W,EAAMhX,IAC/CtF,KAAKmmE,OAASQ,EAAUR,OACxBnmE,KAAKimE,OAASU,EAAUV,OACxBjmE,KAAKiY,MAAQ7R,EAAK6R,MAClBjY,KAAK4a,OAASxU,EAAKwU,OACnB5a,KAAKwoE,OAASt8B,EAAS/4C,EACvB6M,KAAKyoE,OAASv8B,EAAS5mC,EACvBtF,KAAKu+B,qBAAqBhL,OAAOvzB,KAAMsc,IAG7C,CAMAovD,cACE,QAAS1rE,KAAKkoE,OAChB,CAEA/2C,KAAKzd,GACH,MAAMhP,EAAU1E,KAAK0E,QAAQse,WAAWhjB,KAAKya,cAC7C,IAAIytD,EAAUloE,KAAKkoE,QAEnB,IAAKA,EACH,OAGFloE,KAAKurE,uBAAuB7mE,GAE5B,MAAM2mE,EAAc,CAClBpzD,MAAOjY,KAAKiY,MACZ2C,OAAQ5a,KAAK4a,QAETwM,EAAK,CACTj0B,EAAG6M,KAAK7M,EACRmS,EAAGtF,KAAKsF,GAIV4iE,EAAUz4E,KAAK2X,IAAI8gE,GAAW,KAAO,EAAIA,EAEzC,MAAMvxD,EAAUwJ,GAAUzb,EAAQiS,SAG5Bg1D,EAAoB3rE,KAAKkY,MAAMrmB,QAAUmO,KAAKslE,WAAWzzE,QAAUmO,KAAK2kE,KAAK9yE,QAAUmO,KAAKulE,UAAU1zE,QAAUmO,KAAK4kE,OAAO/yE,OAE9H6S,EAAQ0xC,SAAWu1B,IACrBj4D,EAAImG,OACJnG,EAAIk4D,YAAc1D,EAGlBloE,KAAKwgD,eAAep5B,EAAI1T,EAAK23D,EAAa3mE,GAE1CwoB,GAAsBxZ,EAAKhP,EAAQg9D,eAEnCt6C,EAAG9hB,GAAKqR,EAAQC,IAGhB5W,KAAKkhD,UAAU95B,EAAI1T,EAAKhP,GAGxB1E,KAAK2qE,SAASvjD,EAAI1T,EAAKhP,GAGvB1E,KAAKkrE,WAAW9jD,EAAI1T,EAAKhP,GAEzB8oB,GAAqB9Z,EAAKhP,EAAQg9D,eAElChuD,EAAIuG,UAER,CAMA61C,oBACE,OAAO9vD,KAAKoxB,SAAW,EACzB,CAOA2+B,kBAAkBC,EAAgBgU,GAChC,MAAM/T,EAAajwD,KAAKoxB,QAClBhb,EAAS45C,EAAex9D,KAAIq5E,IAA2B,IAA1B,aAAC7nE,EAAY,MAAEC,GAAM4nE,EACtD,MAAM7/D,EAAOhM,KAAKmR,MAAM6oB,eAAeh2B,GAEvC,IAAKgI,EACH,MAAM,IAAIoX,MAAM,kCAAoCpf,GAGtD,MAAO,CACLA,eACA4kB,QAAS5c,EAAKmN,KAAKlV,GACnBA,QACD,IAEGqJ,GAAW5J,EAAeusD,EAAY75C,GACtC01D,EAAkB9rE,KAAK+rE,iBAAiB31D,EAAQ4tD,IAElD12D,GAAWw+D,KACb9rE,KAAKoxB,QAAUhb,EACfpW,KAAKmoE,eAAiBnE,EACtBhkE,KAAKgsE,qBAAsB,EAC3BhsE,KAAKuzB,QAAO,GAEhB,CASAivC,YAAY7xE,EAAGy/D,GAA4B,IAApBI,IAAA5+D,UAAAC,OAAA,QAAAP,IAAAM,UAAA,KAAAA,UAAA,GACrB,GAAIw+D,GAAUpwD,KAAKgsE,oBACjB,OAAO,EAEThsE,KAAKgsE,qBAAsB,EAE3B,MAAMtnE,EAAU1E,KAAK0E,QACfurD,EAAajwD,KAAKoxB,SAAW,GAC7Bhb,EAASpW,KAAK2wD,mBAAmBhgE,EAAGs/D,EAAYG,EAAQI,GAKxDsb,EAAkB9rE,KAAK+rE,iBAAiB31D,EAAQzlB,GAGhD2c,EAAU8iD,IAAW1sD,EAAe0S,EAAQ65C,IAAe6b,EAgBjE,OAbIx+D,IACFtN,KAAKoxB,QAAUhb,GAEX1R,EAAQ0xC,SAAW1xC,EAAQ8kE,YAC7BxpE,KAAKmoE,eAAiB,CACpBh1E,EAAGxC,EAAEwC,EACLmS,EAAG3U,EAAE2U,GAGPtF,KAAKuzB,QAAO,EAAM68B,KAIf9iD,CACT,CAWAqjD,mBAAmBhgE,EAAGs/D,EAAYG,EAAQI,GACxC,MAAM9rD,EAAU1E,KAAK0E,QAErB,GAAe,aAAX/T,EAAEiP,KACJ,MAAO,GAGT,IAAK4wD,EAGH,OAAOP,EAAWpsC,QAAO3xB,GACvB8N,KAAKmR,MAAMgI,KAAKtG,SAAS3gB,EAAE8R,oBACiD1S,IAA5E0O,KAAKmR,MAAM6oB,eAAe9nC,EAAE8R,cAAcyyB,WAAW0F,UAAUjqC,EAAE+R,SAKrE,MAAMmS,EAASpW,KAAKmR,MAAM89C,0BAA0Bt+D,EAAG+T,EAAQqP,KAAMrP,EAAS0rD,GAM9E,OAJI1rD,EAAQjB,SACV2S,EAAO3S,UAGF2S,CACT,CASA21D,iBAAiB31D,EAAQzlB,GACvB,MAAM,OAAC63E,EAAA,OAAQC,EAAA,QAAQ/jE,GAAW1E,KAC5BksC,EAAW23B,GAAYn/D,EAAQwnC,UAAU7pC,KAAKrC,KAAMoW,EAAQzlB,GAClE,OAAoB,IAAbu7C,IAAuBs8B,IAAWt8B,EAAS/4C,GAAKs1E,IAAWv8B,EAAS5mC,EAC7E,EAGF,IAAA2mE,GAAe,CACbjqE,GAAI,UACJ+gE,SAAUkF,GACVpE,eAEAqI,UAAU/6D,EAAO0nD,EAAOn0D,GAClBA,IACFyM,EAAMuzD,QAAU,IAAIuD,GAAQ,CAAC92D,QAAOzM,YAExC,EAEAk1C,aAAazoC,EAAO0nD,EAAOn0D,GACrByM,EAAMuzD,SACRvzD,EAAMuzD,QAAQ/rC,WAAWj0B,EAE7B,EAEAy1B,MAAMhpB,EAAO0nD,EAAOn0D,GACdyM,EAAMuzD,SACRvzD,EAAMuzD,QAAQ/rC,WAAWj0B,EAE7B,EAEAynE,UAAUh7D,GACR,MAAMuzD,EAAUvzD,EAAMuzD,QAEtB,GAAIA,GAAWA,EAAQgH,cAAe,CACpC,MAAMtoE,EAAO,CACXshE,WAGF,IAA8E,IAA1EvzD,EAAMqqC,cAAc,oBAAqB,IAAIp4C,EAAMqiD,YAAY,IACjE,OAGFif,EAAQvzC,KAAKhgB,EAAMuC,KAEnBvC,EAAMqqC,cAAc,mBAAoBp4C,GAE5C,EAEA4/D,WAAW7xD,EAAO/N,GAChB,GAAI+N,EAAMuzD,QAAS,CAEjB,MAAMp4B,EAAmBlpC,EAAKgtD,OAC1Bj/C,EAAMuzD,QAAQlC,YAAYp/D,EAAKkmB,MAAOgjB,EAAkBlpC,EAAKotD,eAE/DptD,EAAKkK,SAAU,GAGrB,EAEAoI,SAAU,CACR0gC,SAAS,EACTozB,SAAU,KACVt9B,SAAU,UACVv5B,gBAAiB,kBACjBs3D,WAAY,OACZ/H,UAAW,CACTzhE,OAAQ,QAEV+kE,aAAc,EACdC,kBAAmB,EACnB1tB,WAAY,OACZ4vB,UAAW,OACXhC,YAAa,EACbd,SAAU,CAAC,EAEX+F,UAAW,OACXQ,YAAa,OACbvF,cAAe,EACfD,gBAAiB,EACjBd,WAAY,CACVrkE,OAAQ,QAEV0qE,YAAa,OACbx0D,QAAS,EACT2vD,aAAc,EACdD,UAAW,EACXprD,aAAc,EACdikD,UAAWA,CAACxrD,EAAK4J,IAASA,EAAKunD,SAASz+D,KACxC+4D,SAAUA,CAACzrD,EAAK4J,IAASA,EAAKunD,SAASz+D,KACvCmkE,mBAAoB,OACpB7E,eAAe,EACf32B,WAAY,EACZn8B,YAAa,gBACbuJ,YAAa,EACbzJ,UAAW,CACTsD,SAAU,IACVC,OAAQ,gBAEVM,WAAY,CACVzG,QAAS,CACPlQ,KAAM,SACNuW,WAAY,CAAC,IAAK,IAAK,QAAS,SAAU,SAAU,WAEtD+xD,QAAS,CACPjyD,OAAQ,SACRD,SAAU,MAGdya,UAAWy2C,IAGb/kB,cAAe,CACb0iB,SAAU,OACVC,WAAY,OACZ5C,UAAW,QAGbhwD,YAAa,CACXyD,YAAcZ,GAAkB,WAATA,GAA8B,aAATA,GAAgC,aAATA,EACnEc,YAAY,EACZ4a,UAAW,CACT9a,aAAa,EACbE,YAAY,GAEdnD,UAAW,CACToD,WAAW,GAEbS,WAAY,CACVT,UAAW,cAKf8yC,uBAAwB,CAAC,+HClzC3B,SAASwjB,GAAetwC,EAAQgC,EAAK75B,EAAOooE,GAC1C,MAAM91B,EAAQza,EAAOt3B,QAAQs5B,GAC7B,IAAe,IAAXyY,EACF,MAbgB+1B,EAACxwC,EAAQgC,EAAK75B,EAAOooE,KACpB,kBAARvuC,GACT75B,EAAQ63B,EAAOl2B,KAAKk4B,GAAO,EAC3BuuC,EAAY7P,QAAQ,CAACv4D,QAAOm5B,MAAOU,KAC1Bl2B,MAAMk2B,KACf75B,EAAQ,MAEHA,GAMEqoE,CAAYxwC,EAAQgC,EAAK75B,EAAOooE,GAGzC,OAAO91B,IADMza,EAAOywC,YAAYzuC,GACR75B,EAAQsyC,CAClC,CAIA,SAASi2B,GAAkBtqE,GACzB,MAAM45B,EAAS97B,KAAK+7B,YAEpB,OAAI75B,GAAS,GAAKA,EAAQ45B,EAAOjqC,OACxBiqC,EAAO55B,GAETA,CACT,CAEe,MAAMuqE,WAAsBx0B,GAEzCrgB,UAAY,WAKZA,gBAAkB,CAChB1mB,MAAO,CACLhO,SAAUspE,KAId7sE,YAAYizB,GACV2Q,MAAM3Q,GAGN5yB,KAAK0sE,iBAAcp7E,EACnB0O,KAAK2sE,YAAc,EACnB3sE,KAAK4sE,aAAe,EACtB,CAEAthC,KAAKub,GACH,MAAMgmB,EAAQ7sE,KAAK4sE,aACnB,GAAIC,EAAMh7E,OAAQ,CAChB,MAAMiqC,EAAS97B,KAAK+7B,YACpB,IAAK,MAAM,MAAC93B,EAAA,MAAOm5B,KAAUyvC,EACvB/wC,EAAO73B,KAAWm5B,GACpBtB,EAAOhxB,OAAO7G,EAAO,GAGzBjE,KAAK4sE,aAAe,GAEtBrpC,MAAM+H,KAAKub,EACb,CAEAzhC,MAAM0Y,EAAK75B,GACT,GAAIhC,EAAc67B,GAChB,OAAO,KAET,MAAMhC,EAAS97B,KAAK+7B,YAGpB,MAtDe4b,EAAC1zC,EAAOvU,IAAkB,OAAVuU,EAAiB,KAAO2F,GAAYna,KAAKL,MAAM6U,GAAQ,EAAGvU,GAsDlFioD,CAFP1zC,EAAQvB,SAASuB,IAAU63B,EAAO73B,KAAW65B,EAAM75B,EAC/CmoE,GAAetwC,EAAQgC,EAAKj7B,EAAeoB,EAAO65B,GAAM99B,KAAK4sE,cACxC9wC,EAAOjqC,OAAS,EAC3C,CAEAqoD,sBACE,MAAM,WAACztC,EAAA,WAAYC,GAAc1M,KAAK2M,gBACtC,IAAI,IAAChd,EAAG,IAAED,GAAOsQ,KAAKw8B,WAAU,GAEJ,UAAxBx8B,KAAK0E,QAAQyS,SACV1K,IACH9c,EAAM,GAEH+c,IACHhd,EAAMsQ,KAAK+7B,YAAYlqC,OAAS,IAIpCmO,KAAKrQ,IAAMA,EACXqQ,KAAKtQ,IAAMA,CACb,CAEA8qD,aACE,MAAM7qD,EAAMqQ,KAAKrQ,IACXD,EAAMsQ,KAAKtQ,IACXunB,EAASjX,KAAK0E,QAAQuS,OACtB/F,EAAQ,GACd,IAAI4qB,EAAS97B,KAAK+7B,YAGlBD,EAAkB,IAATnsC,GAAcD,IAAQosC,EAAOjqC,OAAS,EAAKiqC,EAASA,EAAOx5B,MAAM3S,EAAKD,EAAM,GAErFsQ,KAAK2sE,YAAcl9E,KAAKC,IAAIosC,EAAOjqC,QAAUolB,EAAS,EAAI,GAAI,GAC9DjX,KAAK0sE,YAAc1sE,KAAKrQ,KAAOsnB,EAAS,GAAM,GAE9C,IAAK,IAAI/U,EAAQvS,EAAKuS,GAASxS,EAAKwS,IAClCgP,EAAMtL,KAAK,CAAC1D,UAEd,OAAOgP,CACT,CAEAmsB,iBAAiBn7B,GACf,OAAOsqE,GAAkBnqE,KAAKrC,KAAMkC,EACtC,CAKAiyB,YACEoP,MAAMpP,YAEDn0B,KAAKwoC,iBAERxoC,KAAK+rC,gBAAkB/rC,KAAK+rC,eAEhC,CAGAn/B,iBAAiB1K,GAKf,MAJqB,kBAAVA,IACTA,EAAQlC,KAAKolB,MAAMljB,IAGJ,OAAVA,EAAiBq6B,IAAMv8B,KAAKgqC,oBAAoB9nC,EAAQlC,KAAK0sE,aAAe1sE,KAAK2sE,YAC1F,CAIAxrC,gBAAgBl9B,GACd,MAAMiN,EAAQlR,KAAKkR,MACnB,OAAIjN,EAAQ,GAAKA,EAAQiN,EAAMrf,OAAS,EAC/B,KAEFmO,KAAK4M,iBAAiBsE,EAAMjN,GAAO/B,MAC5C,CAEAgoC,iBAAiB9vB,GACf,OAAO3qB,KAAKL,MAAM4Q,KAAK0sE,YAAc1sE,KAAKi+C,mBAAmB7jC,GAASpa,KAAK2sE,YAC7E,CAEA3lC,eACE,OAAOhnC,KAAK8W,MACd,ECpIF,SAASg2D,GAAcC,EAAmBC,GACxC,MAAM97D,EAAQ,IAMR,OAACiG,EAAM,KAAEqoC,EAAA,IAAM7vD,EAAA,IAAKD,EAAG,UAAEu9E,EAAA,MAAW7gE,EAAA,SAAO8gE,EAAQ,UAAEC,EAAA,cAAWC,GAAiBL,EACjFM,EAAO7tB,GAAQ,EACf8tB,EAAYJ,EAAW,GACtBv9E,IAAK49E,EAAM79E,IAAK89E,GAAQR,EACzBvgE,GAAcxK,EAActS,GAC5B+c,GAAczK,EAAcvS,GAC5B+9E,GAAgBxrE,EAAcmK,GAC9BshE,GAAcF,EAAOD,IAASJ,EAAY,GAChD,IACI36C,EAAQm7C,EAASC,EAASC,EAD1B7qC,EAAU37B,IAASmmE,EAAOD,GAAQD,EAAYD,GAAQA,EAK1D,GAAIrqC,EAdgB,QAcUv2B,IAAeC,EAC3C,MAAO,CAAC,CAACxK,MAAOqrE,GAAO,CAACrrE,MAAOsrE,IAGjCK,EAAYp+E,KAAKgnD,KAAK+2B,EAAOxqC,GAAWvzC,KAAKgY,MAAM8lE,EAAOvqC,GACtD6qC,EAAYP,IAEdtqC,EAAU37B,GAAQwmE,EAAY7qC,EAAUsqC,EAAYD,GAAQA,GAGzDprE,EAAcgrE,KAEjBz6C,EAAS/iC,KAAKoP,IAAI,GAAIouE,GACtBjqC,EAAUvzC,KAAKgnD,KAAKzT,EAAUxQ,GAAUA,GAG3B,UAAXrb,GACFw2D,EAAUl+E,KAAKgY,MAAM8lE,EAAOvqC,GAAWA,EACvC4qC,EAAUn+E,KAAKgnD,KAAK+2B,EAAOxqC,GAAWA,IAEtC2qC,EAAUJ,EACVK,EAAUJ,GAGR/gE,GAAcC,GAAc8yC,GjEL3B,SAAqBrsD,EAAWgU,GACrC,MAAM2mE,EAAUr+E,KAAKL,MAAM+D,GAC3B,OAAO26E,EAAY3mE,GAAYhU,GAAQ26E,EAAU3mE,GAAYhU,CAC/D,CiEE0C46E,EAAar+E,EAAMC,GAAO6vD,EAAMxc,EAAU,MAKhF6qC,EAAYp+E,KAAKL,MAAMK,KAAKE,KAAKD,EAAMC,GAAOqzC,EAASkqC,IACvDlqC,GAAWtzC,EAAMC,GAAOk+E,EACxBF,EAAUh+E,EACVi+E,EAAUl+E,GACD+9E,GAITE,EAAUlhE,EAAa9c,EAAMg+E,EAC7BC,EAAUlhE,EAAahd,EAAMk+E,EAC7BC,EAAYzhE,EAAQ,EACpB42B,GAAW4qC,EAAUD,GAAWE,IAGhCA,GAAaD,EAAUD,GAAW3qC,EAIhC6qC,EADE3mE,GAAa2mE,EAAWp+E,KAAKL,MAAMy+E,GAAY7qC,EAAU,KAC/CvzC,KAAKL,MAAMy+E,GAEXp+E,KAAKgnD,KAAKo3B,IAM1B,MAAMG,EAAgBv+E,KAAKC,IACzB0Y,GAAe46B,GACf56B,GAAeulE,IAEjBn7C,EAAS/iC,KAAKoP,IAAI,GAAIoD,EAAcgrE,GAAae,EAAgBf,GACjEU,EAAUl+E,KAAKL,MAAMu+E,EAAUn7C,GAAUA,EACzCo7C,EAAUn+E,KAAKL,MAAMw+E,EAAUp7C,GAAUA,EAEzC,IAAIr0B,EAAI,EAiBR,IAhBIsO,IACE2gE,GAAiBO,IAAYh+E,GAC/BuhB,EAAMtL,KAAK,CAAC1D,MAAOvS,IAEfg+E,EAAUh+E,GACZwO,IAGE+I,GAAazX,KAAKL,OAAOu+E,EAAUxvE,EAAI6kC,GAAWxQ,GAAUA,EAAQ7iC,EAAKs+E,GAAkBt+E,EAAK+9E,EAAYX,KAC9G5uE,KAEOwvE,EAAUh+E,GACnBwO,KAIGA,EAAI0vE,IAAa1vE,EAAG,CACzB,MAAM8S,EAAYxhB,KAAKL,OAAOu+E,EAAUxvE,EAAI6kC,GAAWxQ,GAAUA,EACjE,GAAI9lB,GAAcuE,EAAYvhB,EAC5B,MAEFwhB,EAAMtL,KAAK,CAAC1D,MAAO+O,GACrB,CAaA,OAXIvE,GAAc0gE,GAAiBQ,IAAYl+E,EAEzCwhB,EAAMrf,QAAUqV,GAAagK,EAAMA,EAAMrf,OAAS,GAAGqQ,MAAOxS,EAAKu+E,GAAkBv+E,EAAKg+E,EAAYX,IACtG77D,EAAMA,EAAMrf,OAAS,GAAGqQ,MAAQxS,EAEhCwhB,EAAMtL,KAAK,CAAC1D,MAAOxS,IAEXgd,GAAckhE,IAAYl+E,GACpCwhB,EAAMtL,KAAK,CAAC1D,MAAO0rE,IAGd18D,CACT,CAEA,SAAS+8D,GAAkB/rE,EAAOwrE,EAAUQ,GAA6B,IAA3B,WAAChsC,EAAU,YAAE9pB,GAAY81D,EACrE,MAAM3yD,EAAMvT,GAAUoQ,GAChBpZ,GAASkjC,EAAazyC,KAAKge,IAAI8N,GAAO9rB,KAAKif,IAAI6M,KAAS,KACxD1pB,EAAS,IAAO67E,GAAc,GAAKxrE,GAAOrQ,OAChD,OAAOpC,KAAKE,IAAI+9E,EAAa1uE,EAAOnN,EACtC,CAEe,MAAMs8E,WAAwBl2B,GAE3Ct4C,YAAYizB,GACV2Q,MAAM3Q,GAGN5yB,KAAKqJ,WAAQ/X,EAEb0O,KAAKsJ,SAAMhY,EAEX0O,KAAK0sE,iBAAcp7E,EAEnB0O,KAAKouE,eAAY98E,EACjB0O,KAAK2sE,YAAc,CACrB,CAEAvnD,MAAM0Y,EAAK75B,GACT,OAAIhC,EAAc67B,KAGE,kBAARA,GAAoBA,aAAer7B,UAAYC,UAAUo7B,GAF5D,MAMDA,CACV,CAEAuwC,yBACE,MAAM,YAACn3D,GAAelX,KAAK0E,SACrB,WAAC+H,EAAA,WAAYC,GAAc1M,KAAK2M,gBACtC,IAAI,IAAChd,EAAG,IAAED,GAAOsQ,KAEjB,MAAMsuE,EAASj/E,GAAMM,EAAM8c,EAAa9c,EAAMN,EACxCk/E,EAASl/E,GAAMK,EAAMgd,EAAahd,EAAML,EAE9C,GAAI6nB,EAAa,CACf,MAAMs3D,EAAUvnE,GAAKtX,GACf8+E,EAAUxnE,GAAKvX,GAEjB8+E,EAAU,GAAKC,EAAU,EAC3BF,EAAO,GACEC,EAAU,GAAKC,EAAU,GAClCH,EAAO,GAIX,GAAI3+E,IAAQD,EAAK,CACf,IAAIunB,EAAiB,IAARvnB,EAAY,EAAID,KAAK2X,IAAU,IAAN1X,GAEtC6+E,EAAO7+E,EAAMunB,GAERC,GACHo3D,EAAO3+E,EAAMsnB,GAGjBjX,KAAKrQ,IAAMA,EACXqQ,KAAKtQ,IAAMA,CACb,CAEAg/E,eACE,MAAMh5B,EAAW11C,KAAK0E,QAAQwM,MAE9B,IACIg8D,GADA,cAACh3B,EAAA,SAAey4B,GAAYj5B,EAkBhC,OAfIi5B,GACFzB,EAAWz9E,KAAKgnD,KAAKz2C,KAAKtQ,IAAMi/E,GAAYl/E,KAAKgY,MAAMzH,KAAKrQ,IAAMg/E,GAAY,EAC1EzB,EAAW,MACb5sD,QAAQC,KAAM,UAASvgB,KAAKgC,sBAAsB2sE,mCAA0CzB,8BAC5FA,EAAW,OAGbA,EAAWltE,KAAK4uE,mBAChB14B,EAAgBA,GAAiB,IAG/BA,IACFg3B,EAAWz9E,KAAKE,IAAIumD,EAAeg3B,IAG9BA,CACT,CAKA0B,mBACE,OAAOnsE,OAAOkE,iBAChB,CAEA6zC,aACE,MAAMl9B,EAAOtd,KAAK0E,QACZgxC,EAAWp4B,EAAKpM,MAMtB,IAAIg8D,EAAWltE,KAAK0uE,eACpBxB,EAAWz9E,KAAKC,IAAI,EAAGw9E,GAEvB,MAcMh8D,EAAQ47D,GAdkB,CAC9BI,WACA/1D,OAAQmG,EAAKnG,OACbxnB,IAAK2tB,EAAK3tB,IACVD,IAAK4tB,EAAK5tB,IACVu9E,UAAWv3B,EAASu3B,UACpBztB,KAAM9J,EAASi5B,SACfviE,MAAOspC,EAAStpC,MAChB+gE,UAAWntE,KAAK0hD,aAChBxf,WAAYliC,KAAKwoC,eACjBpwB,YAAas9B,EAASt9B,aAAe,EACrCg1D,eAA0C,IAA3B13B,EAAS03B,eAERptE,KAAKw4C,QAAUx4C,MAmBjC,MAdoB,UAAhBsd,EAAKnG,QACPtP,GAAmBqJ,EAAOlR,KAAM,SAG9Bsd,EAAK7Z,SACPyN,EAAMzN,UAENzD,KAAKqJ,MAAQrJ,KAAKtQ,IAClBsQ,KAAKsJ,IAAMtJ,KAAKrQ,MAEhBqQ,KAAKqJ,MAAQrJ,KAAKrQ,IAClBqQ,KAAKsJ,IAAMtJ,KAAKtQ,KAGXwhB,CACT,CAKAijB,YACE,MAAMjjB,EAAQlR,KAAKkR,MACnB,IAAI7H,EAAQrJ,KAAKrQ,IACb2Z,EAAMtJ,KAAKtQ,IAIf,GAFA6zC,MAAMpP,YAEFn0B,KAAK0E,QAAQuS,QAAU/F,EAAMrf,OAAQ,CACvC,MAAMolB,GAAU3N,EAAMD,GAAS5Z,KAAKC,IAAIwhB,EAAMrf,OAAS,EAAG,GAAK,EAC/DwX,GAAS4N,EACT3N,GAAO2N,EAETjX,KAAK0sE,YAAcrjE,EACnBrJ,KAAKouE,UAAY9kE,EACjBtJ,KAAK2sE,YAAcrjE,EAAMD,CAC3B,CAEAg0B,iBAAiBn7B,GACf,OAAOgO,GAAahO,EAAOlC,KAAKmR,MAAMzM,QAAQ0L,OAAQpQ,KAAK0E,QAAQwM,MAAML,OAC3E,EClTa,MAAMg+D,WAAoBV,GAEvCv2C,UAAY,SAKZA,gBAAkB,CAChB1mB,MAAO,CACLhO,SAAU8O,GAAMlB,WAAWE,UAK/BkpC,sBACE,MAAM,IAACvqD,EAAG,IAAED,GAAOsQ,KAAKw8B,WAAU,GAElCx8B,KAAKrQ,IAAM6S,EAAS7S,GAAOA,EAAM,EACjCqQ,KAAKtQ,IAAM8S,EAAS9S,GAAOA,EAAM,EAGjCsQ,KAAKquE,wBACP,CAMAO,mBACE,MAAM1sC,EAAaliC,KAAKwoC,eAClB32C,EAASqwC,EAAaliC,KAAKiY,MAAQjY,KAAK4a,OACxCxC,EAAcpQ,GAAUhI,KAAK0E,QAAQwM,MAAMkH,aAC3CpZ,GAASkjC,EAAazyC,KAAKge,IAAI2K,GAAe3oB,KAAKif,IAAI0J,KAAiB,KACxEolC,EAAWx9C,KAAK69C,wBAAwB,GAC9C,OAAOpuD,KAAKgnD,KAAK5kD,EAASpC,KAAKE,IAAI,GAAI6tD,EAASjqC,WAAavU,GAC/D,CAGA4N,iBAAiB1K,GACf,OAAiB,OAAVA,EAAiBq6B,IAAMv8B,KAAKgqC,oBAAoB9nC,EAAQlC,KAAK0sE,aAAe1sE,KAAK2sE,YAC1F,CAEAziC,iBAAiB9vB,GACf,OAAOpa,KAAK0sE,YAAc1sE,KAAKi+C,mBAAmB7jC,GAASpa,KAAK2sE,WAClE,EC1CF,MAAMmC,GAAaz/E,GAAKI,KAAKgY,MAAMT,GAAM3X,IACnC0/E,GAAiBA,CAAC1/E,EAAGwD,IAAMpD,KAAKoP,IAAI,GAAIiwE,GAAWz/E,GAAKwD,GAE9D,SAASm8E,GAAQC,GAEf,OAAkB,IADHA,EAAWx/E,KAAKoP,IAAI,GAAIiwE,GAAWG,GAEpD,CAEA,SAASC,GAAMv/E,EAAKD,EAAKy/E,GACvB,MAAMC,EAAY3/E,KAAKoP,IAAI,GAAIswE,GACzB9lE,EAAQ5Z,KAAKgY,MAAM9X,EAAMy/E,GAE/B,OADY3/E,KAAKgnD,KAAK/mD,EAAM0/E,GACf/lE,CACf,CAqBA,SAASgmE,GAActC,EAAiBuC,GAAc,IAAZ,IAAC3/E,EAAG,IAAED,GAAI4/E,EAClD3/E,EAAMgT,EAAgBoqE,EAAkBp9E,IAAKA,GAC7C,MAAMuhB,EAAQ,GACRq+D,EAAST,GAAWn/E,GAC1B,IAAI6/E,EAvBN,SAAkB7/E,EAAKD,GAErB,IAAIy/E,EAAWL,GADDp/E,EAAMC,GAEpB,KAAOu/E,GAAMv/E,EAAKD,EAAKy/E,GAAY,IACjCA,IAEF,KAAOD,GAAMv/E,EAAKD,EAAKy/E,GAAY,IACjCA,IAEF,OAAO1/E,KAAKE,IAAIw/E,EAAUL,GAAWn/E,GACvC,CAaY8/E,CAAS9/E,EAAKD,GACpBu9E,EAAYuC,EAAM,EAAI//E,KAAKoP,IAAI,GAAIpP,KAAK2X,IAAIooE,IAAQ,EACxD,MAAMb,EAAWl/E,KAAKoP,IAAI,GAAI2wE,GACxB50C,EAAO20C,EAASC,EAAM//E,KAAKoP,IAAI,GAAI0wE,GAAU,EAC7ClmE,EAAQ5Z,KAAKL,OAAOO,EAAMirC,GAAQqyC,GAAaA,EAC/Ch2D,EAASxnB,KAAKgY,OAAO9X,EAAMirC,GAAQ+zC,EAAW,IAAMA,EAAW,GACrE,IAAI78D,EAAcriB,KAAKgY,OAAO4B,EAAQ4N,GAAUxnB,KAAKoP,IAAI,GAAI2wE,IACzDttE,EAAQS,EAAgBoqE,EAAkBp9E,IAAKF,KAAKL,OAAOwrC,EAAO3jB,EAASnF,EAAcriB,KAAKoP,IAAI,GAAI2wE,IAAQvC,GAAaA,GAC/H,KAAO/qE,EAAQxS,GACbwhB,EAAMtL,KAAK,CAAC1D,QAAO2W,MAAOm2D,GAAQ9sE,GAAQ4P,gBACtCA,GAAe,GACjBA,EAAcA,EAAc,GAAK,GAAK,GAEtCA,IAEEA,GAAe,KACjB09D,IACA19D,EAAc,EACdm7D,EAAYuC,GAAO,EAAI,EAAIvC,GAE7B/qE,EAAQzS,KAAKL,OAAOwrC,EAAO3jB,EAASnF,EAAcriB,KAAKoP,IAAI,GAAI2wE,IAAQvC,GAAaA,EAEtF,MAAMyC,EAAW/sE,EAAgBoqE,EAAkBr9E,IAAKwS,GAGxD,OAFAgP,EAAMtL,KAAK,CAAC1D,MAAOwtE,EAAU72D,MAAOm2D,GAAQU,GAAW59D,gBAEhDZ,CACT,CAEe,MAAMy+D,WAAyB13B,GAE5CrgB,UAAY,cAKZA,gBAAkB,CAChB1mB,MAAO,CACLhO,SAAU8O,GAAMlB,WAAWc,YAC3BiH,MAAO,CACLu9B,SAAS,KAMfz2C,YAAYizB,GACV2Q,MAAM3Q,GAGN5yB,KAAKqJ,WAAQ/X,EAEb0O,KAAKsJ,SAAMhY,EAEX0O,KAAK0sE,iBAAcp7E,EACnB0O,KAAK2sE,YAAc,CACrB,CAEAvnD,MAAM0Y,EAAK75B,GACT,MAAM/B,EAAQisE,GAAgBhsE,UAAUijB,MAAM9hB,MAAMtD,KAAM,CAAC89B,EAAK75B,IAChE,GAAc,IAAV/B,EAIJ,OAAOM,EAASN,IAAUA,EAAQ,EAAIA,EAAQ,KAH5ClC,KAAK4vE,OAAQ,CAIjB,CAEA11B,sBACE,MAAM,IAACvqD,EAAG,IAAED,GAAOsQ,KAAKw8B,WAAU,GAElCx8B,KAAKrQ,IAAM6S,EAAS7S,GAAOF,KAAKC,IAAI,EAAGC,GAAO,KAC9CqQ,KAAKtQ,IAAM8S,EAAS9S,GAAOD,KAAKC,IAAI,EAAGA,GAAO,KAE1CsQ,KAAK0E,QAAQwS,cACflX,KAAK4vE,OAAQ,GAKX5vE,KAAK4vE,OAAS5vE,KAAKrQ,MAAQqQ,KAAKg5C,gBAAkBx2C,EAASxC,KAAK84C,YAClE94C,KAAKrQ,IAAMA,IAAQo/E,GAAe/uE,KAAKrQ,IAAK,GAAKo/E,GAAe/uE,KAAKrQ,KAAM,GAAKo/E,GAAe/uE,KAAKrQ,IAAK,IAG3GqQ,KAAKquE,wBACP,CAEAA,yBACE,MAAM,WAAC5hE,EAAA,WAAYC,GAAc1M,KAAK2M,gBACtC,IAAIhd,EAAMqQ,KAAKrQ,IACXD,EAAMsQ,KAAKtQ,IAEf,MAAM4+E,EAASj/E,GAAMM,EAAM8c,EAAa9c,EAAMN,EACxCk/E,EAASl/E,GAAMK,EAAMgd,EAAahd,EAAML,EAE1CM,IAAQD,IACNC,GAAO,GACT2+E,EAAO,GACPC,EAAO,MAEPD,EAAOS,GAAep/E,GAAM,IAC5B4+E,EAAOQ,GAAer/E,EAAK,MAG3BC,GAAO,GACT2+E,EAAOS,GAAer/E,GAAM,IAE1BA,GAAO,GAET6+E,EAAOQ,GAAep/E,EAAK,IAG7BqQ,KAAKrQ,IAAMA,EACXqQ,KAAKtQ,IAAMA,CACb,CAEA8qD,aACE,MAAMl9B,EAAOtd,KAAK0E,QAMZwM,EAAQm+D,GAJY,CACxB1/E,IAAKqQ,KAAK84C,SACVppD,IAAKsQ,KAAK64C,UAEmC74C,MAkB/C,MAdoB,UAAhBsd,EAAKnG,QACPtP,GAAmBqJ,EAAOlR,KAAM,SAG9Bsd,EAAK7Z,SACPyN,EAAMzN,UAENzD,KAAKqJ,MAAQrJ,KAAKtQ,IAClBsQ,KAAKsJ,IAAMtJ,KAAKrQ,MAEhBqQ,KAAKqJ,MAAQrJ,KAAKrQ,IAClBqQ,KAAKsJ,IAAMtJ,KAAKtQ,KAGXwhB,CACT,CAMAmsB,iBAAiBn7B,GACf,YAAiB5Q,IAAV4Q,EACH,IACAgO,GAAahO,EAAOlC,KAAKmR,MAAMzM,QAAQ0L,OAAQpQ,KAAK0E,QAAQwM,MAAML,OACxE,CAKAsjB,YACE,MAAM9qB,EAAQrJ,KAAKrQ,IAEnB4zC,MAAMpP,YAENn0B,KAAK0sE,YAAc1lE,GAAMqC,GACzBrJ,KAAK2sE,YAAc3lE,GAAMhH,KAAKtQ,KAAOsX,GAAMqC,EAC7C,CAEAuD,iBAAiB1K,GAIf,YAHc5Q,IAAV4Q,GAAiC,IAAVA,IACzBA,EAAQlC,KAAKrQ,KAED,OAAVuS,GAAkB0F,MAAM1F,GACnBq6B,IAEFv8B,KAAKgqC,mBAAmB9nC,IAAUlC,KAAKrQ,IAC1C,GACCqX,GAAM9E,GAASlC,KAAK0sE,aAAe1sE,KAAK2sE,YAC/C,CAEAziC,iBAAiB9vB,GACf,MAAM4jC,EAAUh+C,KAAKi+C,mBAAmB7jC,GACxC,OAAO3qB,KAAKoP,IAAI,GAAImB,KAAK0sE,YAAc1uB,EAAUh+C,KAAK2sE,YACxD,ECxNF,SAASkD,GAAsBvyD,GAC7B,MAAMo4B,EAAWp4B,EAAKpM,MAEtB,GAAIwkC,EAAS1+B,SAAWsG,EAAKtG,QAAS,CACpC,MAAML,EAAUwJ,GAAUu1B,EAASz8B,iBACnC,OAAOpW,EAAe6yC,EAAStiC,MAAQsiC,EAAStiC,KAAKhN,KAAMsP,GAAStC,KAAKhN,MAAQuQ,EAAQiE,OAE3F,OAAO,CACT,CAUA,SAASk1D,GAAgBlnE,EAAOwgB,EAAKhjB,EAAMzW,EAAKD,GAC9C,OAAIkZ,IAAUjZ,GAAOiZ,IAAUlZ,EACtB,CACL2Z,MAAO+f,EAAOhjB,EAAO,EACrBkD,IAAK8f,EAAOhjB,EAAO,GAEZwC,EAAQjZ,GAAOiZ,EAAQlZ,EACzB,CACL2Z,MAAO+f,EAAMhjB,EACbkD,IAAK8f,GAIF,CACL/f,MAAO+f,EACP9f,IAAK8f,EAAMhjB,EAEf,CAKA,SAAS2pE,GAAmBv7D,GA8B1B,MAAM8tB,EAAO,CACX/yC,EAAGilB,EAAMuC,KAAOvC,EAAM4uD,SAASrsD,KAC/B7lB,EAAGsjB,EAAMqC,MAAQrC,EAAM4uD,SAASvsD,MAChC7V,EAAGwT,EAAMoC,IAAMpC,EAAM4uD,SAASxsD,IAC9BpmB,EAAGgkB,EAAMsC,OAAStC,EAAM4uD,SAAStsD,QAE7Bk5D,EAAS/xE,OAAOmB,OAAO,CAAC,EAAGkjC,GAC3ByZ,EAAa,GACbplC,EAAU,GACVs5D,EAAaz7D,EAAM07D,aAAar+E,OAChCs+E,EAAiB37D,EAAM9P,QAAQ4iC,YAC/B8oC,EAAkBD,EAAeE,kBAAoB9pE,GAAK0pE,EAAa,EAE7E,IAAK,IAAI/9E,EAAI,EAAGA,EAAI+9E,EAAY/9E,IAAK,CACnC,MAAMorB,EAAO6yD,EAAentD,WAAWxO,EAAM87D,qBAAqBp+E,IAClEykB,EAAQzkB,GAAKorB,EAAK3G,QAClB,MAAMo0B,EAAgBv2B,EAAM+7D,iBAAiBr+E,EAAGsiB,EAAMg8D,YAAc75D,EAAQzkB,GAAIk+E,GAC1EK,EAASrwD,GAAO9C,EAAKlK,MACrBiwD,GA9EgB3vD,EA8EYc,EAAMd,IA9EbN,EA8EkBq9D,EA7E/CrzC,EAAQ7qC,EAD2B6qC,EA8EoB5oB,EAAM07D,aAAah+E,IA7EjDkrC,EAAQ,CAACA,GAC3B,CACLprC,EAAGynB,GAAa/F,EAAKN,EAAKkG,OAAQ8jB,GAClC5tC,EAAG4tC,EAAMvrC,OAASuhB,EAAKG,aA2EvBwoC,EAAW7pD,GAAKmxE,EAEhB,MAAM3mB,EAAevzC,GAAgBqL,EAAMuzB,cAAc71C,GAAKk+E,GACxDxnE,EAAQnZ,KAAKL,MAAM8Y,GAAUw0C,IAGnCg0B,GAAaV,EAAQ1tC,EAAMoa,EAFXozB,GAAgBlnE,EAAOmiC,EAAc53C,EAAGkwE,EAASrxE,EAAG,EAAG,KACvD89E,GAAgBlnE,EAAOmiC,EAAczlC,EAAG+9D,EAAS7zE,EAAG,GAAI,KAE1E,CAtFF,IAA0BkkB,EAAKN,EAAMgqB,EAwFnC5oB,EAAMm8D,eACJruC,EAAK/yC,EAAIygF,EAAOzgF,EAChBygF,EAAO9+E,EAAIoxC,EAAKpxC,EAChBoxC,EAAKthC,EAAIgvE,EAAOhvE,EAChBgvE,EAAOx/E,EAAI8xC,EAAK9xC,GAIlBgkB,EAAMo8D,iBA6DR,SAA8Bp8D,EAAOunC,EAAYplC,GAC/C,MAAM1L,EAAQ,GACRglE,EAAaz7D,EAAM07D,aAAar+E,OAChCyrB,EAAO9I,EAAM9P,SACb,kBAAC2rE,EAAiB,QAAEr5D,GAAWsG,EAAKgqB,YACpCupC,EAAW,CACfC,MAAOjB,GAAsBvyD,GAAQ,EACrC8yD,gBAAiBC,EAAoB9pE,GAAK0pE,EAAa,GAEzD,IAAI1zD,EAEJ,IAAK,IAAIrqB,EAAI,EAAGA,EAAI+9E,EAAY/9E,IAAK,CACnC2+E,EAASl6D,QAAUA,EAAQzkB,GAC3B2+E,EAASzqE,KAAO21C,EAAW7pD,GAE3B,MAAMmU,EAAO0qE,GAAqBv8D,EAAOtiB,EAAG2+E,GAC5C5lE,EAAMrF,KAAKS,GACK,SAAZ2Q,IACF3Q,EAAKmQ,QAAUw6D,GAAgB3qE,EAAMkW,GACjClW,EAAKmQ,UACP+F,EAAOlW,GAGb,CACA,OAAO4E,CACT,CAtF2BgmE,CAAqBz8D,EAAOunC,EAAYplC,EACnE,CAEA,SAAS+5D,GAAaV,EAAQ1tC,EAAM15B,EAAOsoE,EAASC,GAClD,MAAM1jE,EAAMhe,KAAK2X,IAAI3X,KAAKge,IAAI7E,IACxB8F,EAAMjf,KAAK2X,IAAI3X,KAAKif,IAAI9F,IAC9B,IAAIzV,EAAI,EACJmS,EAAI,EACJ4rE,EAAQ7nE,MAAQi5B,EAAK/yC,GACvB4D,GAAKmvC,EAAK/yC,EAAI2hF,EAAQ7nE,OAASoE,EAC/BuiE,EAAOzgF,EAAIE,KAAKE,IAAIqgF,EAAOzgF,EAAG+yC,EAAK/yC,EAAI4D,IAC9B+9E,EAAQ5nE,IAAMg5B,EAAKpxC,IAC5BiC,GAAK+9E,EAAQ5nE,IAAMg5B,EAAKpxC,GAAKuc,EAC7BuiE,EAAO9+E,EAAIzB,KAAKC,IAAIsgF,EAAO9+E,EAAGoxC,EAAKpxC,EAAIiC,IAErCg+E,EAAQ9nE,MAAQi5B,EAAKthC,GACvBsE,GAAKg9B,EAAKthC,EAAImwE,EAAQ9nE,OAASqF,EAC/BshE,EAAOhvE,EAAIvR,KAAKE,IAAIqgF,EAAOhvE,EAAGshC,EAAKthC,EAAIsE,IAC9B6rE,EAAQ7nE,IAAMg5B,EAAK9xC,IAC5B8U,GAAK6rE,EAAQ7nE,IAAMg5B,EAAK9xC,GAAKke,EAC7BshE,EAAOx/E,EAAIf,KAAKC,IAAIsgF,EAAOx/E,EAAG8xC,EAAK9xC,EAAI8U,GAE3C,CAEA,SAASyrE,GAAqBv8D,EAAOvQ,EAAO4sE,GAC1C,MAAMO,EAAgB58D,EAAMg8D,aACtB,MAACM,EAAA,gBAAOV,EAAA,QAAiBz5D,EAAO,KAAEvQ,GAAQyqE,EAC1CQ,EAAqB78D,EAAM+7D,iBAAiBtsE,EAAOmtE,EAAgBN,EAAQn6D,EAASy5D,GACpFxnE,EAAQnZ,KAAKL,MAAM8Y,GAAUiB,GAAgBkoE,EAAmBzoE,MAAQ/B,MACxEvB,EA8ER,SAAmBA,EAAG9V,EAAGoZ,GACT,KAAVA,GAA0B,MAAVA,EAClBtD,GAAM9V,EAAI,GACDoZ,EAAQ,KAAOA,EAAQ,MAChCtD,GAAK9V,GAEP,OAAO8V,CACT,CArFYgsE,CAAUD,EAAmB/rE,EAAGc,EAAK5W,EAAGoZ,GAC5C6U,EA0DR,SAA8B7U,GAC5B,GAAc,IAAVA,GAAyB,MAAVA,EACjB,MAAO,SACF,GAAIA,EAAQ,IACjB,MAAO,OAGT,MAAO,OACT,CAlEoB2oE,CAAqB3oE,GACjCmO,EAmER,SAA0B5jB,EAAGnB,EAAG6Z,GAChB,UAAVA,EACF1Y,GAAKnB,EACc,WAAV6Z,IACT1Y,GAAMnB,EAAI,GAEZ,OAAOmB,CACT,CA1Eeq+E,CAAiBH,EAAmBl+E,EAAGiT,EAAKpU,EAAGyrB,GAC5D,MAAO,CAELjH,SAAS,EAGTrjB,EAAGk+E,EAAmBl+E,EACtBmS,IAGAmY,YAGA1G,OACAH,IAAKtR,EACLuR,MAAOE,EAAO3Q,EAAKpU,EACnB8kB,OAAQxR,EAAIc,EAAK5W,EAErB,CAEA,SAASwhF,GAAgB3qE,EAAMkW,GAC7B,IAAKA,EACH,OAAO,EAET,MAAM,KAACxF,EAAA,IAAMH,EAAA,MAAKC,EAAK,OAAEC,GAAUzQ,EAGnC,QAFqBgW,GAAe,CAAClpB,EAAG4jB,EAAMzR,EAAGsR,GAAM2F,IAASF,GAAe,CAAClpB,EAAG4jB,EAAMzR,EAAGwR,GAASyF,IACnGF,GAAe,CAAClpB,EAAG0jB,EAAOvR,EAAGsR,GAAM2F,IAASF,GAAe,CAAClpB,EAAG0jB,EAAOvR,EAAGwR,GAASyF,GAEtF,CAyDA,SAASk1D,GAAkB/9D,EAAK4J,EAAMjX,GACpC,MAAM,KAAC0Q,EAAA,IAAMH,EAAA,MAAKC,EAAK,OAAEC,GAAUzQ,GAC7B,cAAC2S,GAAiBsE,EAExB,IAAKrb,EAAc+W,GAAgB,CACjC,MAAMk4C,EAAehxC,GAAc5C,EAAK4zC,cAClCv6C,EAAUwJ,GAAU7C,EAAKrE,iBAC/BvF,EAAI8J,UAAYxE,EAEhB,MAAM04D,EAAe36D,EAAOJ,EAAQI,KAC9B46D,EAAc/6D,EAAMD,EAAQC,IAC5Bg7D,EAAgB/6D,EAAQE,EAAOJ,EAAQsB,MACvC45D,EAAiB/6D,EAASF,EAAMD,EAAQiE,OAE1C3c,OAAO8S,OAAOmgD,GAAc9K,MAAK/2D,GAAW,IAANA,KACxCqkB,EAAIgI,YACJwD,GAAmBxL,EAAK,CACtBvgB,EAAGu+E,EACHpsE,EAAGqsE,EACH3/E,EAAG4/E,EACHpiF,EAAGqiF,EACHv2D,OAAQ41C,IAEVx9C,EAAIwI,QAEJxI,EAAI+K,SAASizD,EAAcC,EAAaC,EAAeC,GAG7D,CA+BA,SAASC,GAAet9D,EAAO8G,EAAQ+rB,EAAUggC,GAC/C,MAAM,IAAC3zD,GAAOc,EACd,GAAI6yB,EAEF3zB,EAAIkI,IAAIpH,EAAMozB,QAASpzB,EAAMqzB,QAASvsB,EAAQ,EAAG9U,QAC5C,CAEL,IAAIukC,EAAgBv2B,EAAM+7D,iBAAiB,EAAGj1D,GAC9C5H,EAAIoI,OAAOivB,EAAc53C,EAAG43C,EAAczlC,GAE1C,IAAK,IAAIpT,EAAI,EAAGA,EAAIm1E,EAAYn1E,IAC9B64C,EAAgBv2B,EAAM+7D,iBAAiBr+E,EAAGopB,GAC1C5H,EAAIqI,OAAOgvB,EAAc53C,EAAG43C,EAAczlC,GAGhD,CAiCe,MAAMysE,WAA0B5D,GAE7Cv2C,UAAY,eAKZA,gBAAkB,CAChB5gB,SAAS,EAGTg7D,SAAS,EACT9lC,SAAU,YAEV9E,WAAY,CACVpwB,SAAS,EACTO,UAAW,EACXsY,WAAY,GACZC,iBAAkB,GAGpBxY,KAAM,CACJ+vB,UAAU,GAGZ7C,WAAY,EAGZtzB,MAAO,CAEL6H,mBAAmB,EAEnB7V,SAAU8O,GAAMlB,WAAWE,SAG7Bs2B,YAAa,CACXtuB,mBAAe1nB,EAGf2nB,gBAAiB,EAGjBjC,SAAS,EAGT5D,KAAM,CACJhN,KAAM,IAIRlD,SAASk6B,GACAA,EAITzmB,QAAS,EAGT05D,mBAAmB,IAIvBz4C,qBAAuB,CACrB,mBAAoB,cACpB,oBAAqB,QACrB,cAAe,SAGjBA,mBAAqB,CACnBwP,WAAY,CACVtxB,UAAW,SAIfnW,YAAYizB,GACV2Q,MAAM3Q,GAGN5yB,KAAK4nC,aAAUt2C,EAEf0O,KAAK6nC,aAAUv2C,EAEf0O,KAAKwwE,iBAAcl/E,EAEnB0O,KAAKkwE,aAAe,GACpBlwE,KAAK4wE,iBAAmB,EAC1B,CAEA72B,gBAEE,MAAMpjC,EAAU3W,KAAKojE,SAAWjjD,GAAU0vD,GAAsB7vE,KAAK0E,SAAW,GAC1E1S,EAAIgO,KAAKiY,MAAQjY,KAAKgf,SAAWrI,EAAQsB,MACzCzoB,EAAIwQ,KAAK4a,OAAS5a,KAAK2qB,UAAYhU,EAAQiE,OACjD5a,KAAK4nC,QAAUn4C,KAAKgY,MAAMzH,KAAK+W,KAAO/kB,EAAI,EAAI2kB,EAAQI,MACtD/W,KAAK6nC,QAAUp4C,KAAKgY,MAAMzH,KAAK4W,IAAMpnB,EAAI,EAAImnB,EAAQC,KACrD5W,KAAKwwE,YAAc/gF,KAAKgY,MAAMhY,KAAKE,IAAIqC,EAAGxC,GAAK,EACjD,CAEA0qD,sBACE,MAAM,IAACvqD,EAAG,IAAED,GAAOsQ,KAAKw8B,WAAU,GAElCx8B,KAAKrQ,IAAM6S,EAAS7S,KAASiY,MAAMjY,GAAOA,EAAM,EAChDqQ,KAAKtQ,IAAM8S,EAAS9S,KAASkY,MAAMlY,GAAOA,EAAM,EAGhDsQ,KAAKquE,wBACP,CAMAO,mBACE,OAAOn/E,KAAKgnD,KAAKz2C,KAAKwwE,YAAcX,GAAsB7vE,KAAK0E,SACjE,CAEAg3C,mBAAmBxqC,GACjBi9D,GAAgBhsE,UAAUu5C,mBAAmBr5C,KAAKrC,KAAMkR,GAGxDlR,KAAKkwE,aAAelwE,KAAK+7B,YACtBvpC,KAAI,CAAC0P,EAAO+B,KACX,MAAMm5B,EAAQl6B,EAAalD,KAAK0E,QAAQ4iC,YAAYpkC,SAAU,CAAChB,EAAO+B,GAAQjE,MAC9E,OAAOo9B,GAAmB,IAAVA,EAAcA,EAAQ,EAAE,IAEzCvZ,QAAO,CAACx0B,EAAG6C,IAAM8N,KAAKmR,MAAMiyB,kBAAkBlxC,IACnD,CAEA+oD,MACE,MAAM39B,EAAOtd,KAAK0E,QAEd4Y,EAAKtG,SAAWsG,EAAKgqB,YAAYtwB,QACnC+4D,GAAmB/vE,MAEnBA,KAAK2wE,eAAe,EAAG,EAAG,EAAG,EAEjC,CAEAA,eAAesB,EAAcC,EAAeC,EAAaC,GACvDpyE,KAAK4nC,SAAWn4C,KAAKgY,OAAOwqE,EAAeC,GAAiB,GAC5DlyE,KAAK6nC,SAAWp4C,KAAKgY,OAAO0qE,EAAcC,GAAkB,GAC5DpyE,KAAKwwE,aAAe/gF,KAAKE,IAAIqQ,KAAKwwE,YAAc,EAAG/gF,KAAKC,IAAIuiF,EAAcC,EAAeC,EAAaC,GACxG,CAEArqC,cAAc9jC,GAIZ,OAAOkF,GAAgBlF,GAHCuC,IAAOxG,KAAKkwE,aAAar+E,QAAU,IAGVmW,GAF9BhI,KAAK0E,QAAQ8/B,YAAc,GAGhD,CAEA2D,8BAA8BjmC,GAC5B,GAAID,EAAcC,GAChB,OAAOq6B,IAIT,MAAM81C,EAAgBryE,KAAKwwE,aAAexwE,KAAKtQ,IAAMsQ,KAAKrQ,KAC1D,OAAIqQ,KAAK0E,QAAQjB,SACPzD,KAAKtQ,IAAMwS,GAASmwE,GAEtBnwE,EAAQlC,KAAKrQ,KAAO0iF,CAC9B,CAEAC,8BAA8BxpE,GAC5B,GAAI7G,EAAc6G,GAChB,OAAOyzB,IAGT,MAAMg2C,EAAiBzpE,GAAY9I,KAAKwwE,aAAexwE,KAAKtQ,IAAMsQ,KAAKrQ,MACvE,OAAOqQ,KAAK0E,QAAQjB,QAAUzD,KAAKtQ,IAAM6iF,EAAiBvyE,KAAKrQ,IAAM4iF,CACvE,CAEAjC,qBAAqBrsE,GACnB,MAAMqjC,EAActnC,KAAKkwE,cAAgB,GAEzC,GAAIjsE,GAAS,GAAKA,EAAQqjC,EAAYz1C,OAAQ,CAC5C,MAAM2gF,EAAalrC,EAAYrjC,GAC/B,OA1LN,SAAiCwgB,EAAQxgB,EAAOm5B,GAC9C,OAAOvc,GAAc4D,EAAQ,CAC3B2Y,QACAn5B,QACArE,KAAM,cAEV,CAoLa6yE,CAAwBzyE,KAAKya,aAAcxW,EAAOuuE,GAE7D,CAEAjC,iBAAiBtsE,EAAOyuE,GAAyC,IAArBtC,EAAAx+E,UAAAC,OAAA,QAAAP,IAAAM,UAAA,GAAAA,UAAA,GAAkB,EAC5D,MAAMgX,EAAQ5I,KAAK+nC,cAAc9jC,GAAS4C,GAAUupE,EACpD,MAAO,CACLj9E,EAAG1D,KAAKif,IAAI9F,GAAS8pE,EAAqB1yE,KAAK4nC,QAC/CtiC,EAAG7V,KAAKge,IAAI7E,GAAS8pE,EAAqB1yE,KAAK6nC,QAC/Cj/B,QAEJ,CAEAoiC,yBAAyB/mC,EAAO/B,GAC9B,OAAOlC,KAAKuwE,iBAAiBtsE,EAAOjE,KAAKmoC,8BAA8BjmC,GACzE,CAEAywE,gBAAgB1uE,GACd,OAAOjE,KAAKgrC,yBAAyB/mC,GAAS,EAAGjE,KAAKk+C,eACxD,CAEA00B,sBAAsB3uE,GACpB,MAAM,KAAC8S,EAAA,IAAMH,EAAA,MAAKC,EAAK,OAAEC,GAAU9W,KAAK4wE,iBAAiB3sE,GACzD,MAAO,CACL8S,OACAH,MACAC,QACAC,SAEJ,CAKA0pC,iBACE,MAAM,gBAAC7tC,EAAiB2E,MAAM,SAAC+vB,IAAarnC,KAAK0E,QACjD,GAAIiO,EAAiB,CACnB,MAAMe,EAAM1T,KAAK0T,IACjBA,EAAImG,OACJnG,EAAIgI,YACJo2D,GAAe9xE,KAAMA,KAAKmoC,8BAA8BnoC,KAAKouE,WAAY/mC,EAAUrnC,KAAKkwE,aAAar+E,QACrG6hB,EAAImI,YACJnI,EAAI8J,UAAY7K,EAChBe,EAAIwI,OACJxI,EAAIuG,UAER,CAKAymC,WACE,MAAMhtC,EAAM1T,KAAK0T,IACX4J,EAAOtd,KAAK0E,SACZ,WAAC0iC,EAAU,KAAE9vB,EAAA,OAAMQ,GAAUwF,EAC7B+pD,EAAarnE,KAAKkwE,aAAar+E,OAErC,IAAIK,EAAG+kB,EAAQi1B,EAmBf,GAjBI5uB,EAAKgqB,YAAYtwB,SA1TzB,SAAyBxC,EAAO6yD,GAC9B,MAAM,IAAC3zD,EAAKhP,SAAS,YAAC4iC,IAAgB9yB,EAEtC,IAAK,IAAItiB,EAAIm1E,EAAa,EAAGn1E,GAAK,EAAGA,IAAK,CACxC,MAAMmU,EAAOmO,EAAMo8D,iBAAiB1+E,GACpC,IAAKmU,EAAKmQ,QAER,SAEF,MAAMipC,EAAcnY,EAAYtkB,WAAWxO,EAAM87D,qBAAqBp+E,IACtEu/E,GAAkB/9D,EAAK+rC,EAAap5C,GACpC,MAAMoqE,EAASrwD,GAAOq/B,EAAYrsC,OAC5B,EAACjgB,EAAC,EAAEmS,EAAA,UAAGmY,GAAapX,EAE1BqY,GACEhL,EACAc,EAAM07D,aAAah+E,GACnBiB,EACAmS,EAAKmrE,EAAOl9D,WAAa,EACzBk9D,EACA,CACEjwE,MAAOi/C,EAAYj/C,MACnBid,UAAWA,EACXC,aAAc,UAGpB,CACF,CAgSMm1D,CAAgB7yE,KAAMqnE,GAGpB/vD,EAAKN,SACPhX,KAAKkR,MAAMnG,SAAQ,CAACumB,EAAMrtB,KACxB,GAAc,IAAVA,GAA0B,IAAVA,GAAejE,KAAKrQ,IAAM,EAAI,CAChDsnB,EAASjX,KAAKmoC,8BAA8B7W,EAAKpvB,OACjD,MAAM6Q,EAAU/S,KAAKya,WAAWxW,GAC1Bw7C,EAAcnoC,EAAK0L,WAAWjQ,GAC9B2sC,EAAoB5nC,EAAOkL,WAAWjQ,IAtRtD,SAAwByB,EAAOs+D,EAAcx3D,EAAQ+rD,EAAY7oB,GAC/D,MAAM9qC,EAAMc,EAAMd,IACZ2zB,EAAWyrC,EAAazrC,UAExB,MAAC7mC,EAAA,UAAO+W,GAAau7D,GAErBzrC,IAAaggC,IAAgB7mE,IAAU+W,GAAa+D,EAAS,IAInE5H,EAAImG,OACJnG,EAAI2K,YAAc7d,EAClBkT,EAAI6D,UAAYA,EAChB7D,EAAIktC,YAAYpC,EAAWzmC,MAC3BrE,EAAImtC,eAAiBrC,EAAWxmC,WAEhCtE,EAAIgI,YACJo2D,GAAet9D,EAAO8G,EAAQ+rB,EAAUggC,GACxC3zD,EAAImI,YACJnI,EAAI0I,SACJ1I,EAAIuG,UACN,CAmQU84D,CAAe/yE,KAAMy/C,EAAaxoC,EAAQowD,EAAY3nB,OAKxDtY,EAAWpwB,QAAS,CAGtB,IAFAtD,EAAImG,OAEC3nB,EAAIm1E,EAAa,EAAGn1E,GAAK,EAAGA,IAAK,CACpC,MAAMutD,EAAcrY,EAAWpkB,WAAWhjB,KAAKswE,qBAAqBp+E,KAC9D,MAACsO,EAAA,UAAO+W,GAAakoC,EAEtBloC,GAAc/W,IAInBkT,EAAI6D,UAAYA,EAChB7D,EAAI2K,YAAc7d,EAElBkT,EAAIktC,YAAYnB,EAAY5vB,YAC5Bnc,EAAImtC,eAAiBpB,EAAY3vB,iBAEjC7Y,EAASjX,KAAKmoC,8BAA8B7qB,EAAKpM,MAAMzN,QAAUzD,KAAKrQ,IAAMqQ,KAAKtQ,KACjFw8C,EAAWlsC,KAAKuwE,iBAAiBr+E,EAAG+kB,GACpCvD,EAAIgI,YACJhI,EAAIoI,OAAO9b,KAAK4nC,QAAS5nC,KAAK6nC,SAC9Bn0B,EAAIqI,OAAOmwB,EAAS/4C,EAAG+4C,EAAS5mC,GAChCoO,EAAI0I,SACN,CAEA1I,EAAIuG,UAER,CAKA6mC,aAAc,CAKdE,aACE,MAAMttC,EAAM1T,KAAK0T,IACX4J,EAAOtd,KAAK0E,QACZgxC,EAAWp4B,EAAKpM,MAEtB,IAAKwkC,EAAS1+B,QACZ,OAGF,MAAMwtB,EAAaxkC,KAAK+nC,cAAc,GACtC,IAAI9wB,EAAQgB,EAEZvE,EAAImG,OACJnG,EAAI8H,UAAUxb,KAAK4nC,QAAS5nC,KAAK6nC,SACjCn0B,EAAI9R,OAAO4iC,GACX9wB,EAAI+J,UAAY,SAChB/J,EAAIgK,aAAe,SAEnB1d,KAAKkR,MAAMnG,SAAQ,CAACumB,EAAMrtB,KACxB,GAAe,IAAVA,GAAejE,KAAKrQ,KAAO,IAAO2tB,EAAK7Z,QAC1C,OAGF,MAAMg8C,EAAc/J,EAAS1yB,WAAWhjB,KAAKya,WAAWxW,IAClDu5C,EAAWp9B,GAAOq/B,EAAYrsC,MAGpC,GAFA6D,EAASjX,KAAKmoC,8BAA8BnoC,KAAKkR,MAAMjN,GAAO/B,OAE1Du9C,EAAY1mC,kBAAmB,CACjCrF,EAAIN,KAAOoqC,EAASlkC,OACpBrB,EAAQvE,EAAI8F,YAAY8X,EAAK8L,OAAOnlB,MACpCvE,EAAI8J,UAAYiiC,EAAYzmC,cAE5B,MAAMrC,EAAUwJ,GAAUs/B,EAAYxmC,iBACtCvF,EAAI+K,UACDxG,EAAQ,EAAItB,EAAQI,MACpBE,EAASumC,EAASp3C,KAAO,EAAIuQ,EAAQC,IACtCqB,EAAQtB,EAAQsB,MAChBulC,EAASp3C,KAAOuQ,EAAQiE,QAI5B8D,GAAWhL,EAAK4d,EAAK8L,MAAO,GAAInmB,EAAQumC,EAAU,CAChDh9C,MAAOi/C,EAAYj/C,MACnBqe,YAAa4gC,EAAYjnC,gBACzBoG,YAAa6gC,EAAYlnC,iBACzB,IAGJ7E,EAAIuG,SACN,CAKAinC,YAAa,EC3pBf,MAAM8xB,GAAY,CAChBC,YAAa,CAACC,QAAQ,EAAM9sE,KAAM,EAAG8oE,MAAO,KAC5CiE,OAAQ,CAACD,QAAQ,EAAM9sE,KAAM,IAAM8oE,MAAO,IAC1CkE,OAAQ,CAACF,QAAQ,EAAM9sE,KAAM,IAAO8oE,MAAO,IAC3CmE,KAAM,CAACH,QAAQ,EAAM9sE,KAAM,KAAS8oE,MAAO,IAC3CoE,IAAK,CAACJ,QAAQ,EAAM9sE,KAAM,MAAU8oE,MAAO,IAC3CqE,KAAM,CAACL,QAAQ,EAAO9sE,KAAM,OAAW8oE,MAAO,GAC9CsE,MAAO,CAACN,QAAQ,EAAM9sE,KAAM,OAAS8oE,MAAO,IAC5CuE,QAAS,CAACP,QAAQ,EAAO9sE,KAAM,OAAS8oE,MAAO,GAC/CwE,KAAM,CAACR,QAAQ,EAAM9sE,KAAM,SAMvButE,GAA6C11E,OAAOD,KAAKg1E,IAM/D,SAASY,GAAOrjF,EAAGC,GACjB,OAAOD,EAAIC,CACb,CAOA,SAAS40B,GAAM5Q,EAAOlV,GACpB,GAAI2C,EAAc3C,GAChB,OAAO,KAGT,MAAMu0E,EAAUr/D,EAAMs/D,UAChB,OAACC,EAAA,MAAQ3kF,EAAA,WAAO4kF,GAAcx/D,EAAMy/D,WAC1C,IAAI/xE,EAAQ5C,EAaZ,MAXsB,oBAAXy0E,IACT7xE,EAAQ6xE,EAAO7xE,IAIZM,EAASN,KACZA,EAA0B,kBAAX6xE,EACXF,EAAQzuD,MAAMljB,EAA4B6xE,GAC1CF,EAAQzuD,MAAMljB,IAGN,OAAVA,EACK,MAGL9S,IACF8S,EAAkB,SAAV9S,IAAqBuY,GAASqsE,KAA8B,IAAfA,EAEjDH,EAAQpoC,QAAQvpC,EAAO9S,GADvBykF,EAAQpoC,QAAQvpC,EAAO,UAAW8xE,KAIhC9xE,EACV,CAUA,SAASgyE,GAA0BC,EAASxkF,EAAKD,EAAK0kF,GACpD,MAAMvwE,EAAO8vE,GAAM9hF,OAEnB,IAAK,IAAIK,EAAIyhF,GAAMnvE,QAAQ2vE,GAAUjiF,EAAI2R,EAAO,IAAK3R,EAAG,CACtD,MAAMmiF,EAAWrB,GAAUW,GAAMzhF,IAC3BsgC,EAAS6hD,EAASnF,MAAQmF,EAASnF,MAAQzsE,OAAO6xE,iBAExD,GAAID,EAASnB,QAAUzjF,KAAKgnD,MAAM/mD,EAAMC,IAAQ6iC,EAAS6hD,EAASjuE,QAAUguE,EAC1E,OAAOT,GAAMzhF,EAEjB,CAEA,OAAOyhF,GAAM9vE,EAAO,EACtB,CAuCA,SAAS0wE,GAAQrjE,EAAOsjE,EAAMC,GAC5B,GAAKA,GAEE,GAAIA,EAAW5iF,OAAQ,CAC5B,MAAM,GAACsY,EAAE,GAAED,GAAMJ,GAAQ2qE,EAAYD,GAErCtjE,EADkBujE,EAAWtqE,IAAOqqE,EAAOC,EAAWtqE,GAAMsqE,EAAWvqE,KACpD,QAJnBgH,EAAMsjE,IAAQ,CAMlB,CA8BA,SAASE,GAAoBlgE,EAAOzD,EAAQ4jE,GAC1C,MAAMzjE,EAAQ,GAER1e,EAAM,CAAC,EACPqR,EAAOkN,EAAOlf,OACpB,IAAIK,EAAGgQ,EAEP,IAAKhQ,EAAI,EAAGA,EAAI2R,IAAQ3R,EACtBgQ,EAAQ6O,EAAO7e,GACfM,EAAI0P,GAAShQ,EAEbgf,EAAMtL,KAAK,CACT1D,QACA2W,OAAO,IAMX,OAAiB,IAAThV,GAAe8wE,EAxCzB,SAAuBngE,EAAOtD,EAAO1e,EAAKmiF,GACxC,MAAMd,EAAUr/D,EAAMs/D,SAChBv9B,GAASs9B,EAAQpoC,QAAQv6B,EAAM,GAAGhP,MAAOyyE,GACzCtqE,EAAO6G,EAAMA,EAAMrf,OAAS,GAAGqQ,MACrC,IAAI2W,EAAO5U,EAEX,IAAK4U,EAAQ09B,EAAO19B,GAASxO,EAAMwO,GAASg7D,EAAQvwD,IAAIzK,EAAO,EAAG87D,GAChE1wE,EAAQzR,EAAIqmB,GACR5U,GAAS,IACXiN,EAAMjN,GAAO4U,OAAQ,GAGzB,OAAO3H,CACT,CA2B8C0jE,CAAcpgE,EAAOtD,EAAO1e,EAAKmiF,GAAzCzjE,CACtC,CAEe,MAAM2jE,WAAkB58B,GAErCrgB,UAAY,OAKZA,gBAAkB,CAQhBzgB,OAAQ,OAERw0B,SAAU,CAAC,EACX6oC,KAAM,CACJT,QAAQ,EACR1G,MAAM,EACNj+E,OAAO,EACP4kF,YAAY,EACZG,QAAS,cACTW,eAAgB,CAAC,GAEnB5jE,MAAO,CASLhN,OAAQ,OAERhB,UAAU,EAEV2V,MAAO,CACLu9B,SAAS,KAQfz2C,YAAYkgB,GACV0jB,MAAM1jB,GAGN7f,KAAK0gC,OAAS,CACZvnB,KAAM,GACN2iB,OAAQ,GACR/G,IAAK,IAIP/0B,KAAK+0E,MAAQ,MAEb/0E,KAAKg1E,gBAAa1jF,EAClB0O,KAAKi1E,SAAW,CAAC,EACjBj1E,KAAKk1E,aAAc,EACnBl1E,KAAKi0E,gBAAa3iF,CACpB,CAEAg6C,KAAKmhB,GAAsB,IAAXnvC,EAAO1rB,UAAAC,OAAA,QAAAP,IAAAM,UAAA,GAAAA,UAAA,MACrB,MAAM4iF,EAAO/nB,EAAU+nB,OAAS/nB,EAAU+nB,KAAO,CAAC,GAE5CX,EAAU7zE,KAAK8zE,SAAW,IAAInoC,GAAe8gB,EAAU9gB,SAASnb,MAEtEqjD,EAAQvoC,KAAKhuB,GAMbrY,EAAQuvE,EAAKM,eAAgBjB,EAAQtoC,WAErCvrC,KAAKi0E,WAAa,CAChBF,OAAQS,EAAKT,OACb3kF,MAAOolF,EAAKplF,MACZ4kF,WAAYQ,EAAKR,YAGnBzwC,MAAM+H,KAAKmhB,GAEXzsD,KAAKk1E,YAAc53D,EAAK63D,UAC1B,CAOA/vD,MAAM0Y,EAAK75B,GACT,YAAY3S,IAARwsC,EACK,KAEF1Y,GAAMplB,KAAM89B,EACrB,CAEAqT,eACE5N,MAAM4N,eACNnxC,KAAK0gC,OAAS,CACZvnB,KAAM,GACN2iB,OAAQ,GACR/G,IAAK,GAET,CAEAmlB,sBACE,MAAMx1C,EAAU1E,KAAK0E,QACfmvE,EAAU7zE,KAAK8zE,SACfzG,EAAO3oE,EAAQ8vE,KAAKnH,MAAQ,MAElC,IAAI,IAAC19E,EAAA,IAAKD,EAAA,WAAK+c,EAAA,WAAYC,GAAc1M,KAAK2M,gBAK9C,SAASyoE,EAAaj+D,GACf1K,GAAe7E,MAAMuP,EAAOxnB,OAC/BA,EAAMF,KAAKE,IAAIA,EAAKwnB,EAAOxnB,MAExB+c,GAAe9E,MAAMuP,EAAOznB,OAC/BA,EAAMD,KAAKC,IAAIA,EAAKynB,EAAOznB,KAE/B,CAGK+c,GAAeC,IAElB0oE,EAAap1E,KAAKq1E,mBAIK,UAAnB3wE,EAAQyS,QAA+C,WAAzBzS,EAAQwM,MAAMhN,QAC9CkxE,EAAap1E,KAAKw8B,WAAU,KAIhC7sC,EAAM6S,EAAS7S,KAASiY,MAAMjY,GAAOA,GAAOkkF,EAAQpoC,QAAQ1a,KAAKC,MAAOq8C,GACxE39E,EAAM8S,EAAS9S,KAASkY,MAAMlY,GAAOA,GAAOmkF,EAAQnoC,MAAM3a,KAAKC,MAAOq8C,GAAQ,EAG9ErtE,KAAKrQ,IAAMF,KAAKE,IAAIA,EAAKD,EAAM,GAC/BsQ,KAAKtQ,IAAMD,KAAKC,IAAIC,EAAM,EAAGD,EAC/B,CAKA2lF,kBACE,MAAMzxD,EAAM5jB,KAAKs1E,qBACjB,IAAI3lF,EAAM8S,OAAOkE,kBACbjX,EAAM+S,OAAOo6B,kBAMjB,OAJIjZ,EAAI/xB,SACNlC,EAAMi0B,EAAI,GACVl0B,EAAMk0B,EAAIA,EAAI/xB,OAAS,IAElB,CAAClC,MAAKD,MACf,CAKA8qD,aACE,MAAM91C,EAAU1E,KAAK0E,QACf6wE,EAAW7wE,EAAQ8vE,KACnB9+B,EAAWhxC,EAAQwM,MACnBujE,EAAiC,WAApB/+B,EAASxxC,OAAsBlE,KAAKs1E,qBAAuBt1E,KAAKw1E,YAE5D,UAAnB9wE,EAAQyS,QAAsBs9D,EAAW5iF,SAC3CmO,KAAKrQ,IAAMqQ,KAAK84C,UAAY27B,EAAW,GACvCz0E,KAAKtQ,IAAMsQ,KAAK64C,UAAY47B,EAAWA,EAAW5iF,OAAS,IAG7D,MAAMlC,EAAMqQ,KAAKrQ,IAGXuhB,EpE1SH,SAAwBH,EAAkBphB,EAAaD,GAC5D,IAAI2Z,EAAQ,EACRC,EAAMyH,EAAOlf,OAEjB,KAAOwX,EAAQC,GAAOyH,EAAO1H,GAAS1Z,GACpC0Z,IAEF,KAAOC,EAAMD,GAAS0H,EAAOzH,EAAM,GAAK5Z,GACtC4Z,IAGF,OAAOD,EAAQ,GAAKC,EAAMyH,EAAOlf,OAC7Bkf,EAAOzO,MAAM+G,EAAOC,GACpByH,CACN,CoE4RkB0kE,CAAehB,EAAY9kF,EAF7BqQ,KAAKtQ,KAkBjB,OAXAsQ,KAAK+0E,MAAQQ,EAASlI,OAAS33B,EAASj9B,SACpCy7D,GAA0BqB,EAASpB,QAASn0E,KAAKrQ,IAAKqQ,KAAKtQ,IAAKsQ,KAAK01E,kBAAkB/lF,IArR/F,SAAoC6kB,EAAOonC,EAAUu4B,EAASxkF,EAAKD,GACjE,IAAK,IAAIwC,EAAIyhF,GAAM9hF,OAAS,EAAGK,GAAKyhF,GAAMnvE,QAAQ2vE,GAAUjiF,IAAK,CAC/D,MAAMm7E,EAAOsG,GAAMzhF,GACnB,GAAI8gF,GAAU3F,GAAM6F,QAAU1+D,EAAMs/D,SAAStoC,KAAK97C,EAAKC,EAAK09E,IAASzxB,EAAW,EAC9E,OAAOyxB,CAEX,CAEA,OAAOsG,GAAMQ,EAAUR,GAAMnvE,QAAQ2vE,GAAW,EAClD,CA6QQwB,CAA2B31E,KAAMkR,EAAMrf,OAAQ0jF,EAASpB,QAASn0E,KAAKrQ,IAAKqQ,KAAKtQ,MACpFsQ,KAAKg1E,WAAct/B,EAAS78B,MAAMu9B,SAA0B,SAAfp2C,KAAK+0E,MAxQtD,SAA4B1H,GAC1B,IAAK,IAAIn7E,EAAIyhF,GAAMnvE,QAAQ6oE,GAAQ,EAAGxpE,EAAO8vE,GAAM9hF,OAAQK,EAAI2R,IAAQ3R,EACrE,GAAI8gF,GAAUW,GAAMzhF,IAAIghF,OACtB,OAAOS,GAAMzhF,EAGnB,CAmQQ0jF,CAAmB51E,KAAK+0E,YADyCzjF,EAErE0O,KAAK61E,YAAYpB,GAEb/vE,EAAQjB,SACVyN,EAAMzN,UAGDixE,GAAoB10E,KAAMkR,EAAOlR,KAAKg1E,WAC/C,CAEAj6B,gBAGM/6C,KAAK0E,QAAQoxE,qBACf91E,KAAK61E,YAAY71E,KAAKkR,MAAM1e,KAAI8+B,IAASA,EAAKpvB,QAElD,CAUA2zE,cAA6B,IAGvBt/B,EAAOlsC,EAHDoqE,EAAa7iF,UAAAC,OAAA,QAAAP,IAAAM,UAAC,GAADA,UAAC,GAAD,GACnByX,EAAQ,EACRC,EAAM,EAGNtJ,KAAK0E,QAAQuS,QAAUw9D,EAAW5iF,SACpC0kD,EAAQv2C,KAAK+1E,mBAAmBtB,EAAW,IAEzCprE,EADwB,IAAtBorE,EAAW5iF,OACL,EAAI0kD,GAEHv2C,KAAK+1E,mBAAmBtB,EAAW,IAAMl+B,GAAS,EAE7DlsC,EAAOrK,KAAK+1E,mBAAmBtB,EAAWA,EAAW5iF,OAAS,IAE5DyX,EADwB,IAAtBmrE,EAAW5iF,OACPwY,GAECA,EAAOrK,KAAK+1E,mBAAmBtB,EAAWA,EAAW5iF,OAAS,KAAO,GAGhF,MAAM0tD,EAAQk1B,EAAW5iF,OAAS,EAAI,GAAM,IAC5CwX,EAAQO,GAAYP,EAAO,EAAGk2C,GAC9Bj2C,EAAMM,GAAYN,EAAK,EAAGi2C,GAE1Bv/C,KAAKi1E,SAAW,CAAC5rE,QAAOC,MAAKkpB,OAAQ,GAAKnpB,EAAQ,EAAIC,GACxD,CASAksE,YACE,MAAM3B,EAAU7zE,KAAK8zE,SACfnkF,EAAMqQ,KAAKrQ,IACXD,EAAMsQ,KAAKtQ,IACXgV,EAAU1E,KAAK0E,QACf6wE,EAAW7wE,EAAQ8vE,KAEnB57D,EAAQ28D,EAASlI,MAAQ6G,GAA0BqB,EAASpB,QAASxkF,EAAKD,EAAKsQ,KAAK01E,kBAAkB/lF,IACtGg/E,EAAW9rE,EAAe6B,EAAQwM,MAAMy9D,SAAU,GAClDqH,EAAoB,SAAVp9D,GAAmB28D,EAASvB,WACtCiC,EAAatuE,GAASquE,KAAwB,IAAZA,EAClC9kE,EAAQ,CAAC,EACf,IACIsjE,EAAMpoE,EADNmqC,EAAQ5mD,EAYZ,GARIsmF,IACF1/B,GAASs9B,EAAQpoC,QAAQ8K,EAAO,UAAWy/B,IAI7Cz/B,GAASs9B,EAAQpoC,QAAQ8K,EAAO0/B,EAAa,MAAQr9D,GAGjDi7D,EAAQroC,KAAK97C,EAAKC,EAAKipB,GAAS,IAAS+1D,EAC3C,MAAM,IAAIvrD,MAAMzzB,EAAM,QAAUD,EAAM,uCAAyCi/E,EAAW,IAAM/1D,GAGlG,MAAM67D,EAAsC,SAAzB/vE,EAAQwM,MAAMhN,QAAqBlE,KAAKk2E,oBAC3D,IAAK1B,EAAOj+B,EAAOnqC,EAAQ,EAAGooE,EAAO9kF,EAAK8kF,GAAQX,EAAQvwD,IAAIkxD,EAAM7F,EAAU/1D,GAAQxM,IACpFmoE,GAAQrjE,EAAOsjE,EAAMC,GAQvB,OALID,IAAS9kF,GAA0B,UAAnBgV,EAAQyS,QAAgC,IAAV/K,GAChDmoE,GAAQrjE,EAAOsjE,EAAMC,GAIhBx2E,OAAOD,KAAKkT,GAAO4vB,KAAK8yC,IAAQphF,KAAIW,IAAMA,GACnD,CAMAkqC,iBAAiBn7B,GACf,MAAM2xE,EAAU7zE,KAAK8zE,SACfyB,EAAWv1E,KAAK0E,QAAQ8vE,KAE9B,OAAIe,EAASY,cACJtC,EAAQhjE,OAAO3O,EAAOqzE,EAASY,eAEjCtC,EAAQhjE,OAAO3O,EAAOqzE,EAAST,eAAesB,SACvD,CAOAvlE,OAAO3O,EAAO2O,GACZ,MACM06B,EADUvrC,KAAK0E,QACG8vE,KAAKM,eACvBzH,EAAOrtE,KAAK+0E,MACZsB,EAAMxlE,GAAU06B,EAAQ8hC,GAC9B,OAAOrtE,KAAK8zE,SAASjjE,OAAO3O,EAAOm0E,EACrC,CAWAC,oBAAoB9B,EAAMvwE,EAAOiN,EAAOL,GACtC,MAAMnM,EAAU1E,KAAK0E,QACf8L,EAAY9L,EAAQwM,MAAMhO,SAEhC,GAAIsN,EACF,OAAOtN,EAAKsN,EAAW,CAACgkE,EAAMvwE,EAAOiN,GAAQlR,MAG/C,MAAMurC,EAAU7mC,EAAQ8vE,KAAKM,eACvBzH,EAAOrtE,KAAK+0E,MACZJ,EAAY30E,KAAKg1E,WACjBuB,EAAclJ,GAAQ9hC,EAAQ8hC,GAC9BmJ,EAAc7B,GAAappC,EAAQopC,GACnCrjD,EAAOpgB,EAAMjN,GACb4U,EAAQ87D,GAAa6B,GAAellD,GAAQA,EAAKzY,MAEvD,OAAO7Y,KAAK8zE,SAASjjE,OAAO2jE,EAAM3jE,IAAWgI,EAAQ29D,EAAcD,GACrE,CAKA76B,mBAAmBxqC,GACjB,IAAIhf,EAAG2R,EAAMytB,EAEb,IAAKp/B,EAAI,EAAG2R,EAAOqN,EAAMrf,OAAQK,EAAI2R,IAAQ3R,EAC3Co/B,EAAOpgB,EAAMhf,GACbo/B,EAAK8L,MAAQp9B,KAAKs2E,oBAAoBhlD,EAAKpvB,MAAOhQ,EAAGgf,EAEzD,CAMA6kE,mBAAmB7zE,GACjB,OAAiB,OAAVA,EAAiBq6B,KAAOr6B,EAAQlC,KAAKrQ,MAAQqQ,KAAKtQ,IAAMsQ,KAAKrQ,IACtE,CAMAid,iBAAiB1K,GACf,MAAMu0E,EAAUz2E,KAAKi1E,SACf7rD,EAAMppB,KAAK+1E,mBAAmB7zE,GACpC,OAAOlC,KAAKgqC,oBAAoBysC,EAAQptE,MAAQ+f,GAAOqtD,EAAQjkD,OACjE,CAMA0X,iBAAiB9vB,GACf,MAAMq8D,EAAUz2E,KAAKi1E,SACf7rD,EAAMppB,KAAKi+C,mBAAmB7jC,GAASq8D,EAAQjkD,OAASikD,EAAQntE,IACtE,OAAOtJ,KAAKrQ,IAAMy5B,GAAOppB,KAAKtQ,IAAMsQ,KAAKrQ,IAC3C,CAOA+mF,cAAct5C,GACZ,MAAMu5C,EAAY32E,KAAK0E,QAAQwM,MACzB0lE,EAAiB52E,KAAK0T,IAAI8F,YAAY4jB,GAAOnlB,MAC7CrP,EAAQZ,GAAUhI,KAAKwoC,eAAiBmuC,EAAUt+D,YAAcs+D,EAAUv+D,aAC1Ey+D,EAAcpnF,KAAKif,IAAI9F,GACvBkuE,EAAcrnF,KAAKge,IAAI7E,GACvBmuE,EAAe/2E,KAAK69C,wBAAwB,GAAGz3C,KAErD,MAAO,CACLpU,EAAI4kF,EAAiBC,EAAgBE,EAAeD,EACpDtnF,EAAIonF,EAAiBE,EAAgBC,EAAeF,EAExD,CAOAnB,kBAAkBsB,GAChB,MAAMzB,EAAWv1E,KAAK0E,QAAQ8vE,KACxBM,EAAiBS,EAAST,eAG1BjkE,EAASikE,EAAeS,EAASlI,OAASyH,EAAe7B,YACzDgE,EAAej3E,KAAKs2E,oBAAoBU,EAAa,EAAGtC,GAAoB10E,KAAM,CAACg3E,GAAch3E,KAAKg1E,YAAankE,GACnHzK,EAAOpG,KAAK02E,cAAcO,GAG1B7C,EAAW3kF,KAAKgY,MAAMzH,KAAKwoC,eAAiBxoC,KAAKiY,MAAQ7R,EAAKpU,EAAIgO,KAAK4a,OAASxU,EAAK5W,GAAK,EAChG,OAAO4kF,EAAW,EAAIA,EAAW,CACnC,CAKA8B,oBACE,IACIhkF,EAAG2R,EADH4wE,EAAaz0E,KAAK0gC,OAAOvnB,MAAQ,GAGrC,GAAIs7D,EAAW5iF,OACb,OAAO4iF,EAGT,MAAMn7B,EAAQt5C,KAAKu2B,0BAEnB,GAAIv2B,KAAKk1E,aAAe57B,EAAMznD,OAC5B,OAAQmO,KAAK0gC,OAAOvnB,KAAOmgC,EAAM,GAAG7iB,WAAWwG,mBAAmBj9B,MAGpE,IAAK9N,EAAI,EAAG2R,EAAOy1C,EAAMznD,OAAQK,EAAI2R,IAAQ3R,EAC3CuiF,EAAaA,EAAW5zC,OAAOyY,EAAMpnD,GAAGukC,WAAWwG,mBAAmBj9B,OAGxE,OAAQA,KAAK0gC,OAAOvnB,KAAOnZ,KAAK4tB,UAAU6mD,EAC5C,CAKAa,qBACE,MAAMb,EAAaz0E,KAAK0gC,OAAO5E,QAAU,GACzC,IAAI5pC,EAAG2R,EAEP,GAAI4wE,EAAW5iF,OACb,OAAO4iF,EAGT,MAAM34C,EAAS97B,KAAK+7B,YACpB,IAAK7pC,EAAI,EAAG2R,EAAOi4B,EAAOjqC,OAAQK,EAAI2R,IAAQ3R,EAC5CuiF,EAAW7uE,KAAKwf,GAAMplB,KAAM87B,EAAO5pC,KAGrC,OAAQ8N,KAAK0gC,OAAO5E,OAAS97B,KAAKk1E,YAAcT,EAAaz0E,KAAK4tB,UAAU6mD,EAC9E,CAMA7mD,UAAU7c,GAER,OAAO/F,GAAa+F,EAAO+vB,KAAK8yC,IAClC,ECtpBF,SAAS7yE,GAAYgJ,EAAO1I,EAAKoC,GAC/B,IAEIyzE,EAAYC,EAAYC,EAAYC,EAFpCltE,EAAK,EACLD,EAAKH,EAAMlY,OAAS,EAEpB4R,GACEpC,GAAO0I,EAAMI,GAAIif,KAAO/nB,GAAO0I,EAAMG,GAAIkf,OACzCjf,KAAID,MAAME,GAAaL,EAAO,MAAO1I,MAEvC+nB,IAAK8tD,EAAY1C,KAAM4C,GAAcrtE,EAAMI,MAC3Cif,IAAK+tD,EAAY3C,KAAM6C,GAActtE,EAAMG,MAEzC7I,GAAO0I,EAAMI,GAAIqqE,MAAQnzE,GAAO0I,EAAMG,GAAIsqE,QAC1CrqE,KAAID,MAAME,GAAaL,EAAO,OAAQ1I,MAExCmzE,KAAM0C,EAAY9tD,IAAKguD,GAAcrtE,EAAMI,MAC3CqqE,KAAM2C,EAAY/tD,IAAKiuD,GAActtE,EAAMG,KAG/C,MAAMotE,EAAOH,EAAaD,EAC1B,OAAOI,EAAOF,GAAcC,EAAaD,IAAe/1E,EAAM61E,GAAcI,EAAOF,CACrF,OCZajoF,GAAgB,CAC3ByzD,GACA1vC,GACAoB,uIDWF,cAA8BugE,GAE5Bj9C,UAAY,aAKZA,gBAAkBi9C,GAAUn/D,SAK5B/V,YAAYkgB,GACV0jB,MAAM1jB,GAGN7f,KAAKu3E,OAAS,GAEdv3E,KAAKw3E,aAAUlmF,EAEf0O,KAAKy3E,iBAAcnmF,CACrB,CAKAukF,cACE,MAAMpB,EAAaz0E,KAAK03E,yBAClB3tE,EAAQ/J,KAAKu3E,OAASv3E,KAAK23E,iBAAiBlD,GAClDz0E,KAAKw3E,QAAUz2E,GAAYgJ,EAAO/J,KAAKrQ,KACvCqQ,KAAKy3E,YAAc12E,GAAYgJ,EAAO/J,KAAKtQ,KAAOsQ,KAAKw3E,QACvDj0C,MAAMsyC,YAAYpB,EACpB,CAaAkD,iBAAiBlD,GACf,MAAM,IAAC9kF,EAAG,IAAED,GAAOsQ,KACbiL,EAAQ,GACRlB,EAAQ,GACd,IAAI7X,EAAG2R,EAAM8jB,EAAMqZ,EAAMnb,EAEzB,IAAK3zB,EAAI,EAAG2R,EAAO4wE,EAAW5iF,OAAQK,EAAI2R,IAAQ3R,EAChD8uC,EAAOyzC,EAAWviF,GACd8uC,GAAQrxC,GAAOqxC,GAAQtxC,GACzBub,EAAMrF,KAAKo7B,GAIf,GAAI/1B,EAAMpZ,OAAS,EAEjB,MAAO,CACL,CAAC2iF,KAAM7kF,EAAKy5B,IAAK,GACjB,CAACorD,KAAM9kF,EAAK05B,IAAK,IAIrB,IAAKl3B,EAAI,EAAG2R,EAAOoH,EAAMpZ,OAAQK,EAAI2R,IAAQ3R,EAC3C2zB,EAAO5a,EAAM/Y,EAAI,GACjBy1B,EAAO1c,EAAM/Y,EAAI,GACjB8uC,EAAO/1B,EAAM/Y,GAGTzC,KAAKL,OAAOy2B,EAAO8B,GAAQ,KAAOqZ,GACpCj3B,EAAMnE,KAAK,CAAC4uE,KAAMxzC,EAAM5X,IAAKl3B,GAAK2R,EAAO,KAG7C,OAAOkG,CACT,CAQAyrE,YACE,MAAM7lF,EAAMqQ,KAAKrQ,IACXD,EAAMsQ,KAAKtQ,IACjB,IAAI+kF,EAAalxC,MAAM2yC,oBAOvB,OANKzB,EAAW1iE,SAASpiB,IAAS8kF,EAAW5iF,QAC3C4iF,EAAW3pE,OAAO,EAAG,EAAGnb,GAErB8kF,EAAW1iE,SAASriB,IAA8B,IAAtB+kF,EAAW5iF,QAC1C4iF,EAAW7uE,KAAKlW,GAEX+kF,EAAW3zC,MAAK,CAACvwC,EAAGC,IAAMD,EAAIC,GACvC,CAOAknF,yBACE,IAAIjD,EAAaz0E,KAAK0gC,OAAO3L,KAAO,GAEpC,GAAI0/C,EAAW5iF,OACb,OAAO4iF,EAGT,MAAMt7D,EAAOnZ,KAAKk2E,oBACZ94C,EAAQp9B,KAAKs1E,qBAUnB,OANEb,EAHEt7D,EAAKtnB,QAAUurC,EAAMvrC,OAGVmO,KAAK4tB,UAAUzU,EAAK0nB,OAAOzD,IAE3BjkB,EAAKtnB,OAASsnB,EAAOikB,EAEpCq3C,EAAaz0E,KAAK0gC,OAAO3L,IAAM0/C,EAExBA,CACT,CAMAsB,mBAAmB7zE,GACjB,OAAQnB,GAAYf,KAAKu3E,OAAQr1E,GAASlC,KAAKw3E,SAAWx3E,KAAKy3E,WACjE,CAMAvtC,iBAAiB9vB,GACf,MAAMq8D,EAAUz2E,KAAKi1E,SACfj3B,EAAUh+C,KAAKi+C,mBAAmB7jC,GAASq8D,EAAQjkD,OAASikD,EAAQntE,IAC1E,OAAOvI,GAAYf,KAAKu3E,OAAQv5B,EAAUh+C,KAAKy3E,YAAcz3E,KAAKw3E,SAAS,EAC7E,gEEjKF,MAAMI,EAAsB,QAErB,SAASC,EAAgBC,EAAsB51E,GACjC,oBAAR41E,EACTA,EAAI51E,GACK41E,IACTA,EAAI9yE,QAAU9C,EAElB,CAcO,SAAS61E,EAKdC,EACAC,GAEAD,EAAYl8C,OAASm8C,CACvB,CAEO,SAASC,EAKdF,EACAG,GACA,IAAAC,EAAAxmF,UAAAC,OAAA,YAAAD,UAAA,GAAAA,UAAA,GAAegmF,EAEf,MAAMS,EAA8C,GAEpDL,EAAYnlE,SAAWslE,EAAa3lF,KACjC8lF,IAEC,MAAMC,EAAiBP,EAAYnlE,SAAS2lE,MACzCv/C,GACCA,EAAQm/C,KAAkBE,EAAYF,KAI1C,OACGG,GACAD,EAAYn/D,OACbk/D,EAActmE,SAASwmE,IAKzBF,EAAczyE,KAAK2yE,GAEnBt6E,OAAOmB,OAAOm5E,EAAgBD,GAEvBC,GAPE,IAAKD,EAOP,GAGb,CAEO,SAASG,EAIdt/D,GAAuC,IAAAi/D,EAAAxmF,UAAAC,OAAA,YAAAD,UAAA,GAAAA,UAAA,GAAegmF,EACtD,MAAMc,EAA4C,CAChD58C,OAAQ,GACRjpB,SAAU,IAMZ,OAHAklE,EAAUW,EAAUv/D,EAAK2iB,QACzBo8C,EAAYQ,EAAUv/D,EAAKtG,SAAUulE,GAE9BM,CACT,CCnFA,SAASC,EAKP94D,EACAi4D,GAEA,MAAM,OACJl9D,EAAS,IAAG,MACZ3C,EAAQ,WACR2gE,GAAS,EAAK,aACdR,EAAA,KACAx4E,EAAA,KACAuZ,EAAA,QACAzU,EAAA,QACA4P,EAAU,GAAE,gBACZukE,EAAA,WACAC,KACGC,GACDl5D,EACEm5D,GAAYC,EAAAA,EAAAA,QAA0B,MACtCC,GAAWD,EAAAA,EAAAA,UAEXE,EAAcA,KACbH,EAAUh0E,UAEfk0E,EAASl0E,QAAU,IAAIo0E,EAAAA,GAAQJ,EAAUh0E,QAAS,CAChDpF,OACAuZ,KAAMs/D,EAAUt/D,EAAMi/D,GACtB1zE,QAASA,GAAW,IAAKA,GACzB4P,YAGFujE,EAAaC,EAAKoB,EAASl0E,SAAQ,EAG/Bq0E,EAAeA,KACnBxB,EAAaC,EAAK,MAEdoB,EAASl0E,UACXk0E,EAASl0E,QAAQqqD,UACjB6pB,EAASl0E,QAAU,OA8CvB,OA1CAs0E,EAAAA,EAAAA,YAAU,MACHV,GAAUM,EAASl0E,SAAWN,GDtChC,SAILyM,EAAoCooE,GACpC,MAAM70E,EAAUyM,EAAMzM,QAElBA,GAAW60E,GACbt7E,OAAOmB,OAAOsF,EAAS60E,EAE3B,CC6BMC,CAAWN,EAASl0E,QAASN,KAE9B,CAACk0E,EAAQl0E,KAEZ40E,EAAAA,EAAAA,YAAU,MACHV,GAAUM,EAASl0E,SACtB+yE,EAAUmB,EAASl0E,QAAQivB,OAAO9a,KAAMA,EAAK2iB,UAE9C,CAAC88C,EAAQz/D,EAAK2iB,UAEjBw9C,EAAAA,EAAAA,YAAU,MACHV,GAAUM,EAASl0E,SAAWmU,EAAKtG,UACtCqlE,EAAYgB,EAASl0E,QAAQivB,OAAO9a,KAAMA,EAAKtG,SAAUulE,KAE1D,CAACQ,EAAQz/D,EAAKtG,YAEjBymE,EAAAA,EAAAA,YAAU,KACHJ,EAASl0E,UAEV4zE,GACFS,IACA1tB,WAAWwtB,IAEXD,EAASl0E,QAAQuuB,OAAOulD,MAEzB,CAACF,EAAQl0E,EAASyU,EAAK2iB,OAAQ3iB,EAAKtG,SAAUimE,KAEjDQ,EAAAA,EAAAA,YAAU,KACHJ,EAASl0E,UAEdq0E,IACA1tB,WAAWwtB,GAAA,GACV,CAACv5E,KAEJ05E,EAAAA,EAAAA,YAAU,KACRH,IAEO,IAAME,MACZ,IAGDI,EAAAA,cAAC,SAAAx7E,OAAAmB,OAAA,CACC04E,IAAKkB,EACLU,KAAK,MACL9+D,OAAQA,EACR3C,MAAOA,GACH8gE,GAEHF,EAGP,CAEO,MAAM3pF,GAAQyqF,EAAAA,EAAAA,YAAWhB,GC7FhC,SAASiB,EACPh6E,EACAzQ,GAIA,OAFAiqF,EAAAA,GAAAA,SAAiBjqF,IAEVwqF,EAAAA,EAAAA,aACJ,CAAA95D,EAAOi4D,IAAQ2B,EAAAA,cAACvqF,EAAU+O,OAAAmB,OAAA,GAAAygB,EAAA,CAAOi4D,IAAKA,EAAKl4E,KAAMA,MAEtD,OAEai6E,EAAuBD,EAAiB,OAAQvzC,EAAAA","sources":["../node_modules/chart.js/auto/auto.js","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.colors.ts","../node_modules/chart.js/src/plugins/plugin.decimation.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","../node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","../node_modules/chart.js/src/plugins/plugin.filler/index.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/scales/scale.timeseries.js","../node_modules/chart.js/src/index.ts","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props as ChartProps;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["Chart","registerables","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","arguments","length","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","hexParse","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_len2","_key2","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","readKey","prefix","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","slopeDelta","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","useOffsetPos","shadowRoot","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_ref","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","_len","_key","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_index_","_value_","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","getBasePixel","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","categoryPercentage","barPercentage","grouped","bars","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_fullLoop","pointPosition","getPointPositionForValue","registry","getElement","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","axisFromPosition","determineAxis","_len11","scaleOptions","_key11","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","addRectPath","mouseX","mouseY","inXRange","inYRange","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_ref5","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","itemsEqual","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","_ref7","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","_ref8","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","useEffect","nextOptions","setOptions","React","role","forwardRef","createTypedChart","Line"],"sourceRoot":""}