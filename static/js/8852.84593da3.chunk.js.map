{"version":3,"file":"static/js/8852.84593da3.chunk.js","mappings":"mKAGA,MAAMA,EAAeC,EAAAA,GAAAA,MAAc;gBAClBC,GAAUA,EAAMC;;;;;;;;;;;;;;;;;;;;;;EAgCjC,EAReC,IAAkC,IAAjC,MAAEC,EAAK,QAAEC,EAAO,QAAEH,GAASC,EACzC,OACEG,EAAAA,EAAAA,KAACP,EAAY,CAACM,QAASA,EAASH,QAASA,EAAQK,SAC9CH,GACY,EC7BbI,EAAiBR,EAAAA,GAAAA,GAAW;;;;;;;;;EAelC,EAJgBG,IAAgB,IAAf,MAAEM,GAAON,EACxB,OAAOG,EAAAA,EAAAA,KAACE,EAAc,CAAAD,SAAEE,GAAuB,E,uBCZjD,MAwBA,EAxB2BC,KACzB,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,IAiBvC,MAAO,CACLF,UACAG,kBAjByBV,IACzB,GAAc,MAAVA,EACFQ,EAAW,SACN,GAAc,MAAVR,EACT,IACE,MAAMW,GAASC,EAAAA,EAAAA,IAASL,GACxBC,GAAWK,EAAAA,EAAAA,KAAOF,EAAQ,CAAEG,UAAW,KAGzC,CAFE,MAAOC,GACPP,EAAW,QACb,MAEAA,EAAWD,EAAUP,EACvB,EAMD,EClBGgB,EAASpB,EAAAA,GAAAA,EAAU;;;;EAMnBqB,EAAoBrB,EAAAA,GAAAA,GAAW;;;;;;;EAS/BsB,EAAatB,EAAAA,GAAAA,GAAW;;;;EAqF9B,EA/EmBuB,KACjB,MAAM,QAAEZ,EAAO,kBAAEG,GAAsBJ,IAEjCc,EAAW,CACf,EAAG,eACH,EAAG,eACH,EAAG,eACH,MAAO,SACP,QAAS,cACT,EAAG,eACH,EAAG,eACH,EAAG,eACH,MAAO,SACP,OAAQ,cACR,EAAG,eACH,EAAG,eACH,EAAG,eACH,MAAO,SACP,OAAQ,cACR,EAAG,eACH,IAAK,YACL,IAAK,YACL,MAAO,SACP,OAAQ,cACR,IAAK,YACL,IAAK,YACL,IAAK,YACLC,EAAG,SACHC,GAAI,SACJC,EAAG,eAgCL,OACEC,EAAAA,EAAAA,MAACP,EAAiB,CAAAd,SAAA,EAChBD,EAAAA,EAAAA,KAACc,EAAM,CAAAb,SAAC,yBACRD,EAAAA,EAAAA,KAACuB,EAAO,CAACpB,MAAOE,KAChBL,EAAAA,EAAAA,KAACgB,EAAU,CAAAf,SAjCC,CACd,IACA,IACA,IACA,MACA,QACA,IACA,IACA,IACA,MACA,OACA,IACA,IACA,IACA,MACA,OACA,IACA,IACA,IACA,MACA,OACA,IACA,IACA,IACA,IACA,KACA,KAQauB,KAAK1B,IACZE,EAAAA,EAAAA,KAACyB,EAAM,CAEL3B,MAAOA,EACPF,QAASsB,EAASpB,GAClBC,QAASA,IAAMS,EAAkBV,IAH5BA,SAOO,C","sources":["routing/site/math/components/AdvancedCalculator/Button.jsx","routing/site/math/components/AdvancedCalculator/Display.jsx","common/hooks/useCalculatorState.jsx","routing/site/math/components/AdvancedCalculator/index.jsx"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\nconst StyledButton = styled.button`\n  background: ${(props) => props.bgColor};\n  border: none;\n  color: white;\n  padding: 16px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 1rem;\n  margin: 2px;\n  transition: background-color 0.4s ease;\n  cursor: pointer;\n  border-radius: 4px;\n\n  &:hover {\n    filter: brightness(85%);\n  }\n\n  &:active {\n    filter: brightness(75%);\n    box-shadow: 0 5px #666;\n    transform: translateY(4px);\n  }\n`\n\nconst Button = ({ label, onClick, bgColor }) => {\n  return (\n    <StyledButton onClick={onClick} bgColor={bgColor}>\n      {label}\n    </StyledButton>\n  )\n}\n\nexport default Button\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst DisplayWrapper = styled.div`\n  background: #333;\n  color: white;\n  text-align: right;\n  padding: 20px;\n  font-size: 2em;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  overflow-x: auto;\n`\n\nconst Display = ({ value }) => {\n  return <DisplayWrapper>{value}</DisplayWrapper>\n}\n\nexport default Display\n","import { useState } from \"react\"\nimport { evaluate, format } from \"mathjs\"\n\nconst useCalculatorState = () => {\n  const [display, setDisplay] = useState(\"\")\n\n  const handleButtonClick = (label) => {\n    if (label === \"C\") {\n      setDisplay(\"\")\n    } else if (label === \"=\") {\n      try {\n        const result = evaluate(display)\n        setDisplay(format(result, { precision: 14 }))\n      } catch (error) {\n        setDisplay(\"Error\")\n      }\n    } else {\n      setDisplay(display + label)\n    }\n  }\n\n  return {\n    display,\n    handleButtonClick,\n  }\n}\n\nexport default useCalculatorState\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport Button from \"./Button\"\nimport Display from \"./Display\"\nimport useCalculatorState from \"common/hooks/useCalculatorState\"\n\nconst Header = styled.h1`\n  text-align: center;\n  margin-bottom: 20px;\n  color: #333;\n`\n\nconst CalculatorWrapper = styled.div`\n  max-width: 480px;\n  margin: 0 auto;\n  padding: 20px;\n  background: #f4f4f4;\n  border-radius: 8px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n`\n\nconst ButtonGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-gap: 10px;\n`\n\nconst Calculator = () => {\n  const { display, handleButtonClick } = useCalculatorState()\n\n  const colorMap = {\n    7: \"midnightblue\",\n    8: \"midnightblue\",\n    9: \"midnightblue\",\n    \" / \": \"orange\",\n    \"sqrt(\": \"forestgreen\",\n    4: \"midnightblue\",\n    5: \"midnightblue\",\n    6: \"midnightblue\",\n    \" * \": \"orange\",\n    \"pow(\": \"forestgreen\",\n    1: \"midnightblue\",\n    2: \"midnightblue\",\n    3: \"midnightblue\",\n    \" - \": \"orange\",\n    \"sin(\": \"forestgreen\",\n    0: \"midnightblue\",\n    \".\": \"firebrick\",\n    \"=\": \"firebrick\",\n    \" + \": \"orange\",\n    \"cos(\": \"forestgreen\",\n    \",\": \"firebrick\",\n    \"(\": \"firebrick\",\n    \")\": \"firebrick\",\n    e: \"purple\",\n    pi: \"purple\",\n    C: \"springgreen\",\n  }\n\n  const buttons = [\n    \"7\",\n    \"8\",\n    \"9\",\n    \" / \",\n    \"sqrt(\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \" * \",\n    \"pow(\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \" - \",\n    \"sin(\",\n    \"0\",\n    \".\",\n    \"=\",\n    \" + \",\n    \"cos(\",\n    \",\",\n    \"(\",\n    \")\",\n    \"e\",\n    \"pi\",\n    \"C\",\n  ]\n\n  return (\n    <CalculatorWrapper>\n      <Header>Advanced Calculator</Header>\n      <Display value={display} />\n      <ButtonGrid>\n        {buttons.map((label) => (\n          <Button\n            key={label}\n            label={label}\n            bgColor={colorMap[label]}\n            onClick={() => handleButtonClick(label)}\n          />\n        ))}\n      </ButtonGrid>\n    </CalculatorWrapper>\n  )\n}\n\nexport default Calculator\n"],"names":["StyledButton","styled","props","bgColor","_ref","label","onClick","_jsx","children","DisplayWrapper","value","useCalculatorState","display","setDisplay","useState","handleButtonClick","result","evaluate","format","precision","error","Header","CalculatorWrapper","ButtonGrid","Calculator","colorMap","e","pi","C","_jsxs","Display","map","Button"],"sourceRoot":""}