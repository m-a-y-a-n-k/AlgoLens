{"version":3,"file":"static/js/2840.cc81a74e.chunk.js","mappings":"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","sources":["routing/site/physics/components/Projectile/ProjectileMotion.jsx","routing/site/physics/components/Projectile/index.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from \"react\"\nimport styled from \"styled-components\"\nimport { Alert } from \"reactstrap\"\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  max-width: 600px;\n  width: 100%;\n`\n\nconst Controls = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n  width: 100%;\n  gap: 15px;\n\n  @media (min-width: 600px) {\n    flex-direction: row;\n    justify-content: space-around;\n  }\n`\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 1rem;\n  color: #555;\n`\n\nconst Input = styled.input`\n  margin-top: 5px;\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  width: 150px;\n  text-align: center;\n  font-size: 1rem;\n`\n\nconst Visualization = styled.div`\n  margin-bottom: 20px;\n  width: 100%;\n`\n\nconst Results = styled.div`\n  margin-top: 10px;\n  text-align: center;\n  width: 100%;\n  font-size: 1rem;\n`\n\nconst SVG = styled.svg`\n  width: 100%;\n  max-width: 500px;\n  height: auto;\n`\n\nconst Path = styled.path`\n  stroke: blue;\n  fill: none;\n`\n\nconst Line = styled.line`\n  stroke: black;\n  stroke-width: 2;\n`\n\nconst Text = styled.text`\n  font-family: Arial;\n  font-size: 12px;\n  text-anchor: middle;\n`\n\nconst ProjectileMotion = () => {\n  const [angle, setAngle] = useState(45)\n  const [speed, setSpeed] = useState(50)\n  const [trajectory, setTrajectory] = useState([])\n\n  const g = 9.81 // acceleration due to gravity\n\n  const calculateTrajectory = useCallback(() => {\n    const radianAngle = (angle * Math.PI) / 180\n    const totalTime = (2 * speed * Math.sin(radianAngle)) / g\n    const points = []\n\n    for (let t = 0; t <= totalTime; t += 0.1) {\n      const x = speed * t * Math.cos(radianAngle)\n      const y = speed * t * Math.sin(radianAngle) - 0.5 * g * t * t\n      if (y >= 0) {\n        points.push({ x, y })\n      } else {\n        break\n      }\n    }\n\n    setTrajectory(points)\n  }, [angle, speed])\n\n  useEffect(() => {\n    calculateTrajectory()\n  }, [angle, speed, calculateTrajectory])\n\n  const totalDistance = useMemo(() => {\n    return trajectory.length > 0 ? trajectory[trajectory.length - 1].x : 0\n  }, [trajectory])\n\n  const maxHeight = useMemo(() => {\n    return Math.max(...trajectory.map((point) => point.y), 0)\n  }, [trajectory])\n\n  return (\n    <Container>\n      <Controls>\n        <Label>\n          Angle (degrees):\n          <Input\n            type=\"number\"\n            value={angle}\n            onChange={(e) => {\n              const updatedAngle = Number(e.target.value)\n              if (updatedAngle >= 0 && updatedAngle <= 90) {\n                setAngle(updatedAngle)\n              }\n            }}\n          />\n        </Label>\n        <Label>\n          Speed (m/s):\n          <Input\n            type=\"number\"\n            value={speed}\n            onChange={(e) => {\n              const updatedSpeed = Number(e.target.value)\n              if (updatedSpeed >= 0 && updatedSpeed <= 1000) {\n                setSpeed(updatedSpeed)\n              }\n            }}\n          />\n        </Label>\n      </Controls>\n      <Alert color=\"info\" style={{ width: \"100%\" }}>\n        Angle should be from 0 to 90\n      </Alert>\n      <Alert color=\"info\" style={{ width: \"100%\" }}>\n        Speed should be from 0 to 1000\n      </Alert>\n      <Visualization>\n        <SVG viewBox=\"0 0 500 500\">\n          <Path\n            d={`M 0 500 ${trajectory\n              .map((point) => `${point.x * 10} ${500 - point.y * 10}`)\n              .join(\" L \")}`}\n          />\n          <Line x1=\"0\" y1=\"500\" x2=\"500\" y2=\"500\" />\n          <g>\n            <Line x1=\"0\" y1=\"490\" x2=\"0\" y2=\"500\" />\n            <Text x=\"5\" y=\"490\">\n              0\n            </Text>\n            <Line x1=\"500\" y1=\"490\" x2=\"500\" y2=\"500\" />\n            <Text x=\"490\" y=\"490\">\n              50\n            </Text>\n          </g>\n        </SVG>\n      </Visualization>\n      <Results>\n        <p>Total Distance: {totalDistance.toFixed(2)} meters</p>\n        <p>Maximum Height: {maxHeight.toFixed(2)} meters</p>\n      </Results>\n    </Container>\n  )\n}\n\nexport default ProjectileMotion\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport ProjectileMotion from \"./ProjectileMotion\"\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  background-color: #f0f2f5;\n  min-height: 100vh;\n`\n\nconst Heading = styled.h1`\n  font-size: 2.5rem;\n  color: #333;\n  margin-bottom: 20px;\n`\n\nfunction Main() {\n  return (\n    <MainContainer>\n      <Heading>Projectile Motion Visualizer</Heading>\n      <ProjectileMotion />\n    </MainContainer>\n  )\n}\n\nexport default Main\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Controls","_templateObject2","Label","_templateObject3","Input","_templateObject4","Visualization","_templateObject5","Results","_templateObject6","SVG","_templateObject7","Path","_templateObject8","Line","_templateObject9","Text","_templateObject10","ProjectileMotion","angle","setAngle","useState","speed","setSpeed","trajectory","setTrajectory","calculateTrajectory","useCallback","radianAngle","Math","PI","totalTime","sin","points","t","x","cos","y","push","useEffect","totalDistance","useMemo","length","maxHeight","max","map","point","_jsxs","children","_jsx","type","value","onChange","e","updatedAngle","Number","target","updatedSpeed","Alert","color","style","width","viewBox","d","concat","join","x1","y1","x2","y2","toFixed","MainContainer","Heading"],"sourceRoot":""}