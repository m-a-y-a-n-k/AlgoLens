{"version":3,"file":"static/js/5481.123af5ac.chunk.js","mappings":"uIAAO,MAAMA,EAAS,CACpBC,KAAM,SACNC,MAAO,SACPC,SAAU,gB,eCCZ,MAAMC,EAAeC,EAAAA,MAAWC,IAAkC,IAAjC,OAAEC,EAAM,QAAEC,EAAO,OAAEC,GAAQH,EAC1D,OACEI,EAAAA,EAAAA,MAAA,UACEC,UAAU,gBACVH,QAASA,IAAMA,EAAQD,GACvBK,SAAUH,EAAOI,SAAA,EAEjBC,EAAAA,EAAAA,KAAA,QAAMH,UAAU,QAAOE,SAAEb,EAAOO,KAAe,IAAEA,IAC1C,IAIbH,EAAaW,YAAc,iCAE3B,UCbMC,GAASC,EAAAA,EAAAA,OAAK,IAAM,kCAEpBC,EAAU,CAAC,OAAQ,QAAS,YAqElC,EArDaC,KACX,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,OAC1CC,EAAgBC,IAAqBF,EAAAA,EAAAA,UAAS,OAC9Cb,EAAQgB,IAAaH,EAAAA,EAAAA,UAAS,MAE/BI,GAAeC,EAAAA,EAAAA,cAAapB,IAChC,IAAKE,EAAQ,CACX,MAAMmB,EAAeV,EAAQW,KAAKC,MAAMD,KAAKE,SAAWb,EAAQc,SAChEX,EAAgBd,GAChBiB,EAAkBI,GAClBH,EAxBYQ,EAACb,EAAcG,IAC3BH,IAAiBG,EACZ,cAGW,SAAjBH,GAA8C,aAAnBG,GACV,aAAjBH,GAAkD,UAAnBG,GACd,UAAjBH,GAA+C,SAAnBG,EAEtB,WAEF,YAaOU,CAAU1B,EAAQqB,GAC9B,IACC,IAEGM,GAAYP,EAAAA,EAAAA,cAAY,KAC5BN,EAAgB,MAChBG,EAAkB,MAClBC,EAAU,KAAK,GACd,IAEH,OACEf,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BE,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBACJC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,UAASE,SACrBK,EAAQiB,KAAK5B,IACZO,EAAAA,EAAAA,KAACV,EAAY,CAEXG,OAAQA,EACRC,QAASkB,EACTjB,OAAQA,GAHHF,OAOVE,IAAUK,EAAAA,EAAAA,KAACE,EAAM,CAACP,OAAQA,EAAQyB,UAAWA,KAC9CxB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBE,SAAA,CAC7BO,IACCV,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAG,eACUC,EAAAA,EAAAA,KAAA,QAAMH,UAAU,QAAOE,SAAEb,EAAOoB,KAAsB,IAChEA,KAGJG,IACCb,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAG,kBACe,KAChBC,EAAAA,EAAAA,KAAA,QAAMH,UAAU,QAAOE,SAAEb,EAAOuB,KAAwB,IACvDA,UAIH,C","sources":["routing/site/games/components/RockPaperScissors/emojis.js","routing/site/games/components/RockPaperScissors/ChoiceButton.jsx","routing/site/games/components/RockPaperScissors/index.jsx"],"sourcesContent":["export const emojis = {\r\n  Rock: \"✊\",\r\n  Paper: \"✋\",\r\n  Scissors: \"✌️\",\r\n}\r\n","import React from \"react\"\r\nimport \"./ChoiceButton.css\"\r\nimport { emojis } from \"./emojis\"\r\n\r\nconst ChoiceButton = React.memo(({ choice, onClick, result }) => {\r\n  return (\r\n    <button\r\n      className=\"choice-button\"\r\n      onClick={() => onClick(choice)}\r\n      disabled={result}\r\n    >\r\n      <span className=\"emoji\">{emojis[choice]}</span> {choice}\r\n    </button>\r\n  )\r\n})\r\n\r\nChoiceButton.displayName = \"RockPaperScissors.ChoiceButton\"\r\n\r\nexport default ChoiceButton\r\n","import React, { lazy, useCallback, useState } from \"react\"\r\nimport ChoiceButton from \"./ChoiceButton\"\r\nimport \"./Game.css\"\r\nimport { emojis } from \"./emojis\"\r\n\r\nconst Result = lazy(() => import(\"./Result\"))\r\n\r\nconst choices = [\"Rock\", \"Paper\", \"Scissors\"]\r\n\r\nconst getResult = (playerChoice, computerChoice) => {\r\n  if (playerChoice === computerChoice) {\r\n    return \"It's a tie!\"\r\n  }\r\n  if (\r\n    (playerChoice === \"Rock\" && computerChoice === \"Scissors\") ||\r\n    (playerChoice === \"Scissors\" && computerChoice === \"Paper\") ||\r\n    (playerChoice === \"Paper\" && computerChoice === \"Rock\")\r\n  ) {\r\n    return \"You win!\"\r\n  }\r\n  return \"You lose!\"\r\n}\r\n\r\nconst Game = () => {\r\n  const [playerChoice, setPlayerChoice] = useState(null)\r\n  const [computerChoice, setComputerChoice] = useState(null)\r\n  const [result, setResult] = useState(null)\r\n\r\n  const handleChoice = useCallback((choice) => {\r\n    if (!result) {\r\n      const randomChoice = choices[Math.floor(Math.random() * choices.length)]\r\n      setPlayerChoice(choice)\r\n      setComputerChoice(randomChoice)\r\n      setResult(getResult(choice, randomChoice))\r\n    }\r\n  }, [])\r\n\r\n  const resetGame = useCallback(() => {\r\n    setPlayerChoice(null)\r\n    setComputerChoice(null)\r\n    setResult(null)\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"game-rock-paper-scissors\">\r\n      <h1>Rock Paper Scissors</h1>\r\n      <div className=\"choices\">\r\n        {choices.map((choice) => (\r\n          <ChoiceButton\r\n            key={choice}\r\n            choice={choice}\r\n            onClick={handleChoice}\r\n            result={result}\r\n          />\r\n        ))}\r\n      </div>\r\n      {result && <Result result={result} resetGame={resetGame} />}\r\n      <div className=\"choices-display\">\r\n        {playerChoice && (\r\n          <p>\r\n            You chose: <span className=\"emoji\">{emojis[playerChoice]}</span>{\" \"}\r\n            {playerChoice}\r\n          </p>\r\n        )}\r\n        {computerChoice && (\r\n          <p>\r\n            Computer chose:{\" \"}\r\n            <span className=\"emoji\">{emojis[computerChoice]}</span>{\" \"}\r\n            {computerChoice}\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game\r\n"],"names":["emojis","Rock","Paper","Scissors","ChoiceButton","React","_ref","choice","onClick","result","_jsxs","className","disabled","children","_jsx","displayName","Result","lazy","choices","Game","playerChoice","setPlayerChoice","useState","computerChoice","setComputerChoice","setResult","handleChoice","useCallback","randomChoice","Math","floor","random","length","getResult","resetGame","map"],"sourceRoot":""}