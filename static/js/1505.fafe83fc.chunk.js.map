{"version":3,"file":"static/js/1505.fafe83fc.chunk.js","mappings":"gJACA,QAAiC,mCAAjC,EAAmF,iCAAnF,EAAgI,8B,aCEhI,MA8IA,EA9ImBA,KACjB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,6BACtCC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,OACxCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAC5B,CAAEK,IAAaL,EAAAA,EAAAA,UAAS,OACxBM,EAAkBC,IAAuBP,EAAAA,EAAAA,WAAU,IACnDQ,EAAQC,IAAaT,EAAAA,EAAAA,UAAS,oCAC9BU,EAAWC,IAAgBX,EAAAA,EAAAA,WAAS,GAsF3C,OACEY,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,aAAc,QAASH,UACnCD,EAAAA,EAAAA,MAAA,SAAAC,SAAA,CAAO,kCAC2B,KAChCC,EAAAA,EAAAA,KAAA,SACEG,KAAK,OACLC,MAAOpB,EACPqB,SAAWC,GAAMrB,EAAcqB,EAAEC,OAAOH,OACxCI,SAAUZ,EACVK,MAAO,CAAEQ,MAAO,iBAKtBT,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,aAAc,QAASH,UACnCD,EAAAA,EAAAA,MAAA,SAAAC,SAAA,CAAO,iBACU,KACfC,EAAAA,EAAAA,KAAA,SACEG,KAAK,OACLC,MAAOjB,EACPkB,SAAWC,GAAMlB,EAAekB,EAAEC,OAAOH,OACzCI,SAAUZ,UAKhBI,EAAAA,EAAAA,KAAA,UAAQU,QA/EQC,KAClB,MAAMC,EA/BYC,MAClB,MAAMC,EAAM9B,EACT+B,MAAM,KACNC,KAAKC,GAAQA,EAAIC,SACjBC,QAAQF,GAAgB,KAARA,IAChBD,IAAII,QAEP,GAAIN,EAAIO,KAAKC,OAEX,OADA3B,EAAU,0CACH,KAGT,IAAK,IAAI4B,EAAI,EAAGA,EAAIT,EAAIU,OAAQD,IAC9B,GAAIT,EAAIS,GAAKT,EAAIS,EAAI,GAEnB,OADA5B,EAAU,mDACH,KAIX,MAAM8B,EAAML,OAAOjC,GACnB,OAAImC,MAAMG,IACR9B,EAAU,wCACH,OAGTL,EAASwB,GACTvB,EAAUkC,GACH,CAAEX,MAAKW,OAAK,EAIJZ,GACf,IAAKD,EAAQ,OAEb,MAAM,IAAEE,EAAG,IAAEW,GAAQb,EACrBf,GAAa,GACbF,EAAU,gBACVF,GAAqB,GAErB,MAAMiC,EAAIZ,EAAIU,OACd,GAAU,IAANE,EAGF,OAFA/B,EAAU,wBACVE,GAAa,GAIf,MAAM8B,EAAOC,KAAKC,MAAMD,KAAKE,KAAKJ,IAClC,IAAIK,EAAO,EACPC,EAAO,EACX,MAAMC,EAAc,GAGpB,KAAOD,EAAON,GAAKZ,EAAIkB,GAAQP,GAC7BQ,EAAYC,KAAKF,GACjBD,EAAOC,EACPA,GAAQL,EAIV,MAAMQ,EAAMP,KAAKQ,IAAIJ,EAAMN,GAC3B,IAAK,IAAIH,EAAIQ,EAAMR,EAAIY,EAAKZ,IAC1BU,EAAYC,KAAKX,GAGnB,IAAIc,EAAQ,EAEZ,MAAMC,EAAQC,aAAY,KACxB,GAAIF,GAASJ,EAAYT,OAQvB,OAPAgB,cAAcF,GACVxB,EAAItB,KAAsBiC,EAC5B9B,EAAW,SAAQ8B,cAAgBjC,KAEnCG,EAAW,GAAE8B,oBAEf5B,GAAa,GAGfJ,EAAoBwC,EAAYI,IAChCA,GAAO,GAhFO,IAiFH,EA8BmB7B,SAAUZ,EAAUG,SAAC,uBAInDC,EAAAA,EAAAA,KAAA,OAAKyC,UAAWC,EAAsB3C,SACnCV,EAAM2B,KAAI,CAACC,EAAK0B,KACf3C,EAAAA,EAAAA,KAAA,OAEEyC,UAAY,GAAEC,KACZC,IAAQnD,EAAmBkD,EAAmB,KAC7C3C,SAEFkB,GALI0B,QAUX3C,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAE2C,UAAW,OAAQC,WAAY,QAAS9C,SAAEL,MACpD,C","sources":["webpack://AlgoLens/./src/routing/site/algo/components/JumpSearch/JumpSearch.module.css?eafb","routing/site/algo/components/JumpSearch/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"arrayContainer\":\"JumpSearch_arrayContainer__AFzTI\",\"arrayElement\":\"JumpSearch_arrayElement__EOP81\",\"highlight\":\"JumpSearch_highlight__TeoxO\"};","import React, { useState } from \"react\"\nimport styles from \"./JumpSearch.module.css\"\n\nconst JumpSearch = () => {\n  const [arrayInput, setArrayInput] = useState(\"1,3,5,7,9,11,13,15,17,19\")\n  const [targetInput, setTargetInput] = useState(\"11\")\n  const [array, setArray] = useState([])\n  const [, setTarget] = useState(null)\n  const [highlightedIndex, setHighlightedIndex] = useState(-1)\n  const [status, setStatus] = useState(\"Enter array and target to start\")\n  const [isRunning, setIsRunning] = useState(false)\n\n  const stepDelay = 700\n\n  const parseInputs = () => {\n    const arr = arrayInput\n      .split(\",\")\n      .map((num) => num.trim())\n      .filter((num) => num !== \"\")\n      .map(Number)\n\n    if (arr.some(isNaN)) {\n      setStatus(\"Error: Array contains invalid numbers.\")\n      return null\n    }\n\n    for (let i = 1; i < arr.length; i++) {\n      if (arr[i] < arr[i - 1]) {\n        setStatus(\"Error: Array must be sorted in ascending order.\")\n        return null\n      }\n    }\n\n    const tgt = Number(targetInput)\n    if (isNaN(tgt)) {\n      setStatus(\"Error: Target is not a valid number.\")\n      return null\n    }\n\n    setArray(arr)\n    setTarget(tgt)\n    return { arr, tgt }\n  }\n\n  const startSearch = () => {\n    const inputs = parseInputs()\n    if (!inputs) return\n\n    const { arr, tgt } = inputs\n    setIsRunning(true)\n    setStatus(\"Searching...\")\n    setHighlightedIndex(-1)\n\n    const n = arr.length\n    if (n === 0) {\n      setStatus(\"Array is empty.\")\n      setIsRunning(false)\n      return\n    }\n\n    const step = Math.floor(Math.sqrt(n))\n    let prev = 0\n    let curr = 0\n    const searchSteps = []\n\n    // Jump in blocks\n    while (curr < n && arr[curr] < tgt) {\n      searchSteps.push(curr)\n      prev = curr\n      curr += step\n    }\n\n    // Linear search in block\n    const end = Math.min(curr, n)\n    for (let i = prev; i < end; i++) {\n      searchSteps.push(i)\n    }\n\n    let index = 0\n\n    const timer = setInterval(() => {\n      if (index >= searchSteps.length) {\n        clearInterval(timer)\n        if (arr[highlightedIndex] === tgt) {\n          setStatus(`Found ${tgt} at index ${highlightedIndex}`)\n        } else {\n          setStatus(`${tgt} not found`)\n        }\n        setIsRunning(false)\n        return\n      }\n      setHighlightedIndex(searchSteps[index])\n      index++\n    }, stepDelay)\n  }\n\n  return (\n    <div>\n      <div style={{ marginBottom: \"15px\" }}>\n        <label>\n          Sorted Array (comma separated):{\" \"}\n          <input\n            type=\"text\"\n            value={arrayInput}\n            onChange={(e) => setArrayInput(e.target.value)}\n            disabled={isRunning}\n            style={{ width: \"300px\" }}\n          />\n        </label>\n      </div>\n\n      <div style={{ marginBottom: \"15px\" }}>\n        <label>\n          Target Number:{\" \"}\n          <input\n            type=\"text\"\n            value={targetInput}\n            onChange={(e) => setTargetInput(e.target.value)}\n            disabled={isRunning}\n          />\n        </label>\n      </div>\n\n      <button onClick={startSearch} disabled={isRunning}>\n        Start Jump Search\n      </button>\n\n      <div className={styles.arrayContainer}>\n        {array.map((num, idx) => (\n          <div\n            key={idx}\n            className={`${styles.arrayElement} ${\n              idx === highlightedIndex ? styles.highlight : \"\"\n            }`}\n          >\n            {num}\n          </div>\n        ))}\n      </div>\n\n      <div style={{ marginTop: \"15px\", fontWeight: \"bold\" }}>{status}</div>\n    </div>\n  )\n}\n\nexport default JumpSearch\n"],"names":["JumpSearch","arrayInput","setArrayInput","useState","targetInput","setTargetInput","array","setArray","setTarget","highlightedIndex","setHighlightedIndex","status","setStatus","isRunning","setIsRunning","_jsxs","children","_jsx","style","marginBottom","type","value","onChange","e","target","disabled","width","onClick","startSearch","inputs","parseInputs","arr","split","map","num","trim","filter","Number","some","isNaN","i","length","tgt","n","step","Math","floor","sqrt","prev","curr","searchSteps","push","end","min","index","timer","setInterval","clearInterval","className","styles","idx","marginTop","fontWeight"],"sourceRoot":""}