{"version":3,"file":"static/js/4770.780a6dd6.chunk.js","mappings":"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","sources":["routing/site/algo/components/Factorial/Input.jsx","routing/site/algo/components/Factorial/index.jsx","../node_modules/@material-ui/core/esm/Grid/Grid.js"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardActions from \"@material-ui/core/CardActions\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport { FormControl } from \"@material-ui/core\"\r\n\r\n//Card component styling\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 180,\r\n  },\r\n})\r\n\r\n//text input field styling\r\nconst useStylesReddit = makeStyles((theme) => ({\r\n  root: {\r\n    border: \"1px solid #e2e2e1\",\r\n    overflow: \"hidden\",\r\n    borderRadius: 4,\r\n    backgroundColor: \"#fcfcfb\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    \"&:hover\": {\r\n      backgroundColor: \"#fff\",\r\n    },\r\n    \"&$focused\": {\r\n      backgroundColor: \"#fff\",\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  focused: {},\r\n}))\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit()\r\n\r\n  return (\r\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\r\n  )\r\n}\r\n\r\nconst formStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst textStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst buttonStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst Input = React.memo(({ disabled, fact, setResult }) => {\r\n  const [input, setInput] = useState(null)\r\n  const classes = useStyles()\r\n  const inputStyle = textStyles()\r\n  const buttonStyle = buttonStyles()\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <h2 className=\"bg-success text-white p-2\">\r\n        Compute Factorial of a whole number N --&gt; N!\r\n      </h2>\r\n      <h4 className=\"text-primary p-2\">\r\n        Finds the product 1 x 2 x 3 x .... upto a number N\r\n      </h4>\r\n      <CardActions>\r\n        <FormControl className={`pb-3 pr-0 pl-2 pt-1 ${formStyles.root}`}>\r\n          <RedditTextField\r\n            label=\"Number\"\r\n            className={inputStyle.root}\r\n            variant=\"filled\"\r\n            id=\"reddit-input-base\"\r\n            onChange={(event) => {\r\n              setInput(event.target.value)\r\n            }}\r\n            value={input ? input : \"\"}\r\n            disabled={disabled}\r\n          />\r\n          <Button\r\n            className={buttonStyle.root}\r\n            disabled={disabled}\r\n            onClick={() => {\r\n              fact(parseInt(input))\r\n              setInput(null)\r\n              setResult(null)\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </FormControl>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n})\r\n\r\nInput.displayName = \"Factorial.Input\"\r\n\r\nexport default Input\r\n","import React, { useState, lazy, useEffect } from \"react\"\r\nimport { FaEquals, FaTimes } from \"react-icons/fa\"\r\nimport { Grid } from \"@material-ui/core\"\r\nimport { Alert } from \"reactstrap\"\r\nimport Input from \"routing/site/algo/components/Factorial/Input\"\r\n\r\nconst Element = lazy(() => import(\"common/components/Element\"))\r\n\r\nconst Factorial = () => {\r\n  const [input, setInput] = useState(null)\r\n  const [result, setResult] = useState(null)\r\n  const [processed, setProcessed] = useState(null)\r\n  const [rest, setRest] = useState(null)\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [alert, setAlert] = useState(null)\r\n\r\n  const computeFactorial = (currentValue) => {\r\n    if (currentValue <= 0) {\r\n      setTimeout(() => {\r\n        setDisabled(false)\r\n        setAlert({\r\n          text: \"Factorial successfully computed\",\r\n          type: \"success\",\r\n        })\r\n        setInput(null)\r\n        setProcessed(null)\r\n        setRest(null)\r\n      }, 500)\r\n      return\r\n    }\r\n    setTimeout(() => {\r\n      setProcessed((prevProcessed) => `${prevProcessed} X ${currentValue}`)\r\n      setProcessed((prevProcessed) => {\r\n        const processedNumbers = prevProcessed.split(\" X \").map(Number)\r\n        if (processedNumbers.length === 2) {\r\n          const [a, b] = processedNumbers\r\n          return (a * b).toString()\r\n        }\r\n        return prevProcessed\r\n      })\r\n      setRest(currentValue - 1)\r\n      computeFactorial(currentValue - 1)\r\n    }, 500)\r\n  }\r\n\r\n  const fact = (input) => {\r\n    if (input >= 0 && input <= 1) {\r\n      setAlert({\r\n        text: \"Factorial is 1\",\r\n        type: \"success\",\r\n      })\r\n    } else if (input >= 2 && input <= 50) {\r\n      setInput(input)\r\n      setDisabled(true)\r\n      setProcessed(input > 1 ? `${input}` : `1`)\r\n      setRest(input >= 2 ? input - 1 : 1)\r\n      setAlert(null)\r\n      computeFactorial(input - 1)\r\n    } else {\r\n      setAlert({\r\n        text: \"Factorial does not exist or too large\",\r\n        type: \"danger\",\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const updateResult = () => {\r\n      if (processed) {\r\n        const processedNumbers = processed.split(\" X \").map(Number)\r\n        if (processedNumbers.length <= 2) {\r\n          const [a = 1, b = 1] = processedNumbers\r\n          if (b === 1) setResult((a * b).toString())\r\n        }\r\n      }\r\n    }\r\n    updateResult()\r\n  }, [processed])\r\n\r\n  return (\r\n    <Grid container>\r\n      {alert && (\r\n        <Grid item xs={12}>\r\n          <Alert\r\n            color={alert.type}\r\n            isOpen={!!alert.text}\r\n            toggle={() => setAlert(null)}\r\n          >\r\n            {alert.text}\r\n          </Alert>\r\n        </Grid>\r\n      )}\r\n      <Grid container className=\"text-center\">\r\n        <Grid item xs={12}>\r\n          <Input fact={fact} setResult={setResult} disabled={disabled} />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {parseInt(input) >= 0 && (\r\n        <Grid container className=\"text-center mt-4 mb-4\">\r\n          <Grid item xs={2}>\r\n            <Element\r\n              highlight={true}\r\n              data={{ value: `${input}!` }}\r\n              type=\"array\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <FaEquals style={{ margin: \"auto 5px\" }} />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Element data={{ value: processed }} type=\"array\" />\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <FaTimes style={{ margin: \"auto 5px\" }} />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Element data={{ value: `${rest}!` }} type=\"array\" />\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {parseInt(result) >= 0 && (\r\n        <Grid container className=\"text-center mt-4 mb-4\">\r\n          <Grid item xs={12}>\r\n            <Element\r\n              highlight={true}\r\n              data={{ value: `${result}` }}\r\n              type=\"array\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Factorial\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;"],"names":["useStyles","makeStyles","root","minWidth","useStylesReddit","theme","border","overflow","borderRadius","backgroundColor","transition","transitions","create","boxShadow","fade","palette","primary","main","borderColor","focused","RedditTextField","props","classes","_jsx","TextField","InputProps","disableUnderline","formStyles","margin","spacing","textStyles","buttonStyles","Input","React","_ref","disabled","fact","setResult","input","setInput","useState","inputStyle","buttonStyle","_jsxs","Card","className","variant","children","CardActions","FormControl","label","id","onChange","event","target","value","Button","onClick","parseInt","color","size","displayName","Element","lazy","Factorial","result","processed","setProcessed","rest","setRest","setDisabled","alert","setAlert","computeFactorial","currentValue","setTimeout","text","type","prevProcessed","processedNumbers","split","map","Number","length","a","b","toString","useEffect","updateResult","Grid","container","item","xs","Alert","isOpen","toggle","highlight","data","FaEquals","style","FaTimes","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","undefined","parse","parseFloat","concat","String","replace","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classNameProp","_props$component","component","Component","_props$container","_props$direction","direction","_props$item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","_props$zeroMinWidth","zeroMinWidth","other","_objectWithoutProperties","clsx","_extends","StyledGrid","withStyles","boxSizing","display","flexWrap","width","flexDirection","justifyContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name"],"sourceRoot":""}