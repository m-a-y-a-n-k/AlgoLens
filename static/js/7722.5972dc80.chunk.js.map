{"version":3,"file":"static/js/7722.5972dc80.chunk.js","mappings":"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","sources":["routing/site/games/components/TicTacToe/Square.jsx","routing/site/games/components/TicTacToe/Board.jsx","routing/site/games/components/TicTacToe/index.jsx"],"sourcesContent":["import React from \"react\"\r\nimport \"./Square.css\"\r\n\r\nconst Square = React.memo(({ value, onClick }) => {\r\n  return (\r\n    <button className=\"square\" onClick={onClick}>\r\n      <span value={value}>{value}</span>\r\n    </button>\r\n  )\r\n})\r\n\r\nSquare.displayName = \"TicTacToe.Square\"\r\n\r\nexport default Square\r\n","import React from \"react\"\r\nimport Square from \"./Square\"\r\nimport \"./Board.css\"\r\n\r\nconst Board = React.memo(({ squares, onClick }) => {\r\n  return (\r\n    <div className=\"board\">\r\n      {squares.map((square, index) => (\r\n        <Square key={index} value={square} onClick={() => onClick(index)} />\r\n      ))}\r\n    </div>\r\n  )\r\n})\r\n\r\nBoard.displayName = \"TicTacToe.Board\"\r\n\r\nexport default Board\r\n","import React, { useState } from \"react\"\r\nimport Board from \"./Board\"\r\nimport \"./Game.css\"\r\n\r\nconst Game = () => {\r\n  const [history, setHistory] = useState([{ squares: Array(9).fill(null) }])\r\n  const [stepNumber, setStepNumber] = useState(0)\r\n  const [isXNext, setIsXNext] = useState(true)\r\n\r\n  const handleClick = (index) => {\r\n    const currentHistory = history.slice(0, stepNumber + 1)\r\n    const current = currentHistory[currentHistory.length - 1]\r\n    const squares = current.squares.slice()\r\n\r\n    if (calculateWinner(squares) || squares[index]) {\r\n      return\r\n    }\r\n\r\n    squares[index] = isXNext ? \"X\" : \"O\"\r\n    setHistory(currentHistory.concat([{ squares }]))\r\n    setStepNumber(currentHistory.length)\r\n    setIsXNext(!isXNext)\r\n  }\r\n\r\n  const jumpTo = (step) => {\r\n    setStepNumber(step)\r\n    setIsXNext(step % 2 === 0)\r\n  }\r\n\r\n  const current = history[stepNumber]\r\n  const winner = calculateWinner(current.squares)\r\n  const moves = history\r\n    .map((step, move) => {\r\n      const desc = move ? `Go to move #${move}` : \"Go to game start\"\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      )\r\n    })\r\n    .reverse() // Reverse the order of the moves\r\n\r\n  const status = winner ? (\r\n    <>\r\n      Winner: <span>{winner}</span>\r\n    </>\r\n  ) : stepNumber === 9 ? (\r\n    <>\r\n      Game is a <span>Tie</span>\r\n    </>\r\n  ) : (\r\n    <>\r\n      Next player: <span>{isXNext ? \"X\" : \"O\"}</span>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"game-info\">\r\n        <div>{status}</div>\r\n      </div>\r\n\r\n      <div className=\"game-board\">\r\n        <Board squares={current.squares} onClick={handleClick} />\r\n      </div>\r\n      <div className=\"game-info\">\r\n        <ol>{moves}</ol>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst calculateWinner = (squares) => {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ]\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i]\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a]\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\nexport default Game\r\n"],"names":["Square","React","_ref","value","onClick","_jsx","className","children","displayName","Board","squares","map","square","index","calculateWinner","lines","i","length","a","b","c","Game","history","setHistory","useState","Array","fill","stepNumber","setStepNumber","isXNext","setIsXNext","current","winner","moves","step","move","desc","jumpTo","reverse","status","_jsxs","_Fragment","currentHistory","slice","concat"],"sourceRoot":""}