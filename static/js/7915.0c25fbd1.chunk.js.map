{"version":3,"file":"static/js/7915.0c25fbd1.chunk.js","mappings":"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","sources":["common/components/Table.jsx"],"sourcesContent":["import React, { useCallback, useState, useEffect, lazy } from \"react\"\nimport PropTypes from \"prop-types\"\nimport clsx from \"clsx\"\nimport { lighten, makeStyles } from \"@material-ui/core/styles\"\nimport {\n  FormControl,\n  Switch,\n  FormControlLabel,\n  Tooltip,\n  IconButton,\n  Checkbox,\n  Paper,\n  Typography,\n  Toolbar,\n  Table,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n} from \"@material-ui/core\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport SearchIcon from \"@material-ui/icons/Search\"\nimport NotInterestedIcon from \"@material-ui/icons/NotInterested\"\nimport { DynamicLoader } from \"../../routing/base/Router\"\n\nconst TableBody = lazy(() => import(`@material-ui/core/TableBody`))\nconst TableContainer = lazy(() => import(`@material-ui/core/TableContainer`))\nconst TablePagination = lazy(() => import(`@material-ui/core/TablePagination`))\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index])\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0])\n    if (order !== 0) return order\n    return a[1] - b[1]\n  })\n  return stabilizedThis.map((el) => el[0])\n}\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    numSelected,\n    order,\n    orderBy,\n    onSelectAllClick,\n    onRequestSort,\n    rowCount,\n    headCells,\n  } = props\n\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property)\n  }\n\n  return (\n    <TableHead className={classes.tableHead}>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all enteries\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            className={classes.headCell}\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n  headCells: PropTypes.array.isRequired,\n}\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    flexDirection: \"column\",\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n          flexDirection: \"row\",\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n          flexDirection: \"row\",\n        },\n  title: {\n    flex: \"1 1 100%\",\n    margin: theme.spacing(1),\n  },\n  searchField: {\n    margin: theme.spacing(2),\n    width: \"80%\",\n  },\n  searchColumns: {\n    margin: theme.spacing(1),\n    flexDirection: \"row\",\n  },\n}))\n\nconst EnhancedTableToolbar = ({\n  numSelected,\n  title,\n  setSelected,\n  deleteHandler,\n  selected,\n  searchState,\n  setSearchState,\n  performSearch,\n  headCells,\n}) => {\n  const classes = useToolbarStyles()\n  const searchText = searchState?.searchText || \"\"\n  const selectedIds = searchState?.searchIds || new Set()\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <>\n          <FormControl className={classes.searchField} variant=\"outlined\">\n            <InputLabel htmlFor=\"outlined-search-table\">\n              Search In Table\n            </InputLabel>\n            <OutlinedInput\n              autoComplete=\"off\"\n              id=\"outlined-search-table\"\n              type={\"text\"}\n              value={searchText}\n              onChange={({ target: { value } }) => {\n                setSearchState({\n                  searchText: value || \"\",\n                  searchIds: selectedIds,\n                })\n              }}\n              endAdornment={\n                <Tooltip title=\"Filter table\">\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"perform-search\"\n                      onClick={() => {\n                        performSearch(searchState)\n                      }}\n                      onMouseDown={(e) => {\n                        e.preventDefault()\n                      }}\n                      disabled={!searchText}\n                      edge=\"end\"\n                    >\n                      {searchText ? <SearchIcon /> : <NotInterestedIcon />}\n                    </IconButton>\n                  </InputAdornment>\n                </Tooltip>\n              }\n              labelWidth={120}\n            />\n          </FormControl>\n          {searchText && (\n            <FormControl className={classes.searchColumns}>\n              {headCells.map((cell) => {\n                const { id, label } = cell\n                return (\n                  <FormControlLabel\n                    key={id}\n                    control={\n                      <Checkbox\n                        checked={selectedIds.has(id)}\n                        onChange={({ target: { checked } }) => {\n                          checked\n                            ? selectedIds.add(id)\n                            : selectedIds.size > 1 && selectedIds.delete(id)\n                          setSearchState({\n                            searchText: searchText,\n                            searchIds: selectedIds,\n                          })\n                        }}\n                        inputProps={{ \"aria-label\": \"select all enteries\" }}\n                      />\n                    }\n                    label={label}\n                  />\n                )\n              })}\n            </FormControl>\n          )}\n        </>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton\n            aria-label=\"delete\"\n            onClick={() => {\n              deleteHandler(selected)\n              setSelected([])\n            }}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          {title}\n        </Typography>\n      )}\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  searchState: PropTypes.object.isRequired,\n  performSearch: PropTypes.func.isRequired,\n  setSearchState: PropTypes.func.isRequired,\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    width: \"100vw\",\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  tableHead: {\n    background: \"#A2DDFF\",\n  },\n  headCell: {\n    fontWeight: \"bolder\",\n  },\n  tableNote: {\n    textAlign: \"center\",\n    fontSize: 16,\n    fontWeight: \"lighter\",\n    padding: \"15px 0px\",\n    fontStyle: \"italic\",\n  },\n}))\n\nexport default function EnhancedTable({\n  allRows,\n  rows,\n  headCells,\n  deleteHandler,\n  title,\n  setFilteredRows,\n}) {\n  const primaryCellKey =\n    (headCells &&\n      Array.isArray(headCells) &&\n      headCells.length > 0 &&\n      headCells[0].id) ||\n    \"\"\n  const classes = useStyles()\n  const [order, setOrder] = useState(\"asc\")\n  const [orderBy, setOrderBy] = useState(primaryCellKey)\n  const [selected, setSelected] = useState([])\n  const [page, setPage] = useState(0)\n  const [dense, setDense] = useState(false)\n  const [rowsPerPage, setRowsPerPage] = useState(5)\n  const [searchState, setSearchState] = useState({\n    searchText: \"\",\n    searchIds: new Set([primaryCellKey]),\n  })\n\n  const handlePerformSearch = useCallback(() => {\n    const { searchText, searchIds } = searchState\n    const temp = allRows.filter((row) => {\n      let res = false\n      for (let id of searchIds) {\n        if (!res) {\n          res = row[id].includes(searchText)\n        }\n      }\n      return res\n    })\n    setFilteredRows(temp)\n    setPage(0)\n  }, [searchState, setFilteredRows, allRows])\n\n  useEffect(() => {\n    handlePerformSearch()\n  }, [handlePerformSearch])\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\"\n    setOrder(isAsc ? \"desc\" : \"asc\")\n    setOrderBy(property)\n  }\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n[primaryCellKey])\n      setSelected(newSelecteds)\n      return\n    }\n    setSelected([])\n  }\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name)\n    let newSelected = []\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name)\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1))\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1))\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      )\n    }\n    setSelected(newSelected)\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked)\n  }\n\n  const isSelected = (name) => selected.indexOf(name) !== -1\n\n  const emptyRows = rows.length === 0\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar\n          title={title}\n          numSelected={selected.length}\n          selected={selected}\n          searchState={searchState}\n          headCells={headCells}\n          performSearch={() => {\n            handlePerformSearch()\n          }}\n          deleteHandler={deleteHandler}\n          setSelected={setSelected}\n          setSearchState={setSearchState}\n        />\n        {DynamicLoader(TableContainer, {\n          children: (\n            <>\n              <Table\n                className={classes.table}\n                aria-labelledby=\"tableTitle\"\n                size={dense ? \"small\" : \"medium\"}\n                aria-label=\"enhanced table\"\n              >\n                <EnhancedTableHead\n                  classes={classes}\n                  numSelected={selected.length}\n                  order={order}\n                  orderBy={orderBy}\n                  onSelectAllClick={handleSelectAllClick}\n                  onRequestSort={handleRequestSort}\n                  rowCount={rows.length}\n                  headCells={headCells}\n                />\n                {DynamicLoader(TableBody, {\n                  children: stableSort(rows, getComparator(order, orderBy))\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((row, index) => {\n                      const isItemSelected = isSelected(row[primaryCellKey])\n                      const labelId = `enhanced-table-checkbox-${index}`\n\n                      return (\n                        <TableRow\n                          hover\n                          onClick={(event) =>\n                            handleClick(event, row[primaryCellKey])\n                          }\n                          role=\"checkbox\"\n                          aria-checked={isItemSelected}\n                          tabIndex={-1}\n                          key={row[primaryCellKey]}\n                          selected={isItemSelected}\n                        >\n                          <TableCell padding=\"checkbox\">\n                            <Checkbox\n                              checked={isItemSelected}\n                              inputProps={{ \"aria-labelledby\": labelId }}\n                            />\n                          </TableCell>\n                          {headCells.map((cell, index) => {\n                            return index === 0 ? (\n                              <TableCell\n                                key={cell.id}\n                                component=\"th\"\n                                id={labelId}\n                                scope=\"row\"\n                                padding=\"none\"\n                              >\n                                {row[cell.id]}\n                              </TableCell>\n                            ) : (\n                              <TableCell key={cell.id} align=\"left\">\n                                {row[cell.id]}\n                              </TableCell>\n                            )\n                          })}\n                        </TableRow>\n                      )\n                    }),\n                })}\n              </Table>\n              {emptyRows && (\n                <Typography className={classes.tableNote}>\n                  {searchState.searchText\n                    ? `No search results found :( `\n                    : `No data found. Please add some entries using + button`}\n                </Typography>\n              )}\n            </>\n          ),\n        })}\n        {DynamicLoader(TablePagination, {\n          rowsPerPageOptions: [5, 10, 25],\n          component: \"div\",\n          count: rows.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onChangePage: handleChangePage,\n          onChangeRowsPerPage: handleChangeRowsPerPage,\n        })}\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  )\n}\n"],"names":["TableBody","lazy","TableContainer","TablePagination","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","EnhancedTableHead","props","classes","numSelected","onSelectAllClick","onRequestSort","rowCount","headCells","className","tableHead","padding","indeterminate","checked","onChange","inputProps","headCell","align","numeric","disablePadding","sortDirection","id","active","direction","onClick","property","event","label","visuallyHidden","useToolbarStyles","makeStyles","theme","root","margin","spacing","paddingLeft","paddingRight","flexDirection","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","searchField","width","searchColumns","EnhancedTableToolbar","setSelected","deleteHandler","selected","searchState","setSearchState","performSearch","searchText","selectedIds","searchIds","Set","clsx","variant","component","htmlFor","autoComplete","value","target","endAdornment","position","onMouseDown","e","preventDefault","disabled","edge","labelWidth","cell","control","has","add","size","delete","useStyles","paper","marginBottom","table","border","clip","height","overflow","top","background","fontWeight","tableNote","textAlign","fontSize","fontStyle","EnhancedTable","allRows","rows","setFilteredRows","primaryCellKey","Array","isArray","length","useState","setOrder","setOrderBy","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handlePerformSearch","useCallback","temp","filter","row","res","includes","useEffect","emptyRows","DynamicLoader","children","newSelecteds","n","slice","name","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","tabIndex","scope","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt"],"sourceRoot":""}