"use strict";(self.webpackChunkAlgoLens=self.webpackChunkAlgoLens||[]).push([[7926],{7926:(t,e,a)=>{a.r(e),a.d(e,{default:()=>Z});var n=a(1413),s=a(2791);const c="AStarPathfinding_container__T5b7E",o="AStarPathfinding_title__CO28l",r="AStarPathfinding_legend__rwfyG",l="AStarPathfinding_legendItem__n8jhK",i="AStarPathfinding_legendBox__ZIio+",d="AStarPathfinding_controls__nCmB6",h="AStarPathfinding_controlGroup__XjqqP",_="AStarPathfinding_slider__5sBIo",u="AStarPathfinding_btnPrimary__dr37B",f="AStarPathfinding_btnSecondary__e0fd5",p="AStarPathfinding_stats__NZNVb",g="AStarPathfinding_stat__IWfuM",w="AStarPathfinding_statLabel__QJfgg",m="AStarPathfinding_statValue__oGKoa",x="AStarPathfinding_gridContainer__O07xG",j="AStarPathfinding_grid__pLS36",S="AStarPathfinding_row__drAIx",N="AStarPathfinding_cell__gITm8",v="AStarPathfinding_empty__o4tbD",P="AStarPathfinding_start__Z941h",A="AStarPathfinding_end__+cHf5",y="AStarPathfinding_wall__K8cyM",b="AStarPathfinding_open__aPz57",C="AStarPathfinding_closed__3vbwG",L="AStarPathfinding_path__vxO3V",M="AStarPathfinding_instructions__PR6db";var k=a(184);const V="empty",G="wall",E="open",I="closed",R="path",Z=()=>{const[t,e]=(0,s.useState)([]),[a,Z]=(0,s.useState)({row:5,col:5}),[z,B]=(0,s.useState)({row:14,col:34}),[O,T]=(0,s.useState)(!1),[W,D]=(0,s.useState)(!1),[K,q]=(0,s.useState)(!1),[H,J]=(0,s.useState)(20),[Q,U]=(0,s.useState)({nodesVisited:0,pathLength:0}),[X,F]=(0,s.useState)("wall"),Y=(0,s.useRef)(!1);(0,s.useEffect)((()=>{$()}),[]);const $=()=>{const t=[];for(let e=0;e<20;e++){const a=[];for(let t=0;t<40;t++)a.push({row:e,col:t,type:V,f:1/0,g:1/0,h:0,parent:null});t.push(a)}e(t),q(!1),U({nodesVisited:0,pathLength:0})},tt=(t,e)=>Math.abs(t.row-e.row)+Math.abs(t.col-e.col),et=(t,e)=>{const a=[],{row:n,col:s}=e;return[{r:-1,c:0},{r:1,c:0},{r:0,c:-1},{r:0,c:1}].forEach((e=>{let{r:c,c:o}=e;const r=n+c,l=s+o;r>=0&&r<20&&l>=0&&l<40&&a.push(t[r][l])})),a},at=t=>{const e=[];let a=t;for(;null!==a;)e.unshift(a),a=a.parent;return e},nt=()=>{T(!1)},st=(n,s)=>{if(W)return;const c=[...t],o=c[n][s];if("wall"===X){if(n===a.row&&s===a.col||n===z.row&&s===z.col)return;o.type=o.type===G?V:G}else"start"===X?(t[a.row][a.col].type!==G&&(c[a.row][a.col].type=V),Z({row:n,col:s}),o.type=V):"end"===X&&(t[z.row][z.col].type!==G&&(c[z.row][z.col].type=V),B({row:n,col:s}),o.type=V);e(c)},ct=t=>{if(t.row===a.row&&t.col===a.col)return P;if(t.row===z.row&&t.col===z.col)return A;switch(t.type){case G:return y;case E:return b;case I:return C;case R:return L;default:return v}};return(0,k.jsxs)("div",{className:c,children:[(0,k.jsx)("h1",{className:o,children:"A* Pathfinding Algorithm \ud83c\udfaf"}),(0,k.jsxs)("div",{className:r,children:[(0,k.jsxs)("div",{className:l,children:[(0,k.jsx)("div",{className:"".concat(i," ").concat(P)}),(0,k.jsx)("span",{children:"Start"})]}),(0,k.jsxs)("div",{className:l,children:[(0,k.jsx)("div",{className:"".concat(i," ").concat(A)}),(0,k.jsx)("span",{children:"End"})]}),(0,k.jsxs)("div",{className:l,children:[(0,k.jsx)("div",{className:"".concat(i," ").concat(y)}),(0,k.jsx)("span",{children:"Wall"})]}),(0,k.jsxs)("div",{className:l,children:[(0,k.jsx)("div",{className:"".concat(i," ").concat(b)}),(0,k.jsx)("span",{children:"Open Set"})]}),(0,k.jsxs)("div",{className:l,children:[(0,k.jsx)("div",{className:"".concat(i," ").concat(C)}),(0,k.jsx)("span",{children:"Closed Set"})]}),(0,k.jsxs)("div",{className:l,children:[(0,k.jsx)("div",{className:"".concat(i," ").concat(L)}),(0,k.jsx)("span",{children:"Path"})]})]}),(0,k.jsxs)("div",{className:d,children:[(0,k.jsxs)("div",{className:h,children:[(0,k.jsx)("label",{children:"Draw Mode:"}),(0,k.jsxs)("select",{value:X,onChange:t=>F(t.target.value),disabled:W,children:[(0,k.jsx)("option",{value:"wall",children:"Wall"}),(0,k.jsx)("option",{value:"start",children:"Start Point"}),(0,k.jsx)("option",{value:"end",children:"End Point"})]})]}),(0,k.jsxs)("div",{className:h,children:[(0,k.jsx)("label",{children:"Speed:"}),(0,k.jsx)("input",{type:"range",min:"0",max:"45",value:H,onChange:t=>J(Number(t.target.value)),className:_})]}),(0,k.jsx)("button",{onClick:async()=>{if(W)return;D(!0),q(!1),Y.current=!1;const s=t.map((t=>t.map((t=>(0,n.Z)((0,n.Z)({},t),{},{type:t.type===G||t.row===a.row&&t.col===a.col||t.row===z.row&&t.col===z.col?t.type:V,f:1/0,g:1/0,h:0,parent:null}))))),c=s[a.row][a.col],o=s[z.row][z.col];c.g=0,c.h=tt(c,o),c.f=c.g+c.h;const r=[c],l=new Set;let i=0;for(;r.length>0;){if(Y.current)return void D(!1);r.sort(((t,e)=>t.f-e.f));const t=r.shift();if(t.row===o.row&&t.col===o.col){const n=at(t);for(const t of n)t.row===a.row&&t.col===a.col&&t.row===z.row&&t.col===z.col||(s[t.row][t.col].type=R,e([...s]),await new Promise((t=>setTimeout(t,50-H))));return U({nodesVisited:i,pathLength:n.length-1}),q(!0),void D(!1)}l.add("".concat(t.row,",").concat(t.col)),t.row===a.row&&t.col===a.col||(s[t.row][t.col].type=I),i++;const n=et(s,t);for(const e of n){if(e.type===G||l.has("".concat(e.row,",").concat(e.col)))continue;const a=t.g+1;a<e.g&&(e.parent=t,e.g=a,e.h=tt(e,o),e.f=e.g+e.h,r.find((t=>t.row===e.row&&t.col===e.col))||(r.push(e),e.row===z.row&&e.col===z.col||(s[e.row][e.col].type=E)))}e([...s]),U({nodesVisited:i,pathLength:0}),await new Promise((t=>setTimeout(t,50-H)))}q(!0),D(!1),alert("No path found!")},disabled:W,className:u,children:W?"Running...":"Run A*"}),(0,k.jsx)("button",{onClick:()=>{Y.current=!0},disabled:!W,className:f,children:"Stop"}),(0,k.jsx)("button",{onClick:()=>{if(W)return;const n=[...t];for(let t=0;t<20;t++)for(let e=0;e<40;e++)t===a.row&&e===a.col||t===z.row&&e===z.col||(n[t][e].type=Math.random()<.3?G:V);e(n)},disabled:W,className:f,children:"Generate Maze"}),(0,k.jsx)("button",{onClick:$,disabled:W,className:f,children:"Clear Grid"})]}),(0,k.jsxs)("div",{className:p,children:[(0,k.jsxs)("div",{className:g,children:[(0,k.jsx)("span",{className:w,children:"Nodes Visited:"}),(0,k.jsx)("span",{className:m,children:Q.nodesVisited})]}),K&&Q.pathLength>0&&(0,k.jsxs)("div",{className:g,children:[(0,k.jsx)("span",{className:w,children:"Path Length:"}),(0,k.jsx)("span",{className:m,children:Q.pathLength})]})]}),(0,k.jsx)("div",{className:x,onMouseLeave:nt,children:(0,k.jsx)("div",{className:j,children:t.map(((t,e)=>(0,k.jsx)("div",{className:S,children:t.map(((t,a)=>(0,k.jsx)("div",{className:"".concat(N," ").concat(ct(t)),onMouseDown:()=>((t,e)=>{T(!0),st(t,e)})(e,a),onMouseEnter:()=>((t,e)=>{O&&st(t,e)})(e,a),onMouseUp:nt},"".concat(e,"-").concat(a))))},e)))})}),(0,k.jsxs)("div",{className:M,children:[(0,k.jsx)("h3",{children:"How to use:"}),(0,k.jsxs)("ul",{children:[(0,k.jsx)("li",{children:'Select "Wall" mode and click/drag to draw walls'}),(0,k.jsx)("li",{children:'Select "Start Point" or "End Point" mode to reposition them'}),(0,k.jsx)("li",{children:'Click "Generate Maze" for a random maze'}),(0,k.jsx)("li",{children:'Click "Run A*" to watch the algorithm find the shortest path'}),(0,k.jsx)("li",{children:"A* uses f(n) = g(n) + h(n) where g is cost from start, h is heuristic to goal"})]})]})]})}}}]);
//# sourceMappingURL=7926.19aed649.chunk.js.map