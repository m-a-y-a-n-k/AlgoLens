{"version":3,"file":"static/js/5208.8a07cbd8.chunk.js","mappings":"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","sources":["routing/site/ds/components/Lookup/index.jsx"],"sourcesContent":["import React, { lazy, useState } from \"react\"\nimport { AiOutlineCheck, AiOutlineClose, AiOutlinePlus } from \"react-icons/ai\"\nimport { DynamicLoader } from \"routing/base/Router\"\nimport { Alert } from \"reactstrap\"\n\nconst Table = lazy(() => import(`common/components/Table`))\n\nexport default function Demo() {\n  const [formKey, setFormKey] = useState(\"\")\n  const helperTextFormKey = formKey.length === 0 ? \"Required\" : \"\"\n  const [formValue, setFormValue] = useState(\"\")\n  const helperTextFormValue = formValue.length === 0 ? \"Required\" : \"\"\n  const [rows, setRows] = useState([])\n  const [filteredRows, setFilteredRows] = useState([])\n  const [showForm, setShowForm] = useState(false)\n  const [snackBar, setSnackBar] = useState({\n    open: false,\n    message: \"\",\n  })\n\n  const createData = (key, value) => {\n    return { key, value }\n  }\n\n  const headCells = [\n    {\n      id: \"key\",\n      numeric: false,\n      disablePadding: true,\n      label: \"Lookup Key\",\n    },\n    {\n      id: \"value\",\n      numeric: false,\n      disablePadding: false,\n      label: \"Lookup Value\",\n    },\n  ]\n\n  const handleCloseSnackBar = () => {\n    setSnackBar({\n      open: false,\n      message: \"\",\n    })\n  }\n\n  const handleDelete = (numSelected) => {\n    let tempArr = [...rows]\n    if (numSelected.length > 0) {\n      tempArr = tempArr.filter((ele) => {\n        return !numSelected.includes(ele.key)\n      })\n      setRows(tempArr)\n    }\n  }\n\n  const handleAddLookup = () => {\n    const temp = [...rows]\n    const entry = temp.find((e) => {\n      return e.key === formKey.trim()\n    })\n    if (entry) {\n      entry.value = formValue.trim()\n      setSnackBar({\n        open: true,\n        message: `Entry has been Updated`,\n      })\n    } else {\n      temp.push(createData(formKey.trim(), formValue.trim()))\n      setSnackBar({\n        open: true,\n        message: `Entry has been created`,\n      })\n    }\n    setRows(temp)\n    setTimeout(() => handleCloseSnackBar(), 2000)\n  }\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      {showForm ? (\n        <form className=\"lookup-form\" onSubmit={(e) => e.preventDefault()}>\n          <div className=\"mb-3\">\n            <div className=\"form-group\">\n              <label htmlFor=\"lookup-key-field\">Key *</label>\n              <input\n                type=\"text\"\n                className={`form-control ${\n                  helperTextFormKey ? \"is-invalid\" : \"\"\n                }`}\n                id=\"lookup-key-field\"\n                placeholder=\"Enter Lookup key\"\n                value={formKey}\n                onChange={({ target: { value } }) => setFormKey(value)}\n                required\n              />\n              {helperTextFormKey && (\n                <div className=\"invalid-feedback\">{helperTextFormKey}</div>\n              )}\n            </div>\n            <div className=\"form-group mt-3\">\n              <label htmlFor=\"lookup-value-field\">Value *</label>\n              <input\n                type=\"text\"\n                className={`form-control ${\n                  helperTextFormValue ? \"is-invalid\" : \"\"\n                }`}\n                id=\"lookup-value-field\"\n                placeholder=\"Enter Lookup Value\"\n                value={formValue}\n                onChange={({ target: { value } }) => setFormValue(value)}\n                required\n              />\n              {helperTextFormValue && (\n                <div className=\"invalid-feedback\">{helperTextFormValue}</div>\n              )}\n            </div>\n          </div>\n          <div className=\"d-flex justify-content-center gap-2\">\n            <button\n              type=\"button\"\n              className=\"btn btn-success\"\n              disabled={!!(helperTextFormKey || helperTextFormValue)}\n              onClick={() => {\n                handleAddLookup()\n                setShowForm(false)\n              }}\n            >\n              <AiOutlineCheck />\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              onClick={() => {\n                setShowForm(false)\n                setFormKey(\"\")\n                setFormValue(\"\")\n              }}\n            >\n              <AiOutlineClose />\n            </button>\n          </div>\n        </form>\n      ) : (\n        <button\n          className=\"btn btn-secondary rounded-circle\"\n          style={{ width: \"56px\", height: \"56px\" }}\n          onClick={() => setShowForm(true)}\n        >\n          <AiOutlinePlus size={24} />\n        </button>\n      )}\n\n      {snackBar?.open && (\n        <Alert\n          color=\"success\"\n          isOpen={snackBar.open}\n          toggle={handleCloseSnackBar}\n          className=\"mt-3\"\n        >\n          {snackBar.message}\n        </Alert>\n      )}\n\n      {DynamicLoader(Table, {\n        allRows: rows,\n        rows: filteredRows,\n        setFilteredRows: setFilteredRows,\n        headCells: headCells,\n        deleteHandler: handleDelete,\n        title: \"Lookup Mapping\",\n      })}\n    </div>\n  )\n}\n"],"names":["Table","lazy","Demo","formKey","setFormKey","useState","helperTextFormKey","length","formValue","setFormValue","helperTextFormValue","rows","setRows","filteredRows","setFilteredRows","showForm","setShowForm","snackBar","setSnackBar","open","message","handleCloseSnackBar","_jsxs","style","textAlign","children","className","onSubmit","e","preventDefault","_jsx","htmlFor","type","concat","id","placeholder","value","onChange","_ref","target","required","_ref2","disabled","onClick","handleAddLookup","temp","entry","find","key","trim","createData","push","setTimeout","AiOutlineCheck","AiOutlineClose","width","height","AiOutlinePlus","size","Alert","color","isOpen","toggle","DynamicLoader","allRows","headCells","numeric","disablePadding","label","deleteHandler","numSelected","tempArr","filter","ele","includes","title"],"sourceRoot":""}