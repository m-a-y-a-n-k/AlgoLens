{"version":3,"file":"static/js/7414.bc5caeae.chunk.js","mappings":"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","sources":["webpack://AlgoLens/./src/routing/site/games/components/Sudoku/SudokuGame.module.css?ebd2","routing/site/games/components/Sudoku/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SudokuGame_container__Ywv1T\",\"headerRow\":\"SudokuGame_headerRow__EfTRB\",\"title\":\"SudokuGame_title__GFt-c\",\"hint\":\"SudokuGame_hint__cf9hD\",\"toolbar\":\"SudokuGame_toolbar__ekc4D\",\"select\":\"SudokuGame_select__D-DYI\",\"button\":\"SudokuGame_button__bJq-r\",\"buttonActive\":\"SudokuGame_buttonActive__JENaL\",\"primaryBtn\":\"SudokuGame_primaryBtn__W22oJ\",\"timer\":\"SudokuGame_timer__gNS8q\",\"gameRow\":\"SudokuGame_gameRow__NAI5a\",\"sidePanel\":\"SudokuGame_sidePanel__P8uJ1\",\"board\":\"SudokuGame_board__I10Xa\",\"cell\":\"SudokuGame_cell__F2a6C\",\"cellFixed\":\"SudokuGame_cellFixed__cYcbq\",\"cellSelected\":\"SudokuGame_cellSelected__Hosh8\",\"cellPeer\":\"SudokuGame_cellPeer__q6WTh\",\"cellSame\":\"SudokuGame_cellSame__R3g61\",\"cellConflict\":\"SudokuGame_cellConflict__fY-v5\",\"valFixed\":\"SudokuGame_valFixed__mN5-S\",\"valUser\":\"SudokuGame_valUser__G56hE\",\"placeholder\":\"SudokuGame_placeholder__QD6pW\",\"notesGrid\":\"SudokuGame_notesGrid__FziGB\",\"note\":\"SudokuGame_note__Ix8Vl\",\"numpad\":\"SudokuGame_numpad__hTIOf\",\"numpadBtn\":\"SudokuGame_numpadBtn__2HGQx\",\"wide\":\"SudokuGame_wide__pQIJi\",\"legend\":\"SudokuGame_legend__a79Vw\",\"legendSwatch\":\"SudokuGame_legendSwatch__UgXHN\",\"swatchGiven\":\"SudokuGame_swatchGiven__yWV0f\",\"swatchSame\":\"SudokuGame_swatchSame__EBqaR\",\"swatchPeer\":\"SudokuGame_swatchPeer__tnz4e\",\"swatchConflict\":\"SudokuGame_swatchConflict__6pc4o\",\"statusBox\":\"SudokuGame_statusBox__lbZbp\",\"statusRow\":\"SudokuGame_statusRow__haMaQ\",\"solved\":\"SudokuGame_solved__48I-b\",\"filledWrong\":\"SudokuGame_filledWrong__Xr1Hf\",\"inProgress\":\"SudokuGame_inProgress__aN2qq\",\"footerNote\":\"SudokuGame_footerNote__PBet5\"};","import React, { useEffect, useMemo, useState } from \"react\"\nimport styles from \"./SudokuGame.module.css\"\n\n// ------------------------------------------------------------\n// SudokuGame (React + CSS Modules, no TypeScript)\n// Features:\n// - New Game (Easy/Medium/Hard) with generated puzzles\n// - Pencil notes, Undo/Redo, Hint, Check, Clear\n// - Conflict highlighting, row/col/box & same-number highlights\n// - Keyboard controls: arrows/WASD, 1-9, 0/Delete, Enter toggles pencil\n// - Timer with pause/resume\n// ------------------------------------------------------------\n\n// ---------- Helpers ----------\nconst deepCopy = (b) => b.map((r) => [...r])\nconst makeEmptyBoard = () => Array.from({ length: 9 }, () => Array(9).fill(0))\n\nfunction shuffle(arr) {\n  const a = [...arr]\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1))\n    ;[a[i], a[j]] = [a[j], a[i]]\n  }\n  return a\n}\n\nfunction isValid(board, row, col, num) {\n  if (num < 1 || num > 9) return false\n  for (let i = 0; i < 9; i++) {\n    if (board[row][i] === num && i !== col) return false\n    if (board[i][col] === num && i !== row) return false\n  }\n  const sr = Math.floor(row / 3) * 3\n  const sc = Math.floor(col / 3) * 3\n  for (let r = sr; r < sr + 3; r++) {\n    for (let c = sc; c < sc + 3; c++) {\n      if (board[r][c] === num && (r !== row || c !== col)) return false\n    }\n  }\n  return true\n}\n\nfunction findEmpty(board) {\n  for (let r = 0; r < 9; r++) {\n    for (let c = 0; c < 9; c++) {\n      if (board[r][c] === 0) return [r, c]\n    }\n  }\n  return null\n}\n\nfunction solveBoard(board) {\n  const empty = findEmpty(board)\n  if (!empty) return true\n  const [row, col] = empty\n  for (const num of shuffle([1, 2, 3, 4, 5, 6, 7, 8, 9])) {\n    if (isValid(board, row, col, num)) {\n      board[row][col] = num\n      if (solveBoard(board)) return true\n      board[row][col] = 0\n    }\n  }\n  return false\n}\n\nfunction generateSolved() {\n  const b = makeEmptyBoard()\n  solveBoard(b)\n  return b\n}\n\nfunction countSolutions(board, limit = 2) {\n  function helper(b, count) {\n    if (count.n >= limit) return true\n    const empty = findEmpty(b)\n    if (!empty) {\n      count.n += 1\n      return count.n >= limit\n    }\n    const [row, col] = empty\n    for (let num = 1; num <= 9; num++) {\n      if (isValid(b, row, col, num)) {\n        b[row][col] = num\n        if (helper(b, count)) return true\n        b[row][col] = 0\n      }\n    }\n    return false\n  }\n  const copy = deepCopy(board)\n  const c = { n: 0 }\n  helper(copy, c)\n  return c.n\n}\n\nfunction removeCellsForDifficulty(solved, difficulty) {\n  const removals = { Easy: 40, Medium: 50, Hard: 58 }[difficulty] || 50\n  const puzzle = deepCopy(solved)\n  const cells = shuffle(\n    Array.from({ length: 81 }, (_, i) => [Math.floor(i / 9), i % 9])\n  )\n  let removed = 0\n  for (const [r, c] of cells) {\n    if (removed >= removals) break\n    const backup = puzzle[r][c]\n    if (backup === 0) continue\n    puzzle[r][c] = 0\n    if (countSolutions(puzzle, 2) !== 1) {\n      puzzle[r][c] = backup // keep unique\n    } else {\n      removed++\n    }\n  }\n  return puzzle\n}\n\nfunction computeConflicts(board) {\n  const conflicts = new Set()\n  // rows/cols\n  for (let i = 0; i < 9; i++) {\n    const rowSeen = {}\n    const colSeen = {}\n    for (let j = 0; j < 9; j++) {\n      const rv = board[i][j]\n      const cv = board[j][i]\n      if (rv !== 0) {\n        ;(rowSeen[rv] ||= []).push(j)\n      }\n      if (cv !== 0) {\n        ;(colSeen[cv] ||= []).push(j)\n      }\n    }\n    Object.keys(rowSeen).forEach((k) => {\n      if (rowSeen[k].length > 1)\n        rowSeen[k].forEach((j) => conflicts.add(`${i},${j}`))\n    })\n    Object.keys(colSeen).forEach((k) => {\n      if (colSeen[k].length > 1)\n        colSeen[k].forEach((j) => conflicts.add(`${j},${i}`))\n    })\n  }\n  // boxes\n  for (let br = 0; br < 3; br++) {\n    for (let bc = 0; bc < 3; bc++) {\n      const seen = {}\n      for (let r = br * 3; r < br * 3 + 3; r++)\n        for (let c = bc * 3; c < bc * 3 + 3; c++) {\n          const v = board[r][c]\n          if (v !== 0) (seen[v] ||= []).push([r, c])\n        }\n      Object.keys(seen).forEach((k) => {\n        if (seen[k].length > 1)\n          seen[k].forEach(([r, c]) => conflicts.add(`${r},${c}`))\n      })\n    }\n  }\n  return conflicts\n}\n\nfunction boardEquals(a, b) {\n  for (let r = 0; r < 9; r++)\n    for (let c = 0; c < 9; c++) if (a[r][c] !== b[r][c]) return false\n  return true\n}\n\n// ---------- Component ----------\nexport default function SudokuGame() {\n  const [difficulty, setDifficulty] = useState(\"Easy\")\n  const [board, setBoard] = useState(makeEmptyBoard())\n  const [fixed, setFixed] = useState(\n    Array.from({ length: 9 }, () => Array(9).fill(false))\n  )\n  const [solution, setSolution] = useState(null)\n  const [selected, setSelected] = useState(null)\n  const [notes, setNotes] = useState(\n    Array.from({ length: 9 }, () => Array.from({ length: 9 }, () => new Set()))\n  )\n  const [pencil, setPencil] = useState(false)\n  const [history, setHistory] = useState([])\n  const [future, setFuture] = useState([])\n  const [startTime, setStartTime] = useState(null)\n  const [elapsed, setElapsed] = useState(0)\n  const [paused, setPaused] = useState(false)\n\n  const conflicts = useMemo(() => computeConflicts(board), [board])\n\n  // Timer\n  useEffect(() => {\n    if (startTime === null || paused) return\n    const id = setInterval(() => setElapsed(Date.now() - startTime), 250)\n    return () => clearInterval(id)\n  }, [startTime, paused])\n\n  function pushHistory(next) {\n    setHistory((h) => [...h, deepCopy(board)])\n    setFuture([])\n    setBoard(next)\n  }\n\n  function undo() {\n    setHistory((h) => {\n      if (h.length === 0) return h\n      const prev = h[h.length - 1]\n      setFuture((f) => [deepCopy(board), ...f])\n      setBoard(prev)\n      return h.slice(0, -1)\n    })\n  }\n\n  function redo() {\n    setFuture((f) => {\n      if (f.length === 0) return f\n      const next = f[0]\n      setHistory((h) => [...h, deepCopy(board)])\n      setBoard(next)\n      return f.slice(1)\n    })\n  }\n\n  function formatTime(ms) {\n    const s = Math.floor(ms / 1000)\n    const mm = String(Math.floor(s / 60)).padStart(2, \"0\")\n    const ss = String(s % 60).padStart(2, \"0\")\n    return `${mm}:${ss}`\n  }\n\n  function newGame(diff) {\n    const solved = generateSolved()\n    const puzzle = removeCellsForDifficulty(solved, diff)\n    const fixedMatrix = puzzle.map((row) => row.map((v) => v !== 0))\n\n    setDifficulty(diff)\n    setBoard(deepCopy(puzzle))\n    setFixed(fixedMatrix)\n    setSolution(deepCopy(solved))\n    setSelected(null)\n    setNotes(\n      Array.from({ length: 9 }, () =>\n        Array.from({ length: 9 }, () => new Set())\n      )\n    )\n    setHistory([])\n    setFuture([])\n    setStartTime(Date.now())\n    setElapsed(0)\n    setPaused(false)\n  }\n\n  useEffect(() => {\n    newGame(\"Easy\")\n  }, [])\n\n  const selectedVal = selected ? board[selected.r][selected.c] : 0\n\n  function placeNumber(num) {\n    if (!selected) return\n    const { r, c } = selected\n    if (fixed[r][c]) return\n    const next = deepCopy(board)\n    if (pencil) {\n      const n = new Set(notes[r][c])\n      if (n.has(num)) n.delete(num)\n      else n.add(num)\n      const newNotes = notes.map((row, ri) =>\n        row.map((s, ci) => (ri === r && ci === c ? n : new Set(s)))\n      )\n      setNotes(newNotes)\n      return\n    } else {\n      next[r][c] = num\n      pushHistory(next)\n      // Clear notes in peers\n      const newNotes = notes.map((row) => row.map((s) => new Set(s)))\n      for (let i = 0; i < 9; i++) newNotes[r][i].delete(num)\n      for (let i = 0; i < 9; i++) newNotes[i][c].delete(num)\n      const sr = Math.floor(r / 3) * 3\n      const sc = Math.floor(c / 3) * 3\n      for (let rr = sr; rr < sr + 3; rr++)\n        for (let cc = sc; cc < sc + 3; cc++) newNotes[rr][cc].delete(num)\n      setNotes(newNotes)\n    }\n  }\n\n  function clearCell() {\n    if (!selected) return\n    const { r, c } = selected\n    if (fixed[r][c]) return\n    const next = deepCopy(board)\n    next[r][c] = 0\n    pushHistory(next)\n  }\n\n  function fillHint() {\n    if (!solution) return\n    const empties = []\n    for (let r = 0; r < 9; r++)\n      for (let c = 0; c < 9; c++) if (board[r][c] === 0) empties.push([r, c])\n    if (empties.length === 0) return\n    const [r, c] = empties[Math.floor(Math.random() * empties.length)]\n    const next = deepCopy(board)\n    next[r][c] = solution[r][c]\n    pushHistory(next)\n  }\n\n  function checkBoard() {\n    const complete = board.flat().every((v) => v !== 0)\n    const correct = solution ? boardEquals(board, solution) : false\n    return { complete, correct }\n  }\n\n  // Keyboard\n  useEffect(() => {\n    function onKey(e) {\n      if (!selected) return\n      const { r, c } = selected\n      if (e.key >= \"1\" && e.key <= \"9\") {\n        placeNumber(parseInt(e.key, 10))\n      } else if ([\"Backspace\", \"Delete\", \"0\"].includes(e.key)) {\n        e.preventDefault()\n        clearCell()\n      } else if ([\"ArrowUp\", \"w\", \"W\"].includes(e.key)) {\n        e.preventDefault()\n        setSelected({ r: Math.max(0, r - 1), c })\n      } else if ([\"ArrowDown\", \"s\", \"S\"].includes(e.key)) {\n        e.preventDefault()\n        setSelected({ r: Math.min(8, r + 1), c })\n      } else if ([\"ArrowLeft\", \"a\", \"A\"].includes(e.key)) {\n        e.preventDefault()\n        setSelected({ r, c: Math.max(0, c - 1) })\n      } else if ([\"ArrowRight\", \"d\", \"D\"].includes(e.key)) {\n        e.preventDefault()\n        setSelected({ r, c: Math.min(8, c + 1) })\n      } else if (e.key === \"Enter\") {\n        setPencil((p) => !p)\n      }\n    }\n    window.addEventListener(\"keydown\", onKey)\n    return () => window.removeEventListener(\"keydown\", onKey)\n  }, [selected, board, pencil, notes])\n\n  // UI helpers\n  function cellClass(r, c, v) {\n    const isFixed = fixed[r][c]\n    const isSelected = selected && selected.r === r && selected.c === c\n    const sameNumber = selectedVal !== 0 && v === selectedVal\n    const inSame =\n      selected &&\n      (selected.r === r ||\n        selected.c === c ||\n        (Math.floor(selected.r / 3) === Math.floor(r / 3) &&\n          Math.floor(selected.c / 3) === Math.floor(c / 3)))\n    const isConflict = conflicts.has(`${r},${c}`)\n\n    return [\n      styles.cell,\n      isFixed ? styles.cellFixed : \"\",\n      isSelected ? styles.cellSelected : \"\",\n      inSame && !isSelected ? styles.cellPeer : \"\",\n      sameNumber && !isSelected ? styles.cellSame : \"\",\n      isConflict ? styles.cellConflict : \"\",\n    ]\n      .filter(Boolean)\n      .join(\" \")\n  }\n\n  const { complete, correct } = useMemo(() => checkBoard(), [board, solution])\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.headerRow}>\n        <div>\n          <h1 className={styles.title}>Sudoku</h1>\n          <p className={styles.hint}>\n            Keys: 1–9 fill • 0/Delete clear • Arrows/WASD move • Enter = Pencil\n          </p>\n        </div>\n        <div className={styles.toolbar}>\n          <select\n            value={difficulty}\n            onChange={(e) => setDifficulty(e.target.value)}\n            className={styles.select}\n          >\n            <option>Easy</option>\n            <option>Medium</option>\n            <option>Hard</option>\n          </select>\n          <button\n            onClick={() => newGame(difficulty)}\n            className={styles.primaryBtn}\n          >\n            New Game\n          </button>\n          <button\n            onClick={() => setPencil((p) => !p)}\n            className={`${styles.button} ${pencil ? styles.buttonActive : \"\"}`}\n            title=\"Toggle pencil mode\"\n          >\n            ✏️ {pencil ? \"Pencil On\" : \"Pencil Off\"}\n          </button>\n          <button\n            onClick={undo}\n            className={styles.button}\n            disabled={history.length === 0}\n          >\n            ⟲ Undo\n          </button>\n          <button\n            onClick={redo}\n            className={styles.button}\n            disabled={future.length === 0}\n          >\n            ⟳ Redo\n          </button>\n          <button onClick={fillHint} className={styles.button}>\n            💡 Hint\n          </button>\n          <button\n            onClick={() => setPaused((p) => !p)}\n            className={styles.button}\n          >\n            {paused ? \"▶️ Resume\" : \"⏸️ Pause\"}\n          </button>\n          <div className={styles.timer}>⏱️ {formatTime(elapsed)}</div>\n        </div>\n      </div>\n\n      <div className={styles.gameRow}>\n        {/* Board */}\n        <div className={styles.board}>\n          {Array.from({ length: 9 }, (_, r) => (\n            <React.Fragment key={r}>\n              {Array.from({ length: 9 }, (_, c) => {\n                const v = board[r][c]\n                const isFixed = fixed[r][c]\n                return (\n                  <button\n                    key={`${r}-${c}`}\n                    className={cellClass(r, c, v)}\n                    onClick={() => setSelected({ r, c })}\n                  >\n                    {v !== 0 ? (\n                      <span\n                        className={isFixed ? styles.valFixed : styles.valUser}\n                      >\n                        {v}\n                      </span>\n                    ) : notes[r][c].size > 0 ? (\n                      <div className={styles.notesGrid}>\n                        {Array.from({ length: 9 }, (_, i) => i + 1).map((n) => (\n                          <span key={n} className={styles.note}>\n                            {notes[r][c].has(n) ? n : \"\\u00A0\"}\n                          </span>\n                        ))}\n                      </div>\n                    ) : (\n                      <span className={styles.placeholder}>0</span>\n                    )}\n                  </button>\n                )\n              })}\n            </React.Fragment>\n          ))}\n        </div>\n\n        {/* Numpad */}\n        <div className={styles.sidePanel}>\n          <div className={styles.numpad}>\n            {Array.from({ length: 9 }, (_, i) => i + 1).map((n) => (\n              <button\n                key={n}\n                onClick={() => placeNumber(n)}\n                className={styles.numpadBtn}\n              >\n                {pencil ? `✏️ ${n}` : n}\n              </button>\n            ))}\n            <button\n              onClick={clearCell}\n              className={`${styles.numpadBtn} ${styles.wide}`}\n            >\n              ⌫ Clear\n            </button>\n            <button\n              onClick={() => {\n                if (complete && correct) {\n                  alert(\"🎉 Puzzle complete! Great job.\")\n                  setPaused(true)\n                } else if (complete && !correct) {\n                  alert(\n                    \"Filled but incorrect — check red conflicts or use a hint.\"\n                  )\n                } else {\n                  alert(\"Keep going — there are still empty cells.\")\n                }\n              }}\n              className={`${styles.primaryBtn} ${styles.wide}`}\n            >\n              ✅ Check Progress\n            </button>\n          </div>\n\n          <div className={styles.legend}>\n            <div>\n              <span\n                className={`${styles.legendSwatch} ${styles.swatchGiven}`}\n              ></span>{\" \"}\n              Given cell\n            </div>\n            <div>\n              <span\n                className={`${styles.legendSwatch} ${styles.swatchSame}`}\n              ></span>{\" \"}\n              Same number\n            </div>\n            <div>\n              <span\n                className={`${styles.legendSwatch} ${styles.swatchPeer}`}\n              ></span>{\" \"}\n              Same row/col/box\n            </div>\n            <div>\n              <span\n                className={`${styles.legendSwatch} ${styles.swatchConflict}`}\n              >\n                x\n              </span>{\" \"}\n              Conflict\n            </div>\n          </div>\n\n          <div className={styles.statusBox}>\n            <div className={styles.statusRow}>\n              <span>Status:</span>\n              <span\n                className={\n                  complete\n                    ? correct\n                      ? styles.solved\n                      : styles.filledWrong\n                    : styles.inProgress\n                }\n              >\n                {complete\n                  ? correct\n                    ? \"Solved\"\n                    : \"Filled but incorrect\"\n                  : \"In progress\"}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className={styles.footerNote}>\n        Pro tip: Use ✏️ pencil mode to jot candidates; press Enter to toggle\n        quickly.\n      </div>\n    </div>\n  )\n}\n"],"names":["deepCopy","b","map","r","makeEmptyBoard","Array","from","length","fill","shuffle","arr","a","i","j","Math","floor","random","isValid","board","row","col","num","sr","sc","c","findEmpty","solveBoard","empty","generateSolved","countSolutions","limit","arguments","undefined","helper","count","n","copy","SudokuGame","difficulty","setDifficulty","useState","setBoard","fixed","setFixed","solution","setSolution","selected","setSelected","notes","setNotes","Set","pencil","setPencil","history","setHistory","future","setFuture","startTime","setStartTime","elapsed","setElapsed","paused","setPaused","conflicts","useMemo","rowSeen","colSeen","rv","cv","push","Object","keys","forEach","k","add","br","bc","seen","v","_ref","computeConflicts","pushHistory","next","h","newGame","diff","solved","puzzle","removals","Easy","Medium","Hard","cells","_","removed","backup","removeCellsForDifficulty","fixedMatrix","Date","now","useEffect","id","setInterval","clearInterval","selectedVal","placeNumber","has","delete","newNotes","ri","s","ci","rr","cc","clearCell","cellClass","isFixed","isSelected","sameNumber","inSame","isConflict","styles","filter","Boolean","join","onKey","e","key","parseInt","includes","preventDefault","max","min","p","window","addEventListener","removeEventListener","complete","correct","flat","every","boardEquals","_jsxs","className","children","_jsx","value","onChange","target","onClick","title","prev","f","slice","disabled","empties","ms","String","padStart","formatTime","React","size","alert"],"sourceRoot":""}