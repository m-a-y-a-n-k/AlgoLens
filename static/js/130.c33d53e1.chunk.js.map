{"version":3,"file":"static/js/130.c33d53e1.chunk.js","mappings":"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","sources":["routing/site/physics/components/SolarSystem/PlanetContext.jsx","routing/site/physics/components/SolarSystem/SolarSystemCanvas.jsx","routing/site/physics/components/SolarSystem/index.jsx"],"sourcesContent":["import React, { createContext, useState, useContext } from \"react\"\r\n\r\nconst PlanetContext = createContext()\r\n\r\nexport const PlanetProvider = ({ children }) => {\r\n  const [planets, setPlanets] = useState([\r\n    {\r\n      name: \"Sun\",\r\n      radius: 10,\r\n      distance: 0,\r\n      speed: 0,\r\n      angle: 0,\r\n      fillColor: \"orange\",\r\n    },\r\n    {\r\n      name: \"Mercury\",\r\n      radius: 4,\r\n      distance: 27,\r\n      speed: 1.59,\r\n      angle: 0,\r\n      fillColor: \"darkred\",\r\n    },\r\n    {\r\n      name: \"Venus\",\r\n      radius: 5,\r\n      distance: 36,\r\n      speed: 1.2,\r\n      angle: 0,\r\n      fillColor: \"forestgreen\",\r\n    },\r\n    {\r\n      name: \"Earth\",\r\n      radius: 8,\r\n      distance: 50,\r\n      speed: 1,\r\n      angle: 0,\r\n      fillColor: \"aqua\",\r\n    },\r\n    {\r\n      name: \"Mars\",\r\n      radius: 7,\r\n      distance: 75,\r\n      speed: 0.8,\r\n      angle: 0,\r\n      fillColor: \"gold\",\r\n    },\r\n    {\r\n      name: \"Jupiter\",\r\n      radius: 10,\r\n      distance: 100,\r\n      speed: 0.38,\r\n      angle: 0,\r\n      fillColor: \"pink\",\r\n    },\r\n    {\r\n      name: \"Saturn\",\r\n      radius: 9,\r\n      distance: 120,\r\n      speed: 0.32,\r\n      angle: 0,\r\n      fillColor: \"wheat\",\r\n    },\r\n    {\r\n      name: \"Uranus\",\r\n      radius: 8,\r\n      distance: 150,\r\n      speed: 0.23,\r\n      angle: 0,\r\n      fillColor: \"violet\",\r\n    },\r\n    {\r\n      name: \"Neptune\",\r\n      radius: 8,\r\n      distance: 180,\r\n      speed: 0.18,\r\n      angle: 0,\r\n      fillColor: \"navy\",\r\n    },\r\n  ])\r\n\r\n  return (\r\n    <PlanetContext.Provider value={{ planets, setPlanets }}>\r\n      {children}\r\n    </PlanetContext.Provider>\r\n  )\r\n}\r\n\r\nexport const usePlanets = () => useContext(PlanetContext)\r\n","import React, { useRef, useEffect, useState } from \"react\"\r\nimport { usePlanets } from \"./PlanetContext\"\r\nimport styled from \"styled-components\"\r\n\r\n// Styled-components\r\nconst Canvas = styled.canvas`\r\n  width: 100%;\r\n  height: auto;\r\n  max-width: 600px;\r\n  border: 2px solid #fff;\r\n  background-color: #000;\r\n  display: block;\r\n  margin: 0 auto;\r\n`\r\n\r\nconst TimeElapsed = styled.div`\r\n  color: #fff;\r\n  text-align: center;\r\n  margin: 10px;\r\n  font-size: 1.2em;\r\n`\r\n\r\nconst SolarSystemCanvas = () => {\r\n  const { planets, setPlanets } = usePlanets()\r\n  const canvasRef = useRef(null)\r\n  const [elapsedDays, setElapsedDays] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current\r\n    const ctx = canvas.getContext(\"2d\")\r\n    let animationFrameId\r\n\r\n    const render = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n\r\n      planets.forEach((planet) => {\r\n        // Draw orbit\r\n        ctx.beginPath()\r\n        ctx.arc(\r\n          canvas.width / 2,\r\n          canvas.height / 2,\r\n          planet.distance,\r\n          0,\r\n          2 * Math.PI\r\n        )\r\n        ctx.strokeStyle = \"#FFFFFF\"\r\n        ctx.stroke()\r\n        ctx.closePath()\r\n\r\n        // Draw Planet\r\n        const x = canvas.width / 2 + planet.distance * Math.cos(planet.angle)\r\n        const y = canvas.height / 2 + planet.distance * Math.sin(planet.angle)\r\n\r\n        ctx.beginPath()\r\n        ctx.arc(x, y, planet.radius, 0, 2 * Math.PI)\r\n        ctx.fillStyle = planet.fillColor\r\n        ctx.fill()\r\n        ctx.closePath()\r\n\r\n        // Draw planet label\r\n        ctx.fillStyle = \"#FFFFFF\"\r\n        ctx.font = \"10px Arial\"\r\n        ctx.fillText(planet.name, x + planet.radius + 2, y)\r\n      })\r\n\r\n      setTimeout(() => {\r\n        setPlanets(\r\n          planets.map((planet) => ({\r\n            ...planet,\r\n            angle: planet.angle + (planet.speed * Math.PI) / 180,\r\n          }))\r\n        )\r\n      }, 50)\r\n    }\r\n\r\n    const animate = () => {\r\n      render()\r\n      setElapsedDays((prevDays) => prevDays + 1)\r\n      animationFrameId = requestAnimationFrame(animate)\r\n    }\r\n\r\n    animate()\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animationFrameId)\r\n    }\r\n  }, [planets, setPlanets])\r\n\r\n  return (\r\n    <>\r\n      <Canvas\r\n        ref={canvasRef}\r\n        width={400}\r\n        height={400}\r\n        className=\"solar-system-canvas\"\r\n      />\r\n      <TimeElapsed>Time Elapsed: {elapsedDays} Earth days</TimeElapsed>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SolarSystemCanvas\r\n","import React from \"react\"\r\nimport { PlanetProvider } from \"./PlanetContext\"\r\nimport SolarSystemCanvas from \"./SolarSystemCanvas\"\r\nimport styled from \"styled-components\"\r\n\r\nconst AppContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 100vh;\r\n  background-color: #282c34;\r\n  color: white;\r\n`\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2.5em;\r\n  margin: 0;\r\n  padding: 20px;\r\n  text-align: center;\r\n  color: #fbac61;\r\n`\r\n\r\nconst App = () => {\r\n  return (\r\n    <PlanetProvider>\r\n      <AppContainer>\r\n        <Title>Solar System Planetary Motion</Title>\r\n        <SolarSystemCanvas />\r\n      </AppContainer>\r\n    </PlanetProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n"],"names":["PlanetContext","createContext","PlanetProvider","_ref","children","planets","setPlanets","useState","name","radius","distance","speed","angle","fillColor","_jsx","Provider","value","Canvas","styled","TimeElapsed","SolarSystemCanvas","useContext","canvasRef","useRef","elapsedDays","setElapsedDays","useEffect","canvas","current","ctx","getContext","animationFrameId","animate","clearRect","width","height","forEach","planet","beginPath","arc","Math","PI","strokeStyle","stroke","closePath","x","cos","y","sin","fillStyle","fill","font","fillText","setTimeout","map","prevDays","requestAnimationFrame","cancelAnimationFrame","_jsxs","_Fragment","ref","className","AppContainer","Title","App"],"sourceRoot":""}