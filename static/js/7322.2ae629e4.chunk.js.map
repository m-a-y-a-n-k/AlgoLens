{"version":3,"file":"static/js/7322.2ae629e4.chunk.js","mappings":"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","sources":["routing/site/physics/components/SolarSystem/PlanetContext.jsx","routing/site/physics/components/SolarSystem/SolarSystemCanvas.jsx","routing/site/physics/components/SolarSystem/index.jsx"],"sourcesContent":["import React, { createContext, useState, useContext } from \"react\"\r\n\r\nconst PlanetContext = createContext()\r\n\r\nexport const PlanetProvider = ({ children }) => {\r\n  const [planets, setPlanets] = useState([\r\n    {\r\n      name: \"Sun\",\r\n      radius: 20,\r\n      distance: 0,\r\n      speed: 0,\r\n      angle: 0,\r\n      fillColor: \"orange\",\r\n    },\r\n    {\r\n      name: \"Mercury\",\r\n      radius: 5,\r\n      distance: 50,\r\n      speed: 1.59,\r\n      angle: 0,\r\n      fillColor: \"darkred\",\r\n    },\r\n    {\r\n      name: \"Venus\",\r\n      radius: 6,\r\n      distance: 70,\r\n      speed: 1.2,\r\n      angle: 0,\r\n      fillColor: \"forestgreen\",\r\n    },\r\n    {\r\n      name: \"Earth\",\r\n      radius: 8,\r\n      distance: 100,\r\n      speed: 1,\r\n      angle: 0,\r\n      fillColor: \"aqua\",\r\n    },\r\n    {\r\n      name: \"Mars\",\r\n      radius: 7,\r\n      distance: 150,\r\n      speed: 0.8,\r\n      angle: 0,\r\n      fillColor: \"gold\",\r\n    },\r\n    {\r\n      name: \"Jupiter\",\r\n      radius: 12,\r\n      distance: 200,\r\n      speed: 0.38,\r\n      angle: 0,\r\n      fillColor: \"pink\",\r\n    },\r\n    {\r\n      name: \"Saturn\",\r\n      radius: 10,\r\n      distance: 250,\r\n      speed: 0.32,\r\n      angle: 0,\r\n      fillColor: \"wheat\",\r\n    },\r\n    {\r\n      name: \"Uranus\",\r\n      radius: 9,\r\n      distance: 300,\r\n      speed: 0.23,\r\n      angle: 0,\r\n      fillColor: \"violet\",\r\n    },\r\n    {\r\n      name: \"Neptune\",\r\n      radius: 9,\r\n      distance: 350,\r\n      speed: 0.18,\r\n      angle: 0,\r\n      fillColor: \"navy\",\r\n    },\r\n  ])\r\n\r\n  return (\r\n    <PlanetContext.Provider value={{ planets, setPlanets }}>\r\n      {children}\r\n    </PlanetContext.Provider>\r\n  )\r\n}\r\n\r\nexport const usePlanets = () => useContext(PlanetContext)\r\n","import React, { useRef, useEffect, useState } from \"react\"\r\nimport { usePlanets } from \"./PlanetContext\"\r\nimport \"./SolarSystemCanvas.css\"\r\n\r\nconst SolarSystemCanvas = () => {\r\n  const { planets, setPlanets } = usePlanets()\r\n  const canvasRef = useRef(null)\r\n  const [elapsedDays, setElapsedDays] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current\r\n    const ctx = canvas.getContext(\"2d\")\r\n    let animationFrameId\r\n\r\n    const render = () => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n\r\n      planets.forEach((planet) => {\r\n        // Draw orbit\r\n        ctx.beginPath()\r\n        ctx.arc(\r\n          canvas.width / 2,\r\n          canvas.height / 2,\r\n          planet.distance,\r\n          0,\r\n          2 * Math.PI\r\n        )\r\n        ctx.strokeStyle = \"#FFFFFF\"\r\n        ctx.stroke()\r\n        ctx.closePath()\r\n\r\n        // Draw Planet\r\n        const x = canvas.width / 2 + planet.distance * Math.cos(planet.angle)\r\n        const y = canvas.height / 2 + planet.distance * Math.sin(planet.angle)\r\n\r\n        ctx.beginPath()\r\n        ctx.arc(x, y, planet.radius, 0, 2 * Math.PI)\r\n        ctx.fillStyle = planet.fillColor\r\n        ctx.fill()\r\n        ctx.closePath()\r\n\r\n        // Draw planet label\r\n        ctx.fillStyle = \"#FFFFFF\"\r\n        ctx.font = \"10px Arial\"\r\n        ctx.fillText(planet.name, x + planet.radius + 2, y)\r\n      })\r\n\r\n      setTimeout(() => {\r\n        setPlanets(\r\n          planets.map((planet) => ({\r\n            ...planet,\r\n            angle: planet.angle + (planet.speed * Math.PI) / 180,\r\n          }))\r\n        )\r\n      }, 50)\r\n    }\r\n    // Increment elapsed days based on Earth's speed (assuming 1 day per frame for simplicity)\r\n    setElapsedDays((prevDays) => prevDays + 1)\r\n    animationFrameId = requestAnimationFrame(render)\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animationFrameId)\r\n    }\r\n  }, [planets, setPlanets])\r\n\r\n  return (\r\n    <>\r\n      <canvas\r\n        ref={canvasRef}\r\n        width=\"800\"\r\n        height=\"800\"\r\n        className=\"solar-system-canvas\"\r\n      />\r\n      <div className=\"time-elapsed\">Time Elapsed: {elapsedDays} Earth days</div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SolarSystemCanvas\r\n","import React from \"react\"\r\nimport { PlanetProvider } from \"./PlanetContext\"\r\nimport SolarSystemCanvas from \"./SolarSystemCanvas\"\r\n\r\nconst App = () => {\r\n  return (\r\n    <PlanetProvider>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: 16,\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <h1>Solar System Planetary Motion</h1>\r\n        <SolarSystemCanvas />\r\n      </div>\r\n    </PlanetProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n"],"names":["PlanetContext","createContext","PlanetProvider","_ref","children","planets","setPlanets","useState","name","radius","distance","speed","angle","fillColor","_jsx","Provider","value","SolarSystemCanvas","useContext","canvasRef","useRef","elapsedDays","setElapsedDays","useEffect","canvas","current","ctx","getContext","animationFrameId","prevDays","requestAnimationFrame","render","clearRect","width","height","forEach","planet","beginPath","arc","Math","PI","strokeStyle","stroke","closePath","x","cos","y","sin","fillStyle","fill","font","fillText","setTimeout","map","cancelAnimationFrame","_jsxs","_Fragment","ref","className","App","style","display","flexDirection","gap","alignItems","justifyContent"],"sourceRoot":""}